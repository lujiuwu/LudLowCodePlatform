{"version":3,"file":"js/chunk-element-plus-5332fba1.e77cd237.js","mappings":"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","sources":["webpack://lud/../../../packages/constants/aria.ts","webpack://lud/../../../packages/constants/size.ts","webpack://lud/../../../packages/components/switch/src/switch.ts","webpack://lud/../../../packages/components/switch/src/switch.vue","webpack://lud/../../../packages/components/switch/index.ts","webpack://lud/../../../packages/components/tag/src/tag.vue","webpack://lud/../../../packages/components/tag/index.ts","webpack://lud/../../../packages/components/tag/src/tag.ts","webpack://lud/../../../packages/components/table/src/util.ts","webpack://lud/../../../packages/components/table/src/store/expand.ts","webpack://lud/../../../packages/components/table/src/store/current.ts","webpack://lud/../../../packages/components/table/src/store/tree.ts","webpack://lud/../../../packages/components/table/src/store/watcher.ts","webpack://lud/../../../packages/components/table/src/store/index.ts","webpack://lud/../../../packages/components/table/src/store/helper.ts","webpack://lud/../../../packages/components/table/src/table-layout.ts","webpack://lud/../../../packages/components/table/src/filter-panel.vue","webpack://lud/../../../packages/components/table/src/layout-observer.ts","webpack://lud/../../../packages/components/table/src/tokens.ts","webpack://lud/../../../packages/components/table/src/table-header/event-helper.ts","webpack://lud/../../../packages/components/table/src/table-header/style.helper.ts","webpack://lud/../../../packages/components/table/src/table-header/utils-helper.ts","webpack://lud/../../../packages/components/table/src/table-header/index.ts","webpack://lud/../../../packages/components/table/src/table-body/events-helper.ts","webpack://lud/../../../packages/components/table/src/table-body/styles-helper.ts","webpack://lud/../../../packages/components/table/src/table-body/td-wrapper.vue","webpack://lud/../../../packages/components/table/src/table-body/render-helper.ts","webpack://lud/../../../packages/components/table/src/table-body/defaults.ts","webpack://lud/../../../packages/components/table/src/table-body/index.ts","webpack://lud/../../../packages/components/table/src/table-footer/mapState-helper.ts","webpack://lud/../../../packages/components/table/src/table-footer/style-helper.ts","webpack://lud/../../../packages/components/table/src/table-footer/index.ts","webpack://lud/../../../packages/components/table/src/table/utils-helper.ts","webpack://lud/../../../packages/components/table/src/table/style-helper.ts","webpack://lud/../../../packages/components/table/src/table/key-render-helper.ts","webpack://lud/../../../packages/components/table/src/table/defaults.ts","webpack://lud/../../../packages/components/table/src/h-helper.ts","webpack://lud/../../../packages/components/table/src/composables/use-scrollbar.ts","webpack://lud/../../../packages/components/table/src/table.vue","webpack://lud/../../../packages/components/table/src/config.ts","webpack://lud/../../../packages/components/table/src/table-column/watcher-helper.ts","webpack://lud/../../../packages/components/table/src/table-column/render-helper.ts","webpack://lud/../../../packages/components/table/src/table-column/defaults.ts","webpack://lud/../../../packages/components/table/src/table-column/index.ts","webpack://lud/../../../packages/components/table/index.ts","webpack://lud/../../../packages/constants/form.ts","webpack://lud/../../../packages/components/tooltip/src/content.ts","webpack://lud/../../../packages/components/tabs/src/constants.ts","webpack://lud/../../../packages/components/tabs/src/tab-bar.ts","webpack://lud/../../../packages/components/tabs/src/tab-bar.vue","webpack://lud/../../../packages/components/tabs/src/tab-nav.tsx","webpack://lud/../../../packages/components/tabs/src/tabs.tsx","webpack://lud/../../../packages/components/tabs/src/tab-pane.ts","webpack://lud/../../../packages/components/tabs/src/tab-pane.vue","webpack://lud/../../../packages/components/tabs/index.ts","webpack://lud/../../../packages/components/teleport/src/teleport.ts","webpack://lud/../../../packages/constants/event.ts","webpack://lud/../../../packages/components/teleport/index.ts","webpack://lud/../../../packages/components/tooltip/src/constants.ts","webpack://lud/../../../packages/components/tooltip/src/trigger.ts","webpack://lud/../../../packages/components/tooltip/src/tooltip.ts","webpack://lud/../../../packages/components/tooltip/src/utils.ts","webpack://lud/../../../packages/components/tooltip/src/trigger.vue","webpack://lud/../../../packages/components/tooltip/src/content.vue","webpack://lud/../../../packages/components/tooltip/src/tooltip.vue","webpack://lud/../../../packages/components/tooltip/index.ts"],"sourcesContent":["export const EVENT_CODE = {\n  tab: 'Tab',\n  enter: 'Enter',\n  space: 'Space',\n  left: 'ArrowLeft', // 37\n  up: 'ArrowUp', // 38\n  right: 'ArrowRight', // 39\n  down: 'ArrowDown', // 40\n  esc: 'Escape',\n  delete: 'Delete',\n  backspace: 'Backspace',\n  numpadEnter: 'NumpadEnter',\n  pageUp: 'PageUp',\n  pageDown: 'PageDown',\n  home: 'Home',\n  end: 'End',\n}\n","export const componentSizes = ['', 'default', 'small', 'large'] as const\n\nexport type ComponentSize = typeof componentSizes[number]\n\nexport const componentSizeMap = {\n  large: 40,\n  default: 32,\n  small: 24,\n} as const\n","import {\n  buildProps,\n  definePropType,\n  iconPropType,\n  isBoolean,\n  isNumber,\n  isString,\n  isValidComponentSize,\n} from '@element-plus/utils'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport { useAriaProps } from '@element-plus/hooks'\n\nimport type { ComponentSize } from '@element-plus/constants'\nimport type Switch from './switch.vue'\nimport type { ExtractPropTypes, PropType, __ExtractPublicPropTypes } from 'vue'\n\nexport const switchProps = buildProps({\n  /**\n   * @description binding value, it should be equivalent to either `active-value` or `inactive-value`, by default it's `boolean` type\n   */\n  modelValue: {\n    type: [Boolean, String, Number],\n    default: false,\n  },\n  /**\n   * @description whether Switch is disabled\n   */\n  disabled: Boolean,\n  /**\n   * @description whether Switch is in loading state\n   */\n  loading: Boolean,\n  /**\n   * @description size of Switch\n   */\n  size: {\n    type: String as PropType<ComponentSize>,\n    validator: isValidComponentSize,\n  },\n  /**\n   * @description width of Switch\n   */\n  width: {\n    type: [String, Number],\n    default: '',\n  },\n  /**\n   * @description whether icon or text is displayed inside dot, only the first character will be rendered for text\n   */\n  inlinePrompt: Boolean,\n  /**\n   * @description component of the icon displayed in action when in `off` state\n   */\n  inactiveActionIcon: {\n    type: iconPropType,\n  },\n  /**\n   * @description component of the icon displayed in action when in `on` state\n   */\n  activeActionIcon: {\n    type: iconPropType,\n  },\n  /**\n   * @description component of the icon displayed when in `on` state, overrides `active-text`\n   */\n  activeIcon: {\n    type: iconPropType,\n  },\n  /**\n   * @description component of the icon displayed when in `off` state, overrides `inactive-text`\n   */\n  inactiveIcon: {\n    type: iconPropType,\n  },\n  /**\n   * @description text displayed when in `on` state\n   */\n  activeText: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description text displayed when in `off` state\n   */\n  inactiveText: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description switch value when in `on` state\n   */\n  activeValue: {\n    type: [Boolean, String, Number],\n    default: true,\n  },\n  /**\n   * @description switch value when in `off` state\n   */\n  inactiveValue: {\n    type: [Boolean, String, Number],\n    default: false,\n  },\n  /**\n   * @description input name of Switch\n   */\n  name: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description whether to trigger form validation\n   */\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description before-change hook before the switch state changes. If `false` is returned or a `Promise` is returned and then is rejected, will stop switching\n   */\n  beforeChange: {\n    type: definePropType<() => Promise<boolean> | boolean>(Function),\n  },\n  /**\n   * @description id for input\n   */\n  id: String,\n  /**\n   * @description tabindex for input\n   */\n  tabindex: {\n    type: [String, Number],\n  },\n  ...useAriaProps(['ariaLabel']),\n} as const)\n\nexport type SwitchProps = ExtractPropTypes<typeof switchProps>\nexport type SwitchPropsPublic = __ExtractPublicPropTypes<typeof switchProps>\n\nexport const switchEmits = {\n  [UPDATE_MODEL_EVENT]: (val: boolean | string | number) =>\n    isBoolean(val) || isString(val) || isNumber(val),\n  [CHANGE_EVENT]: (val: boolean | string | number) =>\n    isBoolean(val) || isString(val) || isNumber(val),\n  [INPUT_EVENT]: (val: boolean | string | number) =>\n    isBoolean(val) || isString(val) || isNumber(val),\n}\nexport type SwitchEmits = typeof switchEmits\n\nexport type SwitchInstance = InstanceType<typeof Switch> & unknown\n","<template>\n  <div :class=\"switchKls\" @click.prevent=\"switchValue\">\n    <input\n      :id=\"inputId\"\n      ref=\"input\"\n      :class=\"ns.e('input')\"\n      type=\"checkbox\"\n      role=\"switch\"\n      :aria-checked=\"checked\"\n      :aria-disabled=\"switchDisabled\"\n      :aria-label=\"ariaLabel\"\n      :name=\"name\"\n      :true-value=\"activeValue\"\n      :false-value=\"inactiveValue\"\n      :disabled=\"switchDisabled\"\n      :tabindex=\"tabindex\"\n      @change=\"handleChange\"\n      @keydown.enter=\"switchValue\"\n    />\n    <span\n      v-if=\"!inlinePrompt && (inactiveIcon || inactiveText)\"\n      :class=\"labelLeftKls\"\n    >\n      <el-icon v-if=\"inactiveIcon\">\n        <component :is=\"inactiveIcon\" />\n      </el-icon>\n      <span v-if=\"!inactiveIcon && inactiveText\" :aria-hidden=\"checked\">{{\n        inactiveText\n      }}</span>\n    </span>\n    <span ref=\"core\" :class=\"ns.e('core')\" :style=\"coreStyle\">\n      <div v-if=\"inlinePrompt\" :class=\"ns.e('inner')\">\n        <template v-if=\"activeIcon || inactiveIcon\">\n          <el-icon :class=\"ns.is('icon')\">\n            <component :is=\"checked ? activeIcon : inactiveIcon\" />\n          </el-icon>\n        </template>\n        <template v-else-if=\"activeText || inactiveText\">\n          <span :class=\"ns.is('text')\" :aria-hidden=\"!checked\">\n            {{ checked ? activeText : inactiveText }}\n          </span>\n        </template>\n      </div>\n      <div :class=\"ns.e('action')\">\n        <el-icon v-if=\"loading\" :class=\"ns.is('loading')\">\n          <loading />\n        </el-icon>\n        <slot v-else-if=\"checked\" name=\"active-action\">\n          <el-icon v-if=\"activeActionIcon\">\n            <component :is=\"activeActionIcon\" />\n          </el-icon>\n        </slot>\n        <slot v-else-if=\"!checked\" name=\"inactive-action\">\n          <el-icon v-if=\"inactiveActionIcon\">\n            <component :is=\"inactiveActionIcon\" />\n          </el-icon>\n        </slot>\n      </div>\n    </span>\n    <span\n      v-if=\"!inlinePrompt && (activeIcon || activeText)\"\n      :class=\"labelRightKls\"\n    >\n      <el-icon v-if=\"activeIcon\">\n        <component :is=\"activeIcon\" />\n      </el-icon>\n      <span v-if=\"!activeIcon && activeText\" :aria-hidden=\"!checked\">{{\n        activeText\n      }}</span>\n    </span>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, nextTick, onMounted, ref, watch } from 'vue'\nimport {\n  addUnit,\n  debugWarn,\n  isBoolean,\n  isPromise,\n  throwError,\n} from '@element-plus/utils'\nimport ElIcon from '@element-plus/components/icon'\nimport {\n  useFormDisabled,\n  useFormItem,\n  useFormItemInputId,\n  useFormSize,\n} from '@element-plus/components/form'\nimport { Loading } from '@element-plus/icons-vue'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport { useNamespace } from '@element-plus/hooks'\nimport { switchEmits, switchProps } from './switch'\n\nimport type { CSSProperties } from 'vue'\n\nconst COMPONENT_NAME = 'ElSwitch'\ndefineOptions({\n  name: COMPONENT_NAME,\n})\n\nconst props = defineProps(switchProps)\nconst emit = defineEmits(switchEmits)\n\nconst { formItem } = useFormItem()\nconst switchSize = useFormSize()\nconst ns = useNamespace('switch')\n\nconst { inputId } = useFormItemInputId(props, {\n  formItemContext: formItem,\n})\n\nconst switchDisabled = useFormDisabled(computed(() => props.loading))\nconst isControlled = ref(props.modelValue !== false)\nconst input = ref<HTMLInputElement>()\nconst core = ref<HTMLSpanElement>()\n\nconst switchKls = computed(() => [\n  ns.b(),\n  ns.m(switchSize.value),\n  ns.is('disabled', switchDisabled.value),\n  ns.is('checked', checked.value),\n])\n\nconst labelLeftKls = computed(() => [\n  ns.e('label'),\n  ns.em('label', 'left'),\n  ns.is('active', !checked.value),\n])\n\nconst labelRightKls = computed(() => [\n  ns.e('label'),\n  ns.em('label', 'right'),\n  ns.is('active', checked.value),\n])\n\nconst coreStyle = computed<CSSProperties>(() => ({\n  width: addUnit(props.width),\n}))\n\nwatch(\n  () => props.modelValue,\n  () => {\n    isControlled.value = true\n  }\n)\n\nconst actualValue = computed(() => {\n  return isControlled.value ? props.modelValue : false\n})\n\nconst checked = computed(() => actualValue.value === props.activeValue)\n\nif (![props.activeValue, props.inactiveValue].includes(actualValue.value)) {\n  emit(UPDATE_MODEL_EVENT, props.inactiveValue)\n  emit(CHANGE_EVENT, props.inactiveValue)\n  emit(INPUT_EVENT, props.inactiveValue)\n}\n\nwatch(checked, (val) => {\n  input.value!.checked = val\n\n  if (props.validateEvent) {\n    formItem?.validate?.('change').catch((err) => debugWarn(err))\n  }\n})\n\nconst handleChange = () => {\n  const val = checked.value ? props.inactiveValue : props.activeValue\n  emit(UPDATE_MODEL_EVENT, val)\n  emit(CHANGE_EVENT, val)\n  emit(INPUT_EVENT, val)\n  nextTick(() => {\n    input.value!.checked = checked.value\n  })\n}\n\nconst switchValue = () => {\n  if (switchDisabled.value) return\n\n  const { beforeChange } = props\n  if (!beforeChange) {\n    handleChange()\n    return\n  }\n\n  const shouldChange = beforeChange()\n\n  const isPromiseOrBool = [\n    isPromise(shouldChange),\n    isBoolean(shouldChange),\n  ].includes(true)\n  if (!isPromiseOrBool) {\n    throwError(\n      COMPONENT_NAME,\n      'beforeChange must return type `Promise<boolean>` or `boolean`'\n    )\n  }\n\n  if (isPromise(shouldChange)) {\n    shouldChange\n      .then((result) => {\n        if (result) {\n          handleChange()\n        }\n      })\n      .catch((e) => {\n        debugWarn(COMPONENT_NAME, `some error occurred: ${e}`)\n      })\n  } else if (shouldChange) {\n    handleChange()\n  }\n}\n\nconst focus = (): void => {\n  input.value?.focus?.()\n}\n\nonMounted(() => {\n  input.value!.checked = checked.value\n})\n\ndefineExpose({\n  /**\n   *  @description manual focus to the switch component\n   **/\n  focus,\n  /**\n   * @description whether Switch is checked\n   */\n  checked,\n})\n</script>\n","import { withInstall } from '@element-plus/utils'\nimport Switch from './src/switch.vue'\n\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nexport const ElSwitch: SFCWithInstall<typeof Switch> = withInstall(Switch)\nexport default ElSwitch\n\nexport * from './src/switch'\n","<template>\n  <span\n    v-if=\"disableTransitions\"\n    :class=\"containerKls\"\n    :style=\"{ backgroundColor: color }\"\n    @click=\"handleClick\"\n  >\n    <span :class=\"ns.e('content')\">\n      <slot />\n    </span>\n    <el-icon v-if=\"closable\" :class=\"ns.e('close')\" @click.stop=\"handleClose\">\n      <Close />\n    </el-icon>\n  </span>\n  <transition\n    v-else\n    :name=\"`${ns.namespace.value}-zoom-in-center`\"\n    appear\n    @vue:mounted=\"handleVNodeMounted\"\n  >\n    <span\n      :class=\"containerKls\"\n      :style=\"{ backgroundColor: color }\"\n      @click=\"handleClick\"\n    >\n      <span :class=\"ns.e('content')\">\n        <slot />\n      </span>\n      <el-icon v-if=\"closable\" :class=\"ns.e('close')\" @click.stop=\"handleClose\">\n        <Close />\n      </el-icon>\n    </span>\n  </transition>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport ElIcon from '@element-plus/components/icon'\nimport { Close } from '@element-plus/icons-vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useFormSize } from '@element-plus/components/form'\nimport { tagEmits, tagProps } from './tag'\n\nimport type { VNode } from 'vue'\n\ndefineOptions({\n  name: 'ElTag',\n})\nconst props = defineProps(tagProps)\nconst emit = defineEmits(tagEmits)\n\nconst tagSize = useFormSize()\nconst ns = useNamespace('tag')\nconst containerKls = computed(() => {\n  const { type, hit, effect, closable, round } = props\n  return [\n    ns.b(),\n    ns.is('closable', closable),\n    ns.m(type || 'primary'),\n    ns.m(tagSize.value),\n    ns.m(effect),\n    ns.is('hit', hit),\n    ns.is('round', round),\n  ]\n})\n\n// methods\nconst handleClose = (event: MouseEvent) => {\n  emit('close', event)\n}\n\nconst handleClick = (event: MouseEvent) => {\n  emit('click', event)\n}\n\nconst handleVNodeMounted = (vnode: VNode) => {\n  // @ts-ignore\n  if (vnode?.component?.subTree?.component?.bum) {\n    // @ts-ignore\n    vnode.component.subTree.component.bum = null\n  }\n}\n</script>\n","import { withInstall } from '@element-plus/utils'\nimport Tag from './src/tag.vue'\n\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nexport const ElTag: SFCWithInstall<typeof Tag> = withInstall(Tag)\nexport default ElTag\n\nexport * from './src/tag'\n","import { buildProps } from '@element-plus/utils'\nimport { componentSizes } from '@element-plus/constants'\n\nimport type Tag from './tag.vue'\nimport type { ExtractPropTypes, __ExtractPublicPropTypes } from 'vue'\n\nexport const tagProps = buildProps({\n  /**\n   * @description type of Tag\n   */\n  type: {\n    type: String,\n    values: ['primary', 'success', 'info', 'warning', 'danger'],\n    default: 'primary',\n  },\n  /**\n   * @description whether Tag can be removed\n   */\n  closable: Boolean,\n  /**\n   * @description whether to disable animations\n   */\n  disableTransitions: Boolean,\n  /**\n   * @description whether Tag has a highlighted border\n   */\n  hit: Boolean,\n  /**\n   * @description background color of the Tag\n   */\n  color: String,\n  /**\n   * @description size of Tag\n   */\n  size: {\n    type: String,\n    values: componentSizes,\n  },\n  /**\n   * @description theme of Tag\n   */\n  effect: {\n    type: String,\n    values: ['dark', 'light', 'plain'],\n    default: 'light',\n  },\n  /**\n   * @description whether Tag is rounded\n   */\n  round: Boolean,\n} as const)\nexport type TagProps = ExtractPropTypes<typeof tagProps>\nexport type TagPropsPublic = __ExtractPublicPropTypes<typeof tagProps>\n\nexport const tagEmits = {\n  close: (evt: MouseEvent) => evt instanceof MouseEvent,\n  click: (evt: MouseEvent) => evt instanceof MouseEvent,\n}\nexport type TagEmits = typeof tagEmits\n\nexport type TagInstance = InstanceType<typeof Tag> & unknown\n","import { createVNode, isVNode, render } from 'vue'\nimport { flatMap, get, isNull, merge } from 'lodash-unified'\nimport {\n  ensureArray,\n  getProp,\n  hasOwn,\n  isArray,\n  isBoolean,\n  isFunction,\n  isNumber,\n  isObject,\n  isString,\n  isUndefined,\n  throwError,\n} from '@element-plus/utils'\nimport ElTooltip, {\n  type ElTooltipProps,\n} from '@element-plus/components/tooltip'\n\nimport type { DefaultRow, Table, TreeProps } from './table/defaults'\nimport type { TableColumnCtx } from './table-column/defaults'\nimport type { CSSProperties, VNode } from 'vue'\n\nexport type TableOverflowTooltipOptions = Partial<\n  Pick<\n    ElTooltipProps,\n    | 'appendTo'\n    | 'effect'\n    | 'enterable'\n    | 'hideAfter'\n    | 'offset'\n    | 'placement'\n    | 'popperClass'\n    | 'popperOptions'\n    | 'showAfter'\n    | 'showArrow'\n    | 'transition'\n  >\n>\n\nexport type TableOverflowTooltipFormatter<T extends DefaultRow> = (data: {\n  row: T\n  column: TableColumnCtx<T>\n  cellValue: any\n}) => VNode | string\n\ntype RemovePopperFn = (() => void) & {\n  trigger?: HTMLElement\n  vm?: VNode\n}\n\ntype CompareValue<T> = {\n  value: T\n  index: number\n  key: any[] | null\n}\n\nexport const getCell = function (event: Event) {\n  return (event.target as HTMLElement)?.closest('td')\n}\n\nexport const orderBy = function <T extends DefaultRow>(\n  array: T[],\n  sortKey: string | null,\n  reverse: string | number | null,\n  sortMethod: TableColumnCtx<T>['sortMethod'] | null,\n  sortBy: string | string[] | ((a: T, index: number, array?: T[]) => string)\n) {\n  if (\n    !sortKey &&\n    !sortMethod &&\n    (!sortBy || (isArray(sortBy) && !sortBy.length))\n  ) {\n    return array\n  }\n  if (isString(reverse)) {\n    reverse = reverse === 'descending' ? -1 : 1\n  } else {\n    reverse = reverse && reverse < 0 ? -1 : 1\n  }\n  const getKey = sortMethod\n    ? null\n    : function (value: T, index: number) {\n        if (sortBy) {\n          return flatMap(ensureArray(sortBy), (by) => {\n            if (isString(by)) {\n              return get(value, by)\n            } else {\n              return by(value, index, array)\n            }\n          })\n        }\n        if (sortKey !== '$key') {\n          if (isObject(value) && '$value' in value) value = value.$value\n        }\n        return [\n          isObject(value) ? (sortKey ? get(value, sortKey) : null) : value,\n        ]\n      }\n  const compare = function (a: CompareValue<T>, b: CompareValue<T>) {\n    if (sortMethod) {\n      return sortMethod(a.value, b.value)\n    }\n    for (let i = 0, len = a.key?.length ?? 0; i < len; i++) {\n      if (a.key?.[i] < b.key?.[i]) {\n        return -1\n      }\n      if (a.key?.[i] > b.key?.[i]) {\n        return 1\n      }\n    }\n    return 0\n  }\n  return array\n    .map<CompareValue<T>>((value: T, index) => {\n      return {\n        value,\n        index,\n        key: getKey ? getKey(value, index) : null,\n      }\n    })\n    .sort((a, b) => {\n      let order = compare(a, b)\n      if (!order) {\n        // make stable https://en.wikipedia.org/wiki/Sorting_algorithm#Stability\n        order = a.index - b.index\n      }\n      return order * +reverse\n    })\n    .map((item) => item.value)\n}\n\nexport const getColumnById = function <T extends DefaultRow>(\n  table: {\n    columns: TableColumnCtx<T>[]\n  },\n  columnId: string\n): null | TableColumnCtx<T> {\n  let column = null\n  table.columns.forEach((item) => {\n    if (item.id === columnId) {\n      column = item\n    }\n  })\n  return column\n}\n\nexport const getColumnByKey = function <T extends DefaultRow>(\n  table: {\n    columns: TableColumnCtx<T>[]\n  },\n  columnKey: string\n): TableColumnCtx<T> {\n  let column = null\n  for (let i = 0; i < table.columns.length; i++) {\n    const item = table.columns[i]\n    if (item.columnKey === columnKey) {\n      column = item\n      break\n    }\n  }\n  if (!column)\n    throwError('ElTable', `No column matching with column-key: ${columnKey}`)\n  return column\n}\n\nexport const getColumnByCell = function <T extends DefaultRow>(\n  table: {\n    columns: TableColumnCtx<T>[]\n  },\n  cell: HTMLElement,\n  namespace: string\n): null | TableColumnCtx<T> {\n  const matches = (cell.className || '').match(\n    new RegExp(`${namespace}-table_[^\\\\s]+`, 'gm')\n  )\n  if (matches) {\n    return getColumnById(table, matches[0])\n  }\n  return null\n}\n\nexport const getRowIdentity = <T extends DefaultRow>(\n  row: T,\n  rowKey: string | ((row: T) => string) | null\n): string => {\n  if (!row) throw new Error('Row is required when get row identity')\n  if (isString(rowKey)) {\n    if (!rowKey.includes('.')) {\n      return `${row[rowKey]}`\n    }\n    const key = rowKey.split('.')\n    let current: any = row\n    for (const element of key) {\n      current = current[element]\n    }\n    //TODO: \"current\" is now any, we just satisfies typecheck here\n    // but this function can actually return a number\n    return `${current}`\n  } else if (isFunction(rowKey)) {\n    return rowKey.call(null, row)\n  }\n  return ''\n}\n\nexport const getKeysMap = function <T extends DefaultRow>(\n  array: T[],\n  rowKey: string | null,\n  flatten = false,\n  childrenKey = 'children'\n): Record<PropertyKey, { row: T; index: number }> {\n  const data = array || []\n  const arrayMap: Record<string, { row: T; index: number }> = {}\n\n  data.forEach((row, index) => {\n    arrayMap[getRowIdentity(row, rowKey)] = { row, index }\n\n    if (flatten) {\n      const children = row[childrenKey]\n      if (isArray(children)) {\n        Object.assign(arrayMap, getKeysMap(children, rowKey, true, childrenKey))\n      }\n    }\n  })\n\n  return arrayMap\n}\n\nexport function mergeOptions<T extends DefaultRow, K extends DefaultRow>(\n  defaults: T,\n  config: K\n): T & K {\n  const options = {} as T & K\n  let key: keyof T & keyof K\n  for (key in defaults) {\n    options[key] = defaults[key]\n  }\n  for (key in config) {\n    if (hasOwn(config, key)) {\n      const value = config[key]\n      if (!isUndefined(value)) {\n        options[key as keyof K] = value\n      }\n    }\n  }\n  return options\n}\n\nexport function parseWidth(width?: number | string): number | string {\n  if (width === '') return width\n  if (!isUndefined(width)) {\n    width = Number.parseInt(width as string, 10)\n    if (Number.isNaN(width)) {\n      width = ''\n    }\n  }\n  return width!\n}\n\nexport function parseMinWidth(minWidth: number | string): number | string {\n  if (minWidth === '') return minWidth\n  if (!isUndefined(minWidth)) {\n    minWidth = parseWidth(minWidth)\n    if (Number.isNaN(minWidth)) {\n      minWidth = 80\n    }\n  }\n  return minWidth\n}\n\nexport function parseHeight(height: number | string | null) {\n  if (isNumber(height)) {\n    return height\n  }\n  if (isString(height)) {\n    if (/^\\d+(?:px)?$/.test(height)) {\n      return Number.parseInt(height, 10)\n    } else {\n      return height\n    }\n  }\n  return null\n}\n\n// https://github.com/reduxjs/redux/blob/master/src/compose.ts\nexport function compose(...funcs: ((...args: any[]) => void)[]) {\n  if (funcs.length === 0) {\n    return <T>(arg: T) => arg\n  }\n  if (funcs.length === 1) {\n    return funcs[0]\n  }\n  return funcs.reduce(\n    (a, b) =>\n      (...args: any[]) =>\n        a(b(...args))\n  )\n}\n\nexport function toggleRowStatus<T extends DefaultRow>(\n  statusArr: T[],\n  row: T,\n  newVal?: boolean,\n  tableTreeProps?: TreeProps,\n  selectable?: ((row: T, index: number) => boolean) | null,\n  rowIndex?: number,\n  rowKey?: string | null\n): boolean {\n  let _rowIndex = rowIndex ?? 0\n  let changed = false\n\n  const getIndex = () => {\n    if (!rowKey) {\n      return statusArr.indexOf(row)\n    }\n\n    const id = getRowIdentity(row, rowKey)\n\n    return statusArr.findIndex((item) => getRowIdentity(item, rowKey) === id)\n  }\n\n  const index = getIndex()\n\n  const included = index !== -1\n  const isRowSelectable = selectable?.call(null, row, _rowIndex)\n\n  const toggleStatus = (type: 'add' | 'remove') => {\n    if (type === 'add') {\n      statusArr.push(row)\n    } else {\n      statusArr.splice(index, 1)\n    }\n    changed = true\n  }\n  const getChildrenCount = <T extends DefaultRow>(row: T) => {\n    let count = 0\n    const children = tableTreeProps?.children && row[tableTreeProps.children]\n    if (children && isArray(children)) {\n      count += children.length\n      children.forEach((item) => {\n        count += getChildrenCount(item)\n      })\n    }\n    return count\n  }\n\n  if (!selectable || isRowSelectable) {\n    if (isBoolean(newVal)) {\n      if (newVal && !included) {\n        toggleStatus('add')\n      } else if (!newVal && included) {\n        toggleStatus('remove')\n      }\n    } else {\n      included ? toggleStatus('remove') : toggleStatus('add')\n    }\n  }\n\n  if (\n    !tableTreeProps?.checkStrictly &&\n    tableTreeProps?.children &&\n    isArray(row[tableTreeProps.children])\n  ) {\n    row[tableTreeProps.children].forEach((item: T) => {\n      const childChanged = toggleRowStatus(\n        statusArr,\n        item,\n        newVal ?? !included,\n        tableTreeProps,\n        selectable,\n        _rowIndex + 1,\n        rowKey\n      )\n      _rowIndex += getChildrenCount(item) + 1\n      if (childChanged) {\n        changed = childChanged\n      }\n    })\n  }\n  return changed\n}\n\nexport function walkTreeNode<T extends DefaultRow>(\n  root: T[],\n  cb: (parent: any, children: T | T[] | null, level: number) => void,\n  childrenKey = 'children',\n  lazyKey = 'hasChildren',\n  lazy = false\n) {\n  const isNil = (array: any): array is null => !(isArray(array) && array.length)\n\n  function _walker(parent: any, children: T | T[], level: number) {\n    cb(parent, children, level)\n    children.forEach((item: any) => {\n      if (item[lazyKey] && lazy) {\n        cb(item, null, level + 1)\n        return\n      }\n      const children = item[childrenKey]\n      if (!isNil(children)) {\n        _walker(item, children, level + 1)\n      }\n    })\n  }\n\n  root.forEach((item: any) => {\n    if (item[lazyKey] && lazy) {\n      cb(item, null, 0)\n      return\n    }\n    const children = item[childrenKey]\n    if (!isNil(children)) {\n      _walker(item, children, 0)\n    }\n  })\n}\n\nconst getTableOverflowTooltipProps = <T extends DefaultRow>(\n  props: TableOverflowTooltipOptions,\n  innerText: string,\n  row: T,\n  column: TableColumnCtx<T> | null\n) => {\n  // merge popperOptions\n  const popperOptions = {\n    strategy: 'fixed',\n    ...props.popperOptions,\n  }\n\n  const tooltipFormatterContent = isFunction(column?.tooltipFormatter)\n    ? column.tooltipFormatter({\n        row,\n        column,\n        cellValue: getProp(row, column.property).value,\n      })\n    : undefined\n\n  if (isVNode(tooltipFormatterContent)) {\n    return {\n      slotContent: tooltipFormatterContent,\n      content: null,\n      ...props,\n      popperOptions,\n    }\n  }\n\n  return {\n    slotContent: null,\n    content: tooltipFormatterContent ?? innerText,\n    ...props,\n    popperOptions,\n  }\n}\n\nexport let removePopper: RemovePopperFn | null = null\n\nexport function createTablePopper<T extends DefaultRow>(\n  props: TableOverflowTooltipOptions,\n  popperContent: string,\n  row: T,\n  column: TableColumnCtx<T> | null,\n  trigger: HTMLElement | null,\n  table: Table<DefaultRow>\n) {\n  const tableOverflowTooltipProps = getTableOverflowTooltipProps(\n    props,\n    popperContent,\n    row,\n    column\n  )\n  const mergedProps = {\n    ...tableOverflowTooltipProps,\n    slotContent: undefined,\n  }\n  if (removePopper?.trigger === trigger) {\n    const comp = removePopper.vm?.component\n    merge(comp?.props, mergedProps)\n    if (comp && tableOverflowTooltipProps.slotContent) {\n      comp.slots.content = () => [tableOverflowTooltipProps.slotContent]\n    }\n    return\n  }\n  removePopper?.()\n  const parentNode = table?.refs.tableWrapper\n  const ns = parentNode?.dataset.prefix\n  const vm = createVNode(\n    ElTooltip,\n    {\n      virtualTriggering: true,\n      virtualRef: trigger,\n      appendTo: parentNode,\n      placement: 'top',\n      transition: 'none', // Default does not require transition\n      offset: 0,\n      hideAfter: 0,\n      ...mergedProps,\n    },\n    tableOverflowTooltipProps.slotContent\n      ? {\n          content: () => tableOverflowTooltipProps.slotContent,\n        }\n      : undefined\n  )\n  vm.appContext = { ...table.appContext, ...table }\n  const container = document.createElement('div')\n  render(vm, container)\n  vm.component!.exposed!.onOpen()\n  const scrollContainer = parentNode?.querySelector(`.${ns}-scrollbar__wrap`)\n  removePopper = () => {\n    if (vm.component?.exposed?.onClose) {\n      vm.component.exposed.onClose()\n    }\n    render(null, container)\n    const currentRemovePopper = removePopper as RemovePopperFn\n    scrollContainer?.removeEventListener('scroll', currentRemovePopper)\n    currentRemovePopper.trigger = undefined\n    currentRemovePopper.vm = undefined\n    removePopper = null\n  }\n  removePopper.trigger = trigger ?? undefined\n  removePopper.vm = vm\n  scrollContainer?.addEventListener('scroll', removePopper)\n}\n\nfunction getCurrentColumns<T extends DefaultRow>(\n  column: TableColumnCtx<T>\n): TableColumnCtx<T>[] {\n  if (column.children) {\n    return flatMap(column.children, getCurrentColumns)\n  } else {\n    return [column]\n  }\n}\n\nfunction getColSpan<T extends DefaultRow>(\n  colSpan: number,\n  column: TableColumnCtx<T>\n) {\n  return colSpan + column.colSpan\n}\n\nexport const isFixedColumn = <T extends DefaultRow>(\n  index: number,\n  fixed: string | boolean | undefined,\n  store: any,\n  realColumns?: TableColumnCtx<T>[]\n) => {\n  let start = 0\n  let after = index\n  const columns = store.states.columns.value\n  if (realColumns) {\n    // fixed column supported in grouped header\n    const curColumns = getCurrentColumns(realColumns[index])\n    const preColumns = columns.slice(0, columns.indexOf(curColumns[0]))\n\n    start = preColumns.reduce(getColSpan, 0)\n    after = start + curColumns.reduce(getColSpan, 0) - 1\n  } else {\n    start = index\n  }\n  let fixedLayout\n  switch (fixed) {\n    case 'left':\n      if (after < store.states.fixedLeafColumnsLength.value) {\n        fixedLayout = 'left'\n      }\n      break\n    case 'right':\n      if (\n        start >=\n        columns.length - store.states.rightFixedLeafColumnsLength.value\n      ) {\n        fixedLayout = 'right'\n      }\n      break\n    default:\n      if (after < store.states.fixedLeafColumnsLength.value) {\n        fixedLayout = 'left'\n      } else if (\n        start >=\n        columns.length - store.states.rightFixedLeafColumnsLength.value\n      ) {\n        fixedLayout = 'right'\n      }\n  }\n  return fixedLayout\n    ? {\n        direction: fixedLayout,\n        start,\n        after,\n      }\n    : {}\n}\n\nexport const getFixedColumnsClass = <T extends DefaultRow>(\n  namespace: string,\n  index: number,\n  fixed: string | boolean | undefined,\n  store: any,\n  realColumns?: TableColumnCtx<T>[],\n  offset = 0\n) => {\n  const classes: string[] = []\n  const { direction, start, after } = isFixedColumn(\n    index,\n    fixed,\n    store,\n    realColumns\n  )\n  if (direction) {\n    const isLeft = direction === 'left'\n    classes.push(`${namespace}-fixed-column--${direction}`)\n    if (\n      isLeft &&\n      after + offset === store.states.fixedLeafColumnsLength.value - 1\n    ) {\n      classes.push('is-last-column')\n    } else if (\n      !isLeft &&\n      start - offset ===\n        store.states.columns.value.length -\n          store.states.rightFixedLeafColumnsLength.value\n    ) {\n      classes.push('is-first-column')\n    }\n  }\n  return classes\n}\n\nfunction getOffset<T extends DefaultRow>(\n  offset: number,\n  column: TableColumnCtx<T>\n) {\n  return (\n    offset +\n    (isNull(column.realWidth) || Number.isNaN(column.realWidth)\n      ? Number(column.width)\n      : column.realWidth)\n  )\n}\n\nexport const getFixedColumnOffset = <T extends DefaultRow>(\n  index: number,\n  fixed: string | boolean | undefined,\n  store: any,\n  realColumns?: TableColumnCtx<T>[]\n) => {\n  const {\n    direction,\n    start = 0,\n    after = 0,\n  } = isFixedColumn(index, fixed, store, realColumns)\n  if (!direction) {\n    return\n  }\n  const styles: CSSProperties = {}\n  const isLeft = direction === 'left'\n  const columns = store.states.columns.value\n  if (isLeft) {\n    styles.left = columns.slice(0, start).reduce(getOffset, 0)\n  } else {\n    styles.right = columns\n      .slice(after + 1)\n      .reverse()\n      .reduce(getOffset, 0)\n  }\n  return styles\n}\n\nexport const ensurePosition = (\n  style: CSSProperties | undefined,\n  key: keyof CSSProperties\n) => {\n  if (!style) return\n  if (!Number.isNaN(style[key])) {\n    style[key] = `${style[key]}px` as any\n  }\n}\n","import { getCurrentInstance, ref } from 'vue'\nimport { getKeysMap, getRowIdentity, toggleRowStatus } from '../util'\n\nimport type { Ref } from 'vue'\nimport type { WatcherPropsData } from '.'\nimport type { DefaultRow, Table } from '../table/defaults'\n\nfunction useExpand<T extends DefaultRow>(watcherData: WatcherPropsData<T>) {\n  const instance = getCurrentInstance() as Table<T>\n  const defaultExpandAll = ref(false)\n  const expandRows: Ref<T[]> = ref([])\n  const updateExpandRows = () => {\n    const data = watcherData.data.value || []\n    const rowKey = watcherData.rowKey.value\n    if (defaultExpandAll.value) {\n      expandRows.value = data.slice()\n    } else if (rowKey) {\n      // TODO：这里的代码可以优化\n      const expandRowsMap = getKeysMap(expandRows.value, rowKey)\n      expandRows.value = data.reduce((prev: T[], row: T) => {\n        const rowId = getRowIdentity(row, rowKey)\n        const rowInfo = expandRowsMap[rowId]\n        if (rowInfo) {\n          prev.push(row)\n        }\n        return prev\n      }, [])\n    } else {\n      expandRows.value = []\n    }\n  }\n\n  const toggleRowExpansion = (row: T, expanded?: boolean) => {\n    const changed = toggleRowStatus(\n      expandRows.value,\n      row,\n      expanded,\n      undefined,\n      undefined,\n      undefined,\n      watcherData.rowKey.value\n    )\n    if (changed) {\n      instance.emit('expand-change', row, expandRows.value.slice())\n    }\n  }\n\n  const setExpandRowKeys = (rowKeys: (string | number)[]) => {\n    instance.store.assertRowKey()\n    // TODO：这里的代码可以优化\n    const data = watcherData.data.value || []\n    const rowKey = watcherData.rowKey.value\n    const keysMap = getKeysMap(data, rowKey)\n    expandRows.value = rowKeys.reduce((prev: T[], cur) => {\n      const info = keysMap[cur]\n      if (info) {\n        prev.push(info.row)\n      }\n      return prev\n    }, [])\n  }\n\n  const isRowExpanded = (row: T): boolean => {\n    const rowKey = watcherData.rowKey.value\n    if (rowKey) {\n      const expandMap = getKeysMap(expandRows.value, rowKey)\n      return !!expandMap[getRowIdentity(row, rowKey)]\n    }\n    return expandRows.value.includes(row)\n  }\n  return {\n    updateExpandRows,\n    toggleRowExpansion,\n    setExpandRowKeys,\n    isRowExpanded,\n    states: {\n      expandRows,\n      defaultExpandAll,\n    },\n  }\n}\n\nexport default useExpand\n","import { getCurrentInstance, ref, unref } from 'vue'\nimport { isNull } from 'lodash-unified'\nimport { getRowIdentity } from '../util'\n\nimport type { Ref } from 'vue'\nimport type { DefaultRow, Table } from '../table/defaults'\nimport type { WatcherPropsData } from '.'\n\nfunction useCurrent<T extends DefaultRow>(watcherData: WatcherPropsData<T>) {\n  const instance = getCurrentInstance() as Table<T>\n  const _currentRowKey: Ref<string | null> = ref(null)\n  const currentRow: Ref<T | null> = ref(null)\n\n  const setCurrentRowKey = (key: string) => {\n    instance.store.assertRowKey()\n    _currentRowKey.value = key\n    setCurrentRowByKey(key)\n  }\n\n  const restoreCurrentRowKey = () => {\n    _currentRowKey.value = null\n  }\n\n  const setCurrentRowByKey = (key: string) => {\n    const { data, rowKey } = watcherData\n    let _currentRow: T | null = null\n    if (rowKey.value) {\n      _currentRow =\n        (unref(data) || []).find(\n          (item) => getRowIdentity(item, rowKey.value) === key\n        ) ?? null\n    }\n    currentRow.value = _currentRow ?? null\n    instance.emit('current-change', currentRow.value, null)\n  }\n\n  const updateCurrentRow = (_currentRow: T) => {\n    const oldCurrentRow = currentRow.value\n    if (_currentRow && _currentRow !== oldCurrentRow) {\n      currentRow.value = _currentRow\n      instance.emit('current-change', currentRow.value, oldCurrentRow)\n      return\n    }\n    if (!_currentRow && oldCurrentRow) {\n      currentRow.value = null\n      instance.emit('current-change', null, oldCurrentRow)\n    }\n  }\n\n  const updateCurrentRowData = () => {\n    const rowKey = watcherData.rowKey.value\n    // data 为 null 时，解构时的默认值会被忽略\n    const data = watcherData.data.value || []\n    const oldCurrentRow = currentRow.value\n    // 当 currentRow 不在 data 中时尝试更新数据\n    if (oldCurrentRow && !data.includes(oldCurrentRow)) {\n      if (rowKey) {\n        const currentRowKey = getRowIdentity(oldCurrentRow, rowKey)\n        setCurrentRowByKey(currentRowKey)\n      } else {\n        currentRow.value = null\n      }\n      if (isNull(currentRow.value)) {\n        instance.emit('current-change', null, oldCurrentRow)\n      }\n    } else if (_currentRowKey.value) {\n      // 把初始时下设置的 rowKey 转化成 rowData\n      setCurrentRowByKey(_currentRowKey.value)\n      restoreCurrentRowKey()\n    }\n  }\n\n  return {\n    setCurrentRowKey,\n    restoreCurrentRowKey,\n    setCurrentRowByKey,\n    updateCurrentRow,\n    updateCurrentRowData,\n    states: {\n      _currentRowKey,\n      currentRow,\n    },\n  }\n}\n\nexport default useCurrent\n","import { computed, getCurrentInstance, ref, unref, watch } from 'vue'\nimport { isArray, isUndefined } from '@element-plus/utils'\nimport { getRowIdentity, walkTreeNode } from '../util'\n\nimport type { WatcherPropsData } from '.'\nimport type { DefaultRow, Table, TableProps, TreeNode } from '../table/defaults'\n\nexport interface TreeData extends TreeNode {\n  children?: string[]\n  lazy?: boolean\n  loaded?: boolean\n}\n\nfunction useTree<T extends DefaultRow>(watcherData: WatcherPropsData<T>) {\n  const expandRowKeys = ref<Array<string>>([])\n  const treeData = ref<Record<string, TreeData>>({})\n  const indent = ref(16)\n  const lazy = ref(false)\n  const lazyTreeNodeMap = ref<Record<string, T[]>>({})\n  const lazyColumnIdentifier = ref('hasChildren')\n  const childrenColumnName = ref('children')\n  const checkStrictly = ref(false)\n  const instance = getCurrentInstance() as Table<T>\n  const normalizedData = computed(() => {\n    if (!watcherData.rowKey.value) return {}\n    const data = watcherData.data.value || []\n    return normalize(data)\n  })\n  const normalizedLazyNode = computed(() => {\n    const rowKey = watcherData.rowKey.value\n    const keys = Object.keys(lazyTreeNodeMap.value)\n    const res: Record<string, { children: string[] }> = {}\n    if (!keys.length) return res\n    keys.forEach((key) => {\n      if (lazyTreeNodeMap.value[key].length) {\n        const item: typeof res[number] = { children: [] }\n        lazyTreeNodeMap.value[key].forEach((row) => {\n          const currentRowKey = getRowIdentity(row, rowKey)\n          item.children.push(currentRowKey)\n          if (row[lazyColumnIdentifier.value] && !res[currentRowKey]) {\n            res[currentRowKey] = { children: [] }\n          }\n        })\n        res[key] = item\n      }\n    })\n    return res\n  })\n\n  const normalize = (data: T[]) => {\n    const rowKey = watcherData.rowKey.value\n    const res = {} as Record<string, TreeData>\n    walkTreeNode(\n      data,\n      (parent, children, level) => {\n        const parentId = getRowIdentity(parent, rowKey)\n        if (isArray(children)) {\n          res[parentId] = {\n            children: children.map((row) => getRowIdentity(row, rowKey)),\n            level,\n          }\n        } else if (lazy.value) {\n          // 当 children 不存在且 lazy 为 true，该节点即为懒加载的节点\n          res[parentId] = {\n            children: [],\n            lazy: true,\n            level,\n          }\n        }\n      },\n      childrenColumnName.value,\n      lazyColumnIdentifier.value,\n      lazy.value\n    )\n    return res\n  }\n\n  const updateTreeData = (\n    ifChangeExpandRowKeys = false,\n    ifExpandAll?: boolean\n  ) => {\n    ifExpandAll ||= instance.store?.states.defaultExpandAll.value\n    const nested = normalizedData.value\n    const normalizedLazyNode_ = normalizedLazyNode.value\n    const keys = Object.keys(nested)\n    const newTreeData: Record<string, TreeData> = {}\n    if (keys.length) {\n      const oldTreeData = unref(treeData)\n      const rootLazyRowKeys: string[] = []\n      const getExpanded = (oldValue: TreeData, key: string) => {\n        if (ifChangeExpandRowKeys) {\n          if (expandRowKeys.value) {\n            return ifExpandAll || expandRowKeys.value.includes(key)\n          } else {\n            return !!(ifExpandAll || oldValue?.expanded)\n          }\n        } else {\n          const included =\n            ifExpandAll ||\n            (expandRowKeys.value && expandRowKeys.value.includes(key))\n          return !!(oldValue?.expanded || included)\n        }\n      }\n      // 合并 expanded 与 display，确保数据刷新后，状态不变\n      keys.forEach((key) => {\n        const oldValue = oldTreeData[key]\n        const newValue = { ...nested[key] }\n        newValue.expanded = getExpanded(oldValue, key)\n        if (newValue.lazy) {\n          const { loaded = false, loading = false } = oldValue || {}\n          newValue.loaded = !!loaded\n          newValue.loading = !!loading\n          rootLazyRowKeys.push(key)\n        }\n        newTreeData[key] = newValue\n      })\n      // 根据懒加载数据更新 treeData\n      const lazyKeys = Object.keys(normalizedLazyNode_)\n      if (lazy.value && lazyKeys.length && rootLazyRowKeys.length) {\n        lazyKeys.forEach((key) => {\n          const oldValue = oldTreeData[key]\n          const lazyNodeChildren = normalizedLazyNode_[key].children\n          if (rootLazyRowKeys.includes(key)) {\n            // 懒加载的 root 节点，更新一下原有的数据，原来的 children 一定是空数组\n            if (newTreeData[key].children?.length !== 0) {\n              throw new Error('[ElTable]children must be an empty array.')\n            }\n            newTreeData[key].children = lazyNodeChildren\n          } else {\n            const { loaded = false, loading = false } = oldValue || {}\n            newTreeData[key] = {\n              lazy: true,\n              loaded: !!loaded,\n              loading: !!loading,\n              expanded: getExpanded(oldValue, key),\n              children: lazyNodeChildren,\n              level: undefined,\n            }\n          }\n        })\n      }\n    }\n    treeData.value = newTreeData\n    instance.store?.updateTableScrollY()\n  }\n\n  watch(\n    () => expandRowKeys.value,\n    () => {\n      updateTreeData(true)\n    }\n  )\n\n  watch(\n    () => normalizedData.value,\n    () => {\n      updateTreeData()\n    }\n  )\n  watch(\n    () => normalizedLazyNode.value,\n    () => {\n      updateTreeData()\n    }\n  )\n\n  const updateTreeExpandKeys = (value: string[]) => {\n    expandRowKeys.value = value\n    updateTreeData()\n  }\n  const isUseLazy = (data: TreeData) => {\n    return lazy.value && data && 'loaded' in data && !data.loaded\n  }\n  const toggleTreeExpansion = (row: T, expanded?: boolean) => {\n    instance.store.assertRowKey()\n\n    const rowKey = watcherData.rowKey.value\n    const id = getRowIdentity(row, rowKey)\n    const data = id && treeData.value[id]\n    if (id && data && 'expanded' in data) {\n      const oldExpanded = data.expanded\n      expanded = isUndefined(expanded) ? !data.expanded : expanded\n      treeData.value[id].expanded = expanded\n      if (oldExpanded !== expanded) {\n        instance.emit('expand-change', row, expanded)\n      }\n      isUseLazy(data) && loadData(row, id, data)\n      instance.store.updateTableScrollY()\n    }\n  }\n\n  const loadOrToggle = (row: T) => {\n    instance.store.assertRowKey()\n    const rowKey = watcherData.rowKey.value\n    const id = getRowIdentity(row, rowKey)\n    const data = treeData.value[id]\n    if (isUseLazy(data)) {\n      loadData(row, id, data)\n    } else {\n      toggleTreeExpansion(row, undefined)\n    }\n  }\n\n  const loadData = (row: T, key: string, treeNode: TreeNode) => {\n    const { load } = instance.props as unknown as TableProps<T>\n    if (load && !treeData.value[key].loaded) {\n      treeData.value[key].loading = true\n      load(row, treeNode, (data) => {\n        if (!isArray(data)) {\n          throw new TypeError('[ElTable] data must be an array')\n        }\n        treeData.value[key].loading = false\n        treeData.value[key].loaded = true\n        treeData.value[key].expanded = true\n        if (data.length) {\n          lazyTreeNodeMap.value[key] = data\n        }\n        instance.emit('expand-change', row, true)\n      })\n    }\n  }\n\n  const updateKeyChildren = (key: string, data: T[]) => {\n    const { lazy, rowKey } = instance.props as unknown as TableProps<T>\n    if (!lazy) return\n    if (!rowKey) throw new Error('[Table] rowKey is required in updateKeyChild')\n\n    if (lazyTreeNodeMap.value[key]) {\n      lazyTreeNodeMap.value[key] = data\n    }\n  }\n\n  return {\n    loadData,\n    loadOrToggle,\n    toggleTreeExpansion,\n    updateTreeExpandKeys,\n    updateTreeData,\n    updateKeyChildren,\n    normalize,\n    states: {\n      expandRowKeys,\n      treeData,\n      indent,\n      lazy,\n      lazyTreeNodeMap,\n      lazyColumnIdentifier,\n      childrenColumnName,\n      checkStrictly,\n    },\n  }\n}\n\nexport default useTree\n","import { computed, getCurrentInstance, ref, toRefs, unref, watch } from 'vue'\nimport { ensureArray, hasOwn, isArray, isString } from '@element-plus/utils'\nimport {\n  getColumnById,\n  getColumnByKey,\n  getKeysMap,\n  getRowIdentity,\n  orderBy,\n  toggleRowStatus,\n} from '../util'\nimport useExpand from './expand'\nimport useCurrent from './current'\nimport useTree from './tree'\n\nimport type { Ref } from 'vue'\nimport type { TableColumnCtx } from '../table-column/defaults'\nimport type {\n  DefaultRow,\n  Table,\n  TableRefs,\n  TableSortOrder,\n} from '../table/defaults'\nimport type { StoreFilter } from '.'\n\nconst sortData = <T extends DefaultRow>(\n  data: T[],\n  states: {\n    sortingColumn: TableColumnCtx<T> | null\n    sortProp: string | null\n    sortOrder: string | number | null\n  }\n) => {\n  const sortingColumn = states.sortingColumn\n  if (!sortingColumn || isString(sortingColumn.sortable)) {\n    return data\n  }\n  return orderBy(\n    data,\n    states.sortProp,\n    states.sortOrder,\n    sortingColumn.sortMethod,\n    sortingColumn.sortBy\n  )\n}\n\nconst doFlattenColumns = <T extends DefaultRow>(\n  columns: TableColumnCtx<T>[]\n) => {\n  const result: TableColumnCtx<T>[] = []\n  columns.forEach((column) => {\n    if (column.children && column.children.length > 0) {\n      // eslint-disable-next-line prefer-spread\n      result.push.apply(result, doFlattenColumns(column.children))\n    } else {\n      result.push(column)\n    }\n  })\n  return result\n}\n\nfunction useWatcher<T extends DefaultRow>() {\n  const instance = getCurrentInstance() as Table<T>\n  const { size: tableSize } = toRefs(instance.proxy?.$props as any)\n  const rowKey: Ref<string | null> = ref(null)\n  const data: Ref<T[]> = ref([])\n  const _data: Ref<T[]> = ref([])\n  const isComplex = ref(false)\n  const _columns: Ref<TableColumnCtx<T>[]> = ref([])\n  const originColumns: Ref<TableColumnCtx<T>[]> = ref([])\n  const columns: Ref<TableColumnCtx<T>[]> = ref([])\n  const fixedColumns: Ref<TableColumnCtx<T>[]> = ref([])\n  const rightFixedColumns: Ref<TableColumnCtx<T>[]> = ref([])\n  const leafColumns: Ref<TableColumnCtx<T>[]> = ref([])\n  const fixedLeafColumns: Ref<TableColumnCtx<T>[]> = ref([])\n  const rightFixedLeafColumns: Ref<TableColumnCtx<T>[]> = ref([])\n  const updateOrderFns: (() => void)[] = []\n  const leafColumnsLength = ref(0)\n  const fixedLeafColumnsLength = ref(0)\n  const rightFixedLeafColumnsLength = ref(0)\n  const isAllSelected = ref(false)\n  const selection: Ref<T[]> = ref([])\n  const reserveSelection = ref(false)\n  const selectOnIndeterminate = ref(false)\n  const selectable: Ref<((row: T, index: number) => boolean) | null> = ref(null)\n  const filters: Ref<StoreFilter> = ref({})\n  const filteredData: Ref<T[] | null> = ref(null)\n  const sortingColumn: Ref<TableColumnCtx<T> | null> = ref(null)\n  const sortProp: Ref<string | null> = ref(null)\n  const sortOrder: Ref<string | number | null> = ref(null)\n  const hoverRow: Ref<T | null> = ref(null)\n\n  const selectedMap = computed(() => {\n    return rowKey.value ? getKeysMap(selection.value, rowKey.value) : undefined\n  })\n\n  watch(\n    data,\n    () => {\n      if (instance.state) {\n        scheduleLayout(false)\n        const needUpdateFixed = instance.props.tableLayout === 'auto'\n        if (needUpdateFixed) {\n          instance.refs.tableHeaderRef?.updateFixedColumnStyle()\n        }\n      }\n    },\n    {\n      deep: true,\n    }\n  )\n\n  // 检查 rowKey 是否存在\n  const assertRowKey = () => {\n    if (!rowKey.value) throw new Error('[ElTable] prop row-key is required')\n  }\n\n  // 更新 fixed\n  const updateChildFixed = (column: TableColumnCtx<T>) => {\n    column.children?.forEach((childColumn) => {\n      childColumn.fixed = column.fixed\n      updateChildFixed(childColumn)\n    })\n  }\n\n  // 更新列\n  const updateColumns = () => {\n    _columns.value.forEach((column) => {\n      updateChildFixed(column)\n    })\n    fixedColumns.value = _columns.value.filter((column) =>\n      [true, 'left'].includes(column.fixed)\n    )\n\n    const selectColumn = _columns.value.find(\n      (column) => column.type === 'selection'\n    )\n\n    let selectColFixLeft: boolean\n    if (\n      selectColumn &&\n      selectColumn.fixed !== 'right' &&\n      !fixedColumns.value.includes(selectColumn)\n    ) {\n      const selectColumnIndex = _columns.value.indexOf(selectColumn)\n      if (selectColumnIndex === 0 && fixedColumns.value.length) {\n        fixedColumns.value.unshift(selectColumn)\n        selectColFixLeft = true\n      }\n    }\n\n    rightFixedColumns.value = _columns.value.filter(\n      (column) => column.fixed === 'right'\n    )\n\n    const notFixedColumns = _columns.value.filter(\n      (column) =>\n        (selectColFixLeft ? column.type !== 'selection' : true) && !column.fixed\n    )\n\n    originColumns.value = Array.from(fixedColumns.value)\n      .concat(notFixedColumns)\n      .concat(rightFixedColumns.value)\n    const leafColumns = doFlattenColumns(notFixedColumns)\n    const fixedLeafColumns = doFlattenColumns(fixedColumns.value)\n    const rightFixedLeafColumns = doFlattenColumns(rightFixedColumns.value)\n\n    leafColumnsLength.value = leafColumns.length\n    fixedLeafColumnsLength.value = fixedLeafColumns.length\n    rightFixedLeafColumnsLength.value = rightFixedLeafColumns.length\n\n    columns.value = Array.from(fixedLeafColumns)\n      .concat(leafColumns)\n      .concat(rightFixedLeafColumns)\n    isComplex.value =\n      fixedColumns.value.length > 0 || rightFixedColumns.value.length > 0\n  }\n\n  // 更新 DOM\n  const scheduleLayout = (needUpdateColumns?: boolean, immediate = false) => {\n    if (needUpdateColumns) {\n      updateColumns()\n    }\n    if (immediate) {\n      instance.state.doLayout()\n    } else {\n      instance.state.debouncedUpdateLayout()\n    }\n  }\n\n  // 选择\n  const isSelected = (row: T) => {\n    if (selectedMap.value) {\n      return !!selectedMap.value[getRowIdentity(row, rowKey.value)]\n    } else {\n      return selection.value.includes(row)\n    }\n  }\n\n  const clearSelection = () => {\n    isAllSelected.value = false\n    const oldSelection = selection.value\n    selection.value = []\n    if (oldSelection.length) {\n      instance.emit('selection-change', [])\n    }\n  }\n\n  const cleanSelection = () => {\n    let deleted\n    if (rowKey.value) {\n      deleted = []\n      const childrenKey = instance?.store?.states?.childrenColumnName.value\n      const dataMap = getKeysMap(data.value, rowKey.value, true, childrenKey)\n      for (const key in selectedMap.value) {\n        if (hasOwn(selectedMap.value, key) && !dataMap[key]) {\n          deleted.push(selectedMap.value[key].row)\n        }\n      }\n    } else {\n      deleted = selection.value.filter((item) => !data.value.includes(item))\n    }\n    if (deleted.length) {\n      const newSelection = selection.value.filter(\n        (item) => !deleted.includes(item)\n      )\n      selection.value = newSelection\n      instance.emit('selection-change', newSelection.slice())\n    }\n  }\n\n  const getSelectionRows = () => {\n    return (selection.value || []).slice()\n  }\n\n  const toggleRowSelection = (\n    row: T,\n    selected?: boolean,\n    emitChange = true,\n    ignoreSelectable = false\n  ) => {\n    const treeProps = {\n      children: instance?.store?.states?.childrenColumnName.value,\n      checkStrictly: instance?.store?.states?.checkStrictly.value,\n    }\n    const changed = toggleRowStatus(\n      selection.value,\n      row,\n      selected,\n      treeProps,\n      ignoreSelectable ? undefined : selectable.value,\n      data.value.indexOf(row),\n      rowKey.value\n    )\n    if (changed) {\n      const newSelection = (selection.value || []).slice()\n      // 调用 API 修改选中值，不触发 select 事件\n      if (emitChange) {\n        instance.emit('select', newSelection, row)\n      }\n      instance.emit('selection-change', newSelection)\n    }\n  }\n\n  const _toggleAllSelection = () => {\n    // when only some rows are selected (but not all), select or deselect all of them\n    // depending on the value of selectOnIndeterminate\n    const value = selectOnIndeterminate.value\n      ? !isAllSelected.value\n      : !(isAllSelected.value || selection.value.length)\n    isAllSelected.value = value\n\n    let selectionChanged = false\n    let childrenCount = 0\n    const rowKey = instance?.store?.states?.rowKey.value\n    const { childrenColumnName } = instance.store.states\n    const treeProps = {\n      children: childrenColumnName.value,\n      checkStrictly: false, // Disable checkStrictly when selecting all\n    }\n\n    data.value.forEach((row, index) => {\n      const rowIndex = index + childrenCount\n      if (\n        toggleRowStatus(\n          selection.value,\n          row,\n          value,\n          treeProps,\n          selectable.value,\n          rowIndex,\n          rowKey\n        )\n      ) {\n        selectionChanged = true\n      }\n      childrenCount += getChildrenCount(getRowIdentity(row, rowKey))\n    })\n\n    if (selectionChanged) {\n      instance.emit(\n        'selection-change',\n        selection.value ? selection.value.slice() : []\n      )\n    }\n    instance.emit('select-all', (selection.value || []).slice())\n  }\n\n  const updateAllSelected = () => {\n    // data 为 null 时，解构时的默认值会被忽略\n    if (data.value?.length === 0) {\n      isAllSelected.value = false\n      return\n    }\n\n    const { childrenColumnName } = instance.store.states\n    let rowIndex = 0\n    let selectedCount = 0\n\n    const checkSelectedStatus = (data: T[]) => {\n      for (const row of data) {\n        const isRowSelectable =\n          selectable.value && selectable.value.call(null, row, rowIndex)\n\n        if (!isSelected(row)) {\n          if (!selectable.value || isRowSelectable) {\n            return false\n          }\n        } else {\n          selectedCount++\n        }\n        rowIndex++\n\n        if (\n          row[childrenColumnName.value]?.length &&\n          !checkSelectedStatus(row[childrenColumnName.value])\n        ) {\n          return false\n        }\n      }\n      return true\n    }\n\n    const isAllSelected_ = checkSelectedStatus(data.value || [])\n    isAllSelected.value = selectedCount === 0 ? false : isAllSelected_\n  }\n\n  const getChildrenCount = (rowKey: string) => {\n    if (!instance || !instance.store) return 0\n    const { treeData } = instance.store.states\n    let count = 0\n    const children = treeData.value[rowKey]?.children\n    if (children) {\n      count += children.length\n      children.forEach((childKey) => {\n        count += getChildrenCount(childKey)\n      })\n    }\n    return count\n  }\n\n  // 过滤与排序\n  const updateFilters = (column: TableColumnCtx<T>, values: string[]) => {\n    const filters_: Record<string, string[]> = {}\n    ensureArray(column).forEach((col) => {\n      filters.value[col.id] = values\n      filters_[col.columnKey || col.id] = values\n    })\n    return filters_\n  }\n\n  const updateSort = (\n    column: TableColumnCtx<T> | null,\n    prop: string | null,\n    order: TableSortOrder | null\n  ) => {\n    if (sortingColumn.value && sortingColumn.value !== column) {\n      sortingColumn.value.order = null\n    }\n    sortingColumn.value = column\n    sortProp.value = prop\n    sortOrder.value = order\n  }\n\n  const execFilter = () => {\n    let sourceData = unref(_data)\n    Object.keys(filters.value).forEach((columnId) => {\n      const values = filters.value[columnId]\n      if (!values || values.length === 0) return\n      const column = getColumnById(\n        {\n          columns: columns.value,\n        },\n        columnId\n      )\n      if (column && column.filterMethod) {\n        sourceData = sourceData.filter((row) => {\n          return values.some((value) =>\n            column.filterMethod.call(null, value, row, column)\n          )\n        })\n      }\n    })\n    filteredData.value = sourceData\n  }\n\n  const execSort = () => {\n    data.value = sortData(filteredData.value ?? [], {\n      sortingColumn: sortingColumn.value,\n      sortProp: sortProp.value,\n      sortOrder: sortOrder.value,\n    })\n  }\n\n  // 根据 filters 与 sort 去过滤 data\n  const execQuery = (ignore: { filter: boolean } | undefined = undefined) => {\n    if (!ignore?.filter) {\n      execFilter()\n    }\n    execSort()\n  }\n\n  const clearFilter = (columnKeys?: string[] | string) => {\n    const { tableHeaderRef } = instance.refs as TableRefs\n    if (!tableHeaderRef) return\n    const panels = Object.assign({}, tableHeaderRef.filterPanels)\n\n    const keys = Object.keys(panels)\n    if (!keys.length) return\n\n    if (isString(columnKeys)) {\n      columnKeys = [columnKeys]\n    }\n\n    if (isArray(columnKeys)) {\n      const columns_ = columnKeys.map((key) =>\n        getColumnByKey(\n          {\n            columns: columns.value,\n          },\n          key\n        )\n      )\n      keys.forEach((key) => {\n        const column = columns_.find((col) => col.id === key)\n        if (column) {\n          column.filteredValue = []\n        }\n      })\n      instance.store.commit('filterChange', {\n        column: columns_,\n        values: [],\n        silent: true,\n        multi: true,\n      })\n    } else {\n      keys.forEach((key) => {\n        const column = columns.value.find((col) => col.id === key)\n        if (column) {\n          column.filteredValue = []\n        }\n      })\n\n      filters.value = {}\n      instance.store.commit('filterChange', {\n        column: {},\n        values: [],\n        silent: true,\n      })\n    }\n  }\n\n  const clearSort = () => {\n    if (!sortingColumn.value) return\n\n    updateSort(null, null, null)\n    instance.store.commit('changeSortCondition', {\n      silent: true,\n    })\n  }\n  const {\n    setExpandRowKeys,\n    toggleRowExpansion,\n    updateExpandRows,\n    states: expandStates,\n    isRowExpanded,\n  } = useExpand({\n    data,\n    rowKey,\n  })\n  const {\n    updateTreeExpandKeys,\n    toggleTreeExpansion,\n    updateTreeData,\n    updateKeyChildren,\n    loadOrToggle,\n    states: treeStates,\n  } = useTree({\n    data,\n    rowKey,\n  })\n  const {\n    updateCurrentRowData,\n    updateCurrentRow,\n    setCurrentRowKey,\n    states: currentData,\n  } = useCurrent({\n    data,\n    rowKey,\n  })\n  // 适配层，expand-row-keys 在 Expand 与 TreeTable 中都有使用\n  const setExpandRowKeysAdapter = (val: string[]) => {\n    // 这里会触发额外的计算，但为了兼容性，暂时这么做\n    setExpandRowKeys(val)\n    updateTreeExpandKeys(val)\n  }\n\n  // 展开行与 TreeTable 都要使用\n  const toggleRowExpansionAdapter = (row: T, expanded?: boolean) => {\n    const hasExpandColumn = columns.value.some(({ type }) => type === 'expand')\n    if (hasExpandColumn) {\n      toggleRowExpansion(row, expanded)\n    } else {\n      toggleTreeExpansion(row, expanded)\n    }\n  }\n\n  return {\n    assertRowKey,\n    updateColumns,\n    scheduleLayout,\n    isSelected,\n    clearSelection,\n    cleanSelection,\n    getSelectionRows,\n    toggleRowSelection,\n    _toggleAllSelection,\n    toggleAllSelection: null as (() => void) | null,\n    updateAllSelected,\n    updateFilters,\n    updateCurrentRow,\n    updateSort,\n    execFilter,\n    execSort,\n    execQuery,\n    clearFilter,\n    clearSort,\n    toggleRowExpansion,\n    setExpandRowKeysAdapter,\n    setCurrentRowKey,\n    toggleRowExpansionAdapter,\n    isRowExpanded,\n    updateExpandRows,\n    updateCurrentRowData,\n    loadOrToggle,\n    updateTreeData,\n    updateKeyChildren,\n    states: {\n      tableSize,\n      rowKey,\n      data,\n      _data,\n      isComplex,\n      _columns,\n      originColumns,\n      columns,\n      fixedColumns,\n      rightFixedColumns,\n      leafColumns,\n      fixedLeafColumns,\n      rightFixedLeafColumns,\n      updateOrderFns,\n      leafColumnsLength,\n      fixedLeafColumnsLength,\n      rightFixedLeafColumnsLength,\n      isAllSelected,\n      selection,\n      reserveSelection,\n      selectOnIndeterminate,\n      selectable,\n      filters,\n      filteredData,\n      sortingColumn,\n      sortProp,\n      sortOrder,\n      hoverRow,\n      ...expandStates,\n      ...treeStates,\n      ...currentData,\n    },\n  }\n}\n\nexport default useWatcher\n","import { getCurrentInstance, nextTick, unref } from 'vue'\nimport { isNull } from 'lodash-unified'\nimport { useNamespace } from '@element-plus/hooks'\nimport useWatcher from './watcher'\n\nimport type { Ref } from 'vue'\nimport type { TableColumnCtx } from '../table-column/defaults'\nimport type { DefaultRow, Filter, Sort, Table } from '../table/defaults'\n\ninterface WatcherPropsData<T extends DefaultRow> {\n  data: Ref<T[]>\n  rowKey: Ref<string | null>\n}\n\nfunction replaceColumn<T extends DefaultRow>(\n  array: TableColumnCtx<T>[],\n  column: TableColumnCtx<T>\n) {\n  return array.map((item) => {\n    if (item.id === column.id) {\n      return column\n    } else if (item.children?.length) {\n      item.children = replaceColumn(item.children, column)\n    }\n    return item\n  })\n}\n\nfunction sortColumn<T extends DefaultRow>(array: TableColumnCtx<T>[]) {\n  array.forEach((item) => {\n    item.no = item.getColumnIndex?.()\n    if (item.children?.length) {\n      sortColumn(item.children)\n    }\n  })\n  array.sort((cur, pre) => cur.no - pre.no)\n}\n\nfunction useStore<T extends DefaultRow>() {\n  const instance = getCurrentInstance() as Table<T>\n  const watcher = useWatcher<T>()\n  const ns = useNamespace('table')\n  type StoreStates = typeof watcher.states\n  const mutations = {\n    setData(states: StoreStates, data: T[]) {\n      const dataInstanceChanged = unref(states._data) !== data\n      states.data.value = data\n      states._data.value = data\n      instance.store.execQuery()\n      // 数据变化，更新部分数据。\n      // 没有使用 computed，而是手动更新部分数据 https://github.com/vuejs/vue/issues/6660#issuecomment-331417140\n      instance.store.updateCurrentRowData()\n      instance.store.updateExpandRows()\n      instance.store.updateTreeData(\n        instance.store.states.defaultExpandAll.value\n      )\n      if (unref(states.reserveSelection)) {\n        instance.store.assertRowKey()\n      } else {\n        if (dataInstanceChanged) {\n          instance.store.clearSelection()\n        } else {\n          instance.store.cleanSelection()\n        }\n      }\n      instance.store.updateAllSelected()\n      if (instance.$ready) {\n        instance.store.scheduleLayout()\n      }\n    },\n\n    insertColumn(\n      states: StoreStates,\n      column: TableColumnCtx<T>,\n      parent: TableColumnCtx<T>,\n      updateColumnOrder: () => void\n    ) {\n      const array = unref(states._columns)\n      let newColumns = []\n      if (!parent) {\n        array.push(column)\n        newColumns = array\n      } else {\n        if (parent && !parent.children) {\n          parent.children = []\n        }\n        parent.children?.push(column)\n        newColumns = replaceColumn(array, parent)\n      }\n      sortColumn(newColumns)\n      states._columns.value = newColumns\n      states.updateOrderFns.push(updateColumnOrder)\n      if (column.type === 'selection') {\n        states.selectable.value = column.selectable\n        states.reserveSelection.value = column.reserveSelection\n      }\n      if (instance.$ready) {\n        instance.store.updateColumns() // hack for dynamics insert column\n        instance.store.scheduleLayout()\n      }\n    },\n\n    updateColumnOrder(states: StoreStates, column: TableColumnCtx<T>) {\n      const newColumnIndex = column.getColumnIndex?.()\n      if (newColumnIndex === column.no) return\n\n      sortColumn(states._columns.value)\n\n      if (instance.$ready) {\n        instance.store.updateColumns()\n      }\n    },\n\n    removeColumn(\n      states: StoreStates,\n      column: TableColumnCtx<T>,\n      parent: TableColumnCtx<T>,\n      updateColumnOrder: () => void\n    ) {\n      const array = unref(states._columns) || []\n      if (parent) {\n        parent.children?.splice(\n          parent.children.findIndex((item) => item.id === column.id),\n          1\n        )\n        // fix #10699, delete parent.children immediately will trigger again\n        nextTick(() => {\n          if (parent.children?.length === 0) {\n            delete parent.children\n          }\n        })\n        states._columns.value = replaceColumn(array, parent)\n      } else {\n        const index = array.indexOf(column)\n        if (index > -1) {\n          array.splice(index, 1)\n          states._columns.value = array\n        }\n      }\n\n      const updateFnIndex = states.updateOrderFns.indexOf(updateColumnOrder)\n      updateFnIndex > -1 && states.updateOrderFns.splice(updateFnIndex, 1)\n\n      if (instance.$ready) {\n        instance.store.updateColumns() // hack for dynamics remove column\n        instance.store.scheduleLayout()\n      }\n    },\n\n    sort(states: StoreStates, options: Sort) {\n      const { prop, order, init } = options\n      if (prop) {\n        const column = unref(states.columns).find(\n          (column) => column.property === prop\n        )\n        if (column) {\n          column.order = order\n          instance.store.updateSort(column, prop, order)\n          instance.store.commit('changeSortCondition', { init })\n        }\n      }\n    },\n\n    changeSortCondition(states: StoreStates, options: Sort) {\n      // 修复 pr https://github.com/ElemeFE/element/pull/15012 导致的 bug\n      // https://github.com/element-plus/element-plus/pull/4640\n      const { sortingColumn, sortProp, sortOrder } = states\n      const columnValue = unref(sortingColumn),\n        propValue = unref(sortProp),\n        orderValue = unref(sortOrder)\n      if (isNull(orderValue)) {\n        states.sortingColumn.value = null\n        states.sortProp.value = null\n      }\n      const ignore = { filter: true }\n      instance.store.execQuery(ignore)\n\n      if (!options || !(options.silent || options.init)) {\n        instance.emit('sort-change', {\n          column: columnValue,\n          prop: propValue,\n          order: orderValue,\n        })\n      }\n\n      instance.store.updateTableScrollY()\n    },\n\n    filterChange(_states: StoreStates, options: Filter<T>) {\n      const { column, values, silent } = options\n      const newFilters = instance.store.updateFilters(column, values)\n      instance.store.execQuery()\n\n      if (!silent) {\n        instance.emit('filter-change', newFilters)\n      }\n      instance.store.updateTableScrollY()\n    },\n\n    toggleAllSelection() {\n      instance.store.toggleAllSelection?.()\n    },\n\n    rowSelectedChanged(_states: StoreStates, row: T) {\n      instance.store.toggleRowSelection(row)\n      instance.store.updateAllSelected()\n    },\n\n    setHoverRow(states: StoreStates, row: T) {\n      states.hoverRow.value = row\n    },\n\n    setCurrentRow(_states: StoreStates, row: T) {\n      instance.store.updateCurrentRow(row)\n    },\n  }\n  const commit = function (name: keyof typeof mutations, ...args: any[]) {\n    const mutations = instance.store.mutations\n    if (mutations[name]) {\n      ;(mutations[name] as any).apply(instance, [\n        instance.store.states,\n        ...args,\n      ])\n    } else {\n      throw new Error(`Action not found: ${name}`)\n    }\n  }\n  const updateTableScrollY = function () {\n    nextTick(() => instance.layout.updateScrollY.apply(instance.layout))\n  }\n  return {\n    ns,\n    ...watcher,\n    mutations,\n    commit,\n    updateTableScrollY,\n  }\n}\n\nexport default useStore\n\nclass HelperStore<T extends DefaultRow> {\n  Return = useStore<T>()\n}\n\ntype StoreFilter = Record<string, string[]>\ntype Store<T extends DefaultRow> = HelperStore<T>['Return']\nexport type { WatcherPropsData, Store, StoreFilter }\n","import { watch } from 'vue'\nimport { debounce } from 'lodash-unified'\nimport { isObject } from '@element-plus/utils'\nimport useStore from '.'\n\nimport type { Store } from '.'\nimport type { DefaultRow, Table, TableProps } from '../table/defaults'\n\nconst InitialStateMap = {\n  rowKey: 'rowKey',\n  defaultExpandAll: 'defaultExpandAll',\n  selectOnIndeterminate: 'selectOnIndeterminate',\n  indent: 'indent',\n  lazy: 'lazy',\n  data: 'data',\n  ['treeProps.hasChildren']: {\n    key: 'lazyColumnIdentifier',\n    default: 'hasChildren',\n  },\n  ['treeProps.children']: {\n    key: 'childrenColumnName',\n    default: 'children',\n  },\n  ['treeProps.checkStrictly']: {\n    key: 'checkStrictly',\n    default: false,\n  },\n}\n\nexport function createStore<T extends DefaultRow>(\n  table: Table<T>,\n  props: TableProps<T>\n) {\n  if (!table) {\n    throw new Error('Table is required.')\n  }\n\n  const store = useStore<T>()\n  // fix https://github.com/ElemeFE/element/issues/14075\n  // related pr https://github.com/ElemeFE/element/pull/14146\n  store.toggleAllSelection = debounce(store._toggleAllSelection, 10)\n  Object.keys(InitialStateMap).forEach((key) => {\n    handleValue(getArrKeysValue(props, key), key, store)\n  })\n  proxyTableProps(store, props)\n  return store\n}\n\nfunction proxyTableProps<T extends DefaultRow>(\n  store: Store<T>,\n  props: TableProps<T>\n) {\n  Object.keys(InitialStateMap).forEach((key) => {\n    watch(\n      () => getArrKeysValue(props, key),\n      (value) => {\n        handleValue(value, key, store)\n      }\n    )\n  })\n}\n\nfunction handleValue<T extends DefaultRow>(\n  value: string | boolean | Record<string, any>,\n  propsKey: string,\n  store: Store<T>\n) {\n  let newVal = value\n  let storeKey = InitialStateMap[propsKey as keyof typeof InitialStateMap]\n  if (isObject(storeKey)) {\n    newVal = newVal || storeKey.default\n    storeKey = storeKey.key\n  }\n  ;((store.states as any)[storeKey] as any).value = newVal\n}\n\nfunction getArrKeysValue<T extends DefaultRow>(\n  props: TableProps<T>,\n  key: string\n) {\n  if ((key as keyof typeof props).includes('.')) {\n    const keyList = (key as keyof typeof props).split('.')\n    let value: string | Record<string, any> = props\n    keyList.forEach((k) => {\n      value = (value as Record<string, any>)[k]\n    })\n    return value\n  } else {\n    return (props as any)[key] as boolean | string\n  }\n}\n","import { isRef, nextTick, ref } from 'vue'\nimport { isNull } from 'lodash-unified'\nimport { hasOwn, isClient, isNumber, isString } from '@element-plus/utils'\nimport { parseHeight } from './util'\n\nimport type { Ref } from 'vue'\nimport type { TableColumnCtx } from './table-column/defaults'\nimport type { TableHeader } from './table-header'\nimport type { DefaultRow, Table } from './table/defaults'\nimport type { Store } from './store'\n\nclass TableLayout<T extends DefaultRow> {\n  observers: TableHeader[]\n  table: Table<T>\n  store: Store<T>\n  columns: TableColumnCtx<T>[]\n  fit: boolean\n  showHeader: boolean\n\n  height: Ref<null | number>\n  scrollX: Ref<boolean>\n  scrollY: Ref<boolean>\n  bodyWidth: Ref<null | number>\n  fixedWidth: Ref<null | number>\n  rightFixedWidth: Ref<null | number>\n  tableHeight!: Ref<null | number>\n  headerHeight!: Ref<null | number> // Table Header Height\n  appendHeight!: Ref<null | number> // Append Slot Height\n  footerHeight!: Ref<null | number> // Table Footer Height\n  gutterWidth: number\n  constructor(options: Record<string, any>) {\n    this.observers = []\n    this.table = null as unknown as Table<T>\n    this.store = null as unknown as Store<T>\n    this.columns = []\n    this.fit = true\n    this.showHeader = true\n    this.height = ref(null)\n    this.scrollX = ref(false)\n    this.scrollY = ref(false)\n    this.bodyWidth = ref(null)\n    this.fixedWidth = ref(null)\n    this.rightFixedWidth = ref(null)\n    this.gutterWidth = 0\n    for (const name in options) {\n      if (hasOwn(options, name)) {\n        if (isRef(this[name])) {\n          ;(this[name] as Ref).value = options[name]\n        } else {\n          this[name as keyof typeof this] = options[name]\n        }\n      }\n    }\n    if (!this.table) {\n      throw new Error('Table is required for Table Layout')\n    }\n    if (!this.store) {\n      throw new Error('Store is required for Table Layout')\n    }\n  }\n\n  updateScrollY() {\n    const height = this.height.value\n    /**\n     * When the height is not initialized, it is null.\n     * After the table is initialized, when the height is not configured, the height is 0.\n     */\n    if (isNull(height)) return false\n    const scrollBarRef = this.table.refs.scrollBarRef\n    if (this.table.vnode.el && scrollBarRef?.wrapRef) {\n      let scrollY = true\n      const prevScrollY = this.scrollY.value\n      scrollY =\n        scrollBarRef.wrapRef.scrollHeight > scrollBarRef.wrapRef.clientHeight\n      this.scrollY.value = scrollY\n      return prevScrollY !== scrollY\n    }\n    return false\n  }\n\n  setHeight(value: string | number | null, prop = 'height') {\n    if (!isClient) return\n    const el = this.table.vnode.el\n    value = parseHeight(value)\n    this.height.value = Number(value)\n\n    if (!el && (value || value === 0)) {\n      nextTick(() => this.setHeight(value, prop))\n      return\n    }\n\n    if (el && isNumber(value)) {\n      el.style[prop] = `${value}px`\n      this.updateElsHeight()\n    } else if (el && isString(value)) {\n      el.style[prop] = value\n      this.updateElsHeight()\n    }\n  }\n\n  setMaxHeight(value: string | number | null) {\n    this.setHeight(value, 'max-height')\n  }\n\n  getFlattenColumns(): TableColumnCtx<T>[] {\n    const flattenColumns: TableColumnCtx<T>[] = []\n    const columns = this.table.store.states.columns.value\n    columns.forEach((column) => {\n      if (column.isColumnGroup) {\n        // eslint-disable-next-line prefer-spread\n        flattenColumns.push.apply(flattenColumns, column.columns)\n      } else {\n        flattenColumns.push(column)\n      }\n    })\n\n    return flattenColumns\n  }\n\n  updateElsHeight() {\n    this.updateScrollY()\n    this.notifyObservers('scrollable')\n  }\n\n  headerDisplayNone(elm: HTMLElement) {\n    if (!elm) return true\n    let headerChild = elm\n    while (headerChild.tagName !== 'DIV') {\n      if (getComputedStyle(headerChild).display === 'none') {\n        return true\n      }\n      headerChild = headerChild.parentElement!\n    }\n    return false\n  }\n\n  updateColumnsWidth() {\n    if (!isClient) return\n    const fit = this.fit\n    const bodyWidth = this.table.vnode.el?.clientWidth\n    let bodyMinWidth = 0\n\n    const flattenColumns = this.getFlattenColumns()\n    const flexColumns = flattenColumns.filter(\n      (column) => !isNumber(column.width)\n    )\n    flattenColumns.forEach((column) => {\n      // Clean those columns whose width changed from flex to unflex\n      if (isNumber(column.width) && column.realWidth) column.realWidth = null\n    })\n    if (flexColumns.length > 0 && fit) {\n      flattenColumns.forEach((column) => {\n        bodyMinWidth += Number(column.width || column.minWidth || 80)\n      })\n      if (bodyMinWidth <= bodyWidth) {\n        // DON'T HAVE SCROLL BAR\n        this.scrollX.value = false\n\n        const totalFlexWidth = bodyWidth - bodyMinWidth\n\n        if (flexColumns.length === 1) {\n          flexColumns[0].realWidth =\n            Number(flexColumns[0].minWidth || 80) + totalFlexWidth\n        } else {\n          const allColumnsWidth = flexColumns.reduce(\n            (prev, column) => prev + Number(column.minWidth || 80),\n            0\n          )\n          const flexWidthPerPixel = totalFlexWidth / allColumnsWidth\n          let noneFirstWidth = 0\n\n          flexColumns.forEach((column, index) => {\n            if (index === 0) return\n            const flexWidth = Math.floor(\n              Number(column.minWidth || 80) * flexWidthPerPixel\n            )\n            noneFirstWidth += flexWidth\n            column.realWidth = Number(column.minWidth || 80) + flexWidth\n          })\n\n          flexColumns[0].realWidth =\n            Number(flexColumns[0].minWidth || 80) +\n            totalFlexWidth -\n            noneFirstWidth\n        }\n      } else {\n        // HAVE HORIZONTAL SCROLL BAR\n        this.scrollX.value = true\n        flexColumns.forEach((column) => {\n          column.realWidth = Number(column.minWidth)\n        })\n      }\n\n      this.bodyWidth.value = Math.max(bodyMinWidth, bodyWidth)\n      this.table.state.resizeState.value.width = this.bodyWidth.value\n    } else {\n      flattenColumns.forEach((column) => {\n        if (!column.width && !column.minWidth) {\n          column.realWidth = 80\n        } else {\n          column.realWidth = Number(column.width || column.minWidth)\n        }\n        bodyMinWidth += column.realWidth\n      })\n      this.scrollX.value = bodyMinWidth > bodyWidth\n\n      this.bodyWidth.value = bodyMinWidth\n    }\n\n    const fixedColumns = this.store.states.fixedColumns.value\n\n    if (fixedColumns.length > 0) {\n      let fixedWidth = 0\n      fixedColumns.forEach((column) => {\n        fixedWidth += Number(column.realWidth || column.width)\n      })\n\n      this.fixedWidth.value = fixedWidth\n    }\n\n    const rightFixedColumns = this.store.states.rightFixedColumns.value\n    if (rightFixedColumns.length > 0) {\n      let rightFixedWidth = 0\n      rightFixedColumns.forEach((column) => {\n        rightFixedWidth += Number(column.realWidth || column.width)\n      })\n\n      this.rightFixedWidth.value = rightFixedWidth\n    }\n    this.notifyObservers('columns')\n  }\n\n  addObserver(observer: TableHeader) {\n    this.observers.push(observer)\n  }\n\n  removeObserver(observer: TableHeader) {\n    const index = this.observers.indexOf(observer)\n    if (index !== -1) {\n      this.observers.splice(index, 1)\n    }\n  }\n\n  notifyObservers(event: string) {\n    const observers = this.observers\n    observers.forEach((observer) => {\n      switch (event) {\n        case 'columns':\n          observer.state?.onColumnsChange(this as TableLayout<DefaultRow>)\n          break\n        case 'scrollable':\n          observer.state?.onScrollableChange(this as TableLayout<DefaultRow>)\n          break\n        default:\n          throw new Error(`Table Layout don't have event ${event}.`)\n      }\n    })\n  }\n}\n\nexport default TableLayout\n","<template>\n  <el-tooltip\n    ref=\"tooltip\"\n    :visible=\"tooltipVisible\"\n    :offset=\"0\"\n    :placement=\"placement\"\n    :show-arrow=\"false\"\n    :stop-popper-mouse-event=\"false\"\n    teleported\n    effect=\"light\"\n    pure\n    :popper-class=\"filterClassName\"\n    persistent\n    :append-to=\"appendTo\"\n  >\n    <template #content>\n      <div v-if=\"multiple\">\n        <div :class=\"ns.e('content')\">\n          <el-scrollbar :wrap-class=\"ns.e('wrap')\">\n            <el-checkbox-group\n              v-model=\"filteredValue\"\n              :class=\"ns.e('checkbox-group')\"\n            >\n              <el-checkbox\n                v-for=\"filter in filters\"\n                :key=\"filter.value\"\n                :value=\"filter.value\"\n              >\n                {{ filter.text }}\n              </el-checkbox>\n            </el-checkbox-group>\n          </el-scrollbar>\n        </div>\n        <div :class=\"ns.e('bottom')\">\n          <button\n            :class=\"{ [ns.is('disabled')]: filteredValue.length === 0 }\"\n            :disabled=\"filteredValue.length === 0\"\n            type=\"button\"\n            @click=\"handleConfirm\"\n          >\n            {{ t('el.table.confirmFilter') }}\n          </button>\n          <button type=\"button\" @click=\"handleReset\">\n            {{ t('el.table.resetFilter') }}\n          </button>\n        </div>\n      </div>\n      <ul v-else :class=\"ns.e('list')\">\n        <li\n          :class=\"[\n            ns.e('list-item'),\n            {\n              [ns.is('active')]: isPropAbsent(filterValue),\n            },\n          ]\"\n          @click=\"handleSelect(null)\"\n        >\n          {{ t('el.table.clearFilter') }}\n        </li>\n        <li\n          v-for=\"filter in filters\"\n          :key=\"filter.value\"\n          :class=\"[ns.e('list-item'), ns.is('active', isActive(filter))]\"\n          :label=\"filter.value\"\n          @click=\"handleSelect(filter.value)\"\n        >\n          {{ filter.text }}\n        </li>\n      </ul>\n    </template>\n    <template #default>\n      <span\n        v-click-outside:[popperPaneRef]=\"hideFilterPanel\"\n        :class=\"[\n          `${ns.namespace.value}-table__column-filter-trigger`,\n          `${ns.namespace.value}-none-outline`,\n        ]\"\n        @click=\"showFilterPanel\"\n      >\n        <el-icon>\n          <slot name=\"filter-icon\">\n            <arrow-up v-if=\"column?.filterOpened\" />\n            <arrow-down v-else />\n          </slot>\n        </el-icon>\n      </span>\n    </template>\n  </el-tooltip>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, getCurrentInstance, ref, watch } from 'vue'\nimport ElCheckbox from '@element-plus/components/checkbox'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { ArrowDown, ArrowUp } from '@element-plus/icons-vue'\nimport { ClickOutside } from '@element-plus/directives'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport ElTooltip, {\n  useTooltipContentProps,\n} from '@element-plus/components/tooltip'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport { isPropAbsent } from '@element-plus/utils'\n\nimport type { DefaultRow } from './table/defaults'\nimport type { TooltipInstance } from '@element-plus/components/tooltip'\nimport type { Placement } from '@element-plus/components/popper'\nimport type { PropType, WritableComputedRef } from 'vue'\nimport type { TableColumnCtx } from './table-column/defaults'\nimport type { TableHeader } from './table-header'\nimport type { Store } from './store'\n\nconst { CheckboxGroup: ElCheckboxGroup } = ElCheckbox\n\nexport default defineComponent({\n  name: 'ElTableFilterPanel',\n  components: {\n    ElCheckbox,\n    ElCheckboxGroup,\n    ElScrollbar,\n    ElTooltip,\n    ElIcon,\n    ArrowDown,\n    ArrowUp,\n  },\n  directives: { ClickOutside },\n  props: {\n    placement: {\n      type: String as PropType<Placement>,\n      default: 'bottom-start',\n    },\n    store: {\n      type: Object as PropType<Store<DefaultRow>>,\n    },\n    column: {\n      type: Object as PropType<TableColumnCtx<DefaultRow>>,\n    },\n    upDataColumn: {\n      type: Function,\n    },\n    appendTo: useTooltipContentProps.appendTo,\n  },\n  setup(props) {\n    const instance = getCurrentInstance()\n    const { t } = useLocale()\n    const ns = useNamespace('table-filter')\n    const parent = instance?.parent as TableHeader\n    if (props.column && !parent.filterPanels.value[props.column.id]) {\n      parent.filterPanels.value[props.column.id] = instance\n    }\n    const tooltipVisible = ref(false)\n    const tooltip = ref<TooltipInstance | null>(null)\n    const filters = computed(() => {\n      return props.column && props.column.filters\n    })\n    const filterClassName = computed(() => {\n      if (props.column && props.column.filterClassName) {\n        return `${ns.b()} ${props.column.filterClassName}`\n      }\n      return ns.b()\n    })\n    const filterValue = computed({\n      get: () => (props.column?.filteredValue || [])[0],\n      set: (value?: string | null) => {\n        if (filteredValue.value) {\n          if (!isPropAbsent(value)) {\n            filteredValue.value.splice(0, 1, value)\n          } else {\n            filteredValue.value.splice(0, 1)\n          }\n        }\n      },\n    })\n    const filteredValue: WritableComputedRef<string[]> = computed({\n      get() {\n        if (props.column) {\n          return props.column.filteredValue || []\n        }\n        return []\n      },\n      set(value: string[]) {\n        if (props.column) {\n          props.upDataColumn?.('filteredValue', value)\n        }\n      },\n    })\n    const multiple = computed(() => {\n      if (props.column) {\n        return props.column.filterMultiple\n      }\n      return true\n    })\n    const isActive = (filter: { value: string; text: string }) => {\n      return filter.value === filterValue.value\n    }\n    const hidden = () => {\n      tooltipVisible.value = false\n    }\n    const showFilterPanel = (e: MouseEvent) => {\n      e.stopPropagation()\n      tooltipVisible.value = !tooltipVisible.value\n    }\n    const hideFilterPanel = () => {\n      tooltipVisible.value = false\n    }\n    const handleConfirm = () => {\n      confirmFilter(filteredValue.value)\n      hidden()\n    }\n    const handleReset = () => {\n      filteredValue.value = []\n      confirmFilter(filteredValue.value)\n      hidden()\n    }\n    const handleSelect = (_filterValue?: string | null) => {\n      filterValue.value = _filterValue!\n      if (!isPropAbsent(_filterValue)) {\n        confirmFilter(filteredValue.value)\n      } else {\n        confirmFilter([])\n      }\n      hidden()\n    }\n    const confirmFilter = (filteredValue: unknown[]) => {\n      props.store?.commit('filterChange', {\n        column: props.column,\n        values: filteredValue,\n      })\n      props.store?.updateAllSelected()\n    }\n    watch(\n      tooltipVisible,\n      (value) => {\n        if (props.column) {\n          props.upDataColumn?.('filterOpened', value)\n        }\n      },\n      {\n        immediate: true,\n      }\n    )\n\n    const popperPaneRef = computed(() => {\n      return tooltip.value?.popperRef?.contentRef\n    })\n\n    return {\n      tooltipVisible,\n      multiple,\n      filterClassName,\n      filteredValue,\n      filterValue,\n      filters,\n      handleConfirm,\n      handleReset,\n      handleSelect,\n      isPropAbsent,\n      isActive,\n      t,\n      ns,\n      showFilterPanel,\n      hideFilterPanel,\n      popperPaneRef,\n      tooltip,\n    }\n  },\n})\n</script>\n","import {\n  computed,\n  getCurrentInstance,\n  onBeforeMount,\n  onMounted,\n  onUnmounted,\n  onUpdated,\n} from 'vue'\n\nimport type { TableHeader } from './table-header'\nimport type TableLayout from './table-layout'\nimport type { DefaultRow, Table, TableColumnCtx } from './table/defaults'\n\nfunction useLayoutObserver<T extends DefaultRow>(root: Table<T>) {\n  const instance = getCurrentInstance() as TableHeader\n  onBeforeMount(() => {\n    tableLayout.value.addObserver(instance)\n  })\n  onMounted(() => {\n    onColumnsChange(tableLayout.value)\n    onScrollableChange(tableLayout.value)\n  })\n  onUpdated(() => {\n    onColumnsChange(tableLayout.value)\n    onScrollableChange(tableLayout.value)\n  })\n  onUnmounted(() => {\n    tableLayout.value.removeObserver(instance)\n  })\n  const tableLayout = computed(() => {\n    const layout = root.layout as TableLayout<T>\n    if (!layout) {\n      throw new Error('Can not find table layout.')\n    }\n    return layout\n  })\n  const onColumnsChange = (layout: TableLayout<T>) => {\n    const cols = root.vnode.el?.querySelectorAll('colgroup > col') || []\n    if (!cols.length) return\n    const flattenColumns = layout.getFlattenColumns()\n    const columnsMap: Record<string, TableColumnCtx<T>> = {}\n    flattenColumns.forEach((column) => {\n      columnsMap[column.id] = column\n    })\n    for (let i = 0, j = cols.length; i < j; i++) {\n      const col = cols[i]\n      const name = col.getAttribute('name')\n      const column = columnsMap[name]\n      if (column) {\n        col.setAttribute('width', column.realWidth || column.width)\n      }\n    }\n  }\n\n  const onScrollableChange = (layout: TableLayout<T>) => {\n    const cols =\n      root.vnode.el?.querySelectorAll('colgroup > col[name=gutter]') || []\n    for (let i = 0, j = cols.length; i < j; i++) {\n      const col = cols[i]\n      col.setAttribute('width', layout.scrollY.value ? layout.gutterWidth : '0')\n    }\n    const ths = root.vnode.el?.querySelectorAll('th.gutter') || []\n    for (let i = 0, j = ths.length; i < j; i++) {\n      const th = ths[i]\n      th.style.width = layout.scrollY.value ? `${layout.gutterWidth}px` : '0'\n      th.style.display = layout.scrollY.value ? '' : 'none'\n    }\n  }\n\n  return {\n    tableLayout: tableLayout.value,\n    onColumnsChange,\n    onScrollableChange,\n  }\n}\n\nexport default useLayoutObserver\n","import type { InjectionKey } from 'vue'\nimport type { DefaultRow, Table } from './table/defaults'\n\nexport const TABLE_INJECTION_KEY: InjectionKey<Table<DefaultRow>> =\n  Symbol('ElTable')\n","import { getCurrentInstance, inject, ref } from 'vue'\nimport { isNull } from 'lodash-unified'\nimport {\n  addClass,\n  hasClass,\n  isClient,\n  isElement,\n  removeClass,\n} from '@element-plus/utils'\nimport { TABLE_INJECTION_KEY } from '../tokens'\n\nimport type { EmitFn } from '@element-plus/utils'\nimport type { TableHeaderProps } from '.'\nimport type { TableColumnCtx } from '../table-column/defaults'\nimport type { DefaultRow, TableSortOrder } from '../table/defaults'\n\nfunction useEvent<T extends DefaultRow>(\n  props: TableHeaderProps<T>,\n  emit: EmitFn<string[]>\n) {\n  const instance = getCurrentInstance()\n  const parent = inject(TABLE_INJECTION_KEY)\n  const handleFilterClick = (event: Event) => {\n    event.stopPropagation()\n    return\n  }\n\n  const handleHeaderClick = (event: Event, column: TableColumnCtx<T>) => {\n    if (!column.filters && column.sortable) {\n      handleSortClick(event, column, false)\n    } else if (column.filterable && !column.sortable) {\n      handleFilterClick(event)\n    }\n    parent?.emit('header-click', column, event)\n  }\n\n  const handleHeaderContextMenu = (event: Event, column: TableColumnCtx<T>) => {\n    parent?.emit('header-contextmenu', column, event)\n  }\n  const draggingColumn = ref<TableColumnCtx<T> | null>(null)\n  const dragging = ref(false)\n  const dragState = ref<{\n    startMouseLeft: number\n    startLeft: number\n    startColumnLeft: number\n    tableLeft: number\n  }>()\n  const handleMouseDown = (event: MouseEvent, column: TableColumnCtx<T>) => {\n    if (!isClient) return\n    if (column.children && column.children.length > 0) return\n    /* istanbul ignore if */\n    if (draggingColumn.value && props.border) {\n      dragging.value = true\n\n      const table = parent\n      emit('set-drag-visible', true)\n      const tableEl = table?.vnode.el\n      const tableLeft = tableEl?.getBoundingClientRect().left\n      const columnEl = instance?.vnode?.el?.querySelector(`th.${column.id}`)\n      const columnRect = columnEl.getBoundingClientRect()\n      const minLeft = columnRect.left - tableLeft + 30\n\n      addClass(columnEl, 'noclick')\n\n      dragState.value = {\n        startMouseLeft: event.clientX,\n        startLeft: columnRect.right - tableLeft,\n        startColumnLeft: columnRect.left - tableLeft,\n        tableLeft,\n      }\n      const resizeProxy = table?.refs.resizeProxy as HTMLElement\n      resizeProxy.style.left = `${(dragState.value as any).startLeft}px`\n\n      document.onselectstart = function () {\n        return false\n      }\n      document.ondragstart = function () {\n        return false\n      }\n\n      const handleMouseMove = (event: MouseEvent) => {\n        const deltaLeft =\n          event.clientX - (dragState.value as any).startMouseLeft\n        const proxyLeft = (dragState.value as any).startLeft + deltaLeft\n\n        resizeProxy.style.left = `${Math.max(minLeft, proxyLeft)}px`\n      }\n\n      const handleMouseUp = () => {\n        if (dragging.value) {\n          const { startColumnLeft, startLeft } = dragState.value as any\n          const finalLeft = Number.parseInt(resizeProxy.style.left, 10)\n          const columnWidth = finalLeft - startColumnLeft\n          column.width = column.realWidth = columnWidth\n          table?.emit(\n            'header-dragend',\n            column.width,\n            startLeft - startColumnLeft,\n            column,\n            event\n          )\n          requestAnimationFrame(() => {\n            props.store.scheduleLayout(false, true)\n          })\n          document.body.style.cursor = ''\n          dragging.value = false\n          draggingColumn.value = null\n          dragState.value = undefined\n          emit('set-drag-visible', false)\n        }\n\n        document.removeEventListener('mousemove', handleMouseMove)\n        document.removeEventListener('mouseup', handleMouseUp)\n        document.onselectstart = null\n        document.ondragstart = null\n\n        setTimeout(() => {\n          removeClass(columnEl, 'noclick')\n        }, 0)\n      }\n\n      document.addEventListener('mousemove', handleMouseMove)\n      document.addEventListener('mouseup', handleMouseUp)\n    }\n  }\n\n  const handleMouseMove = (event: MouseEvent, column: TableColumnCtx<T>) => {\n    if (column.children && column.children.length > 0) return\n    const el = event.target as HTMLElement\n    if (!isElement(el)) {\n      return\n    }\n    const target = el?.closest('th')\n\n    if (!column || !column.resizable || !target) return\n\n    if (!dragging.value && props.border) {\n      const rect = target.getBoundingClientRect()\n\n      const bodyStyle = document.body.style\n      const isLastTh = target.parentNode?.lastElementChild === target\n      const allowDarg = props.allowDragLastColumn || !isLastTh\n      if (rect.width > 12 && rect.right - event.clientX < 8 && allowDarg) {\n        bodyStyle.cursor = 'col-resize'\n        if (hasClass(target, 'is-sortable')) {\n          target.style.cursor = 'col-resize'\n        }\n        draggingColumn.value = column as any\n      } else if (!dragging.value) {\n        bodyStyle.cursor = ''\n        if (hasClass(target, 'is-sortable')) {\n          target.style.cursor = 'pointer'\n        }\n        draggingColumn.value = null\n      }\n    }\n  }\n\n  const handleMouseOut = () => {\n    if (!isClient) return\n    document.body.style.cursor = ''\n  }\n  const toggleOrder = ({ order, sortOrders }: TableColumnCtx<T>) => {\n    if ((order as string) === '') return sortOrders[0]\n    const index = sortOrders.indexOf(order || null)\n    return sortOrders[index > sortOrders.length - 2 ? 0 : index + 1]\n  }\n  const handleSortClick = (\n    event: Event,\n    column: TableColumnCtx<T>,\n    givenOrder?: TableSortOrder | boolean\n  ) => {\n    event.stopPropagation()\n    const order = (\n      column.order === givenOrder ? null : givenOrder || toggleOrder(column)\n    ) as TableSortOrder | null\n    const target = (event.target as HTMLElement)?.closest('th')\n\n    if (target) {\n      if (hasClass(target, 'noclick')) {\n        removeClass(target, 'noclick')\n        return\n      }\n    }\n\n    if (!column.sortable) return\n\n    const clickTarget = event.currentTarget\n\n    if (\n      ['ascending', 'descending'].some(\n        (str) =>\n          hasClass(clickTarget as Element, str) &&\n          !column.sortOrders.includes(str as TableSortOrder)\n      )\n    ) {\n      return\n    }\n\n    const states = props.store.states\n    let sortProp = states.sortProp.value\n    let sortOrder\n    const sortingColumn = states.sortingColumn.value\n\n    if (\n      sortingColumn !== column ||\n      (sortingColumn === column && isNull(sortingColumn.order))\n    ) {\n      if (sortingColumn) {\n        sortingColumn.order = null\n      }\n      states.sortingColumn.value = column\n      sortProp = column.property\n    }\n    if (!order) {\n      sortOrder = column.order = null\n    } else {\n      sortOrder = column.order = order\n    }\n\n    states.sortProp.value = sortProp\n    states.sortOrder.value = sortOrder\n\n    parent?.store.commit('changeSortCondition')\n  }\n\n  return {\n    handleHeaderClick,\n    handleHeaderContextMenu,\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseOut,\n    handleSortClick,\n    handleFilterClick,\n  }\n}\n\nexport default useEvent\n","import { inject } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { isFunction, isString } from '@element-plus/utils'\nimport {\n  ensurePosition,\n  getFixedColumnOffset,\n  getFixedColumnsClass,\n} from '../util'\nimport { TABLE_INJECTION_KEY } from '../tokens'\n\nimport type { TableColumnCtx } from '../table-column/defaults'\nimport type { DefaultRow } from '../table/defaults'\nimport type { TableHeaderProps } from '.'\n\nfunction useStyle<T extends DefaultRow>(props: TableHeaderProps<T>) {\n  const parent = inject(TABLE_INJECTION_KEY)\n  const ns = useNamespace('table')\n\n  const getHeaderRowStyle = (rowIndex: number) => {\n    const headerRowStyle = parent?.props.headerRowStyle\n    if (isFunction(headerRowStyle)) {\n      return headerRowStyle.call(null, { rowIndex })\n    }\n    return headerRowStyle\n  }\n\n  const getHeaderRowClass = (rowIndex: number): string => {\n    const classes: string[] = []\n    const headerRowClassName = parent?.props.headerRowClassName\n    if (isString(headerRowClassName)) {\n      classes.push(headerRowClassName)\n    } else if (isFunction(headerRowClassName)) {\n      classes.push(headerRowClassName.call(null, { rowIndex }))\n    }\n\n    return classes.join(' ')\n  }\n\n  const getHeaderCellStyle = (\n    rowIndex: number,\n    columnIndex: number,\n    row: T,\n    column: TableColumnCtx<T>\n  ) => {\n    let headerCellStyles = parent?.props.headerCellStyle ?? {}\n    if (isFunction(headerCellStyles)) {\n      headerCellStyles = headerCellStyles.call(null, {\n        rowIndex,\n        columnIndex,\n        row,\n        column,\n      })\n    }\n    const fixedStyle = getFixedColumnOffset<T>(\n      columnIndex,\n      column.fixed,\n      props.store,\n      row as unknown as TableColumnCtx<T>[]\n    )\n    ensurePosition(fixedStyle, 'left')\n    ensurePosition(fixedStyle, 'right')\n    return Object.assign({}, headerCellStyles, fixedStyle)\n  }\n\n  const getHeaderCellClass = (\n    rowIndex: number,\n    columnIndex: number,\n    row: T,\n    column: TableColumnCtx<T>\n  ) => {\n    const fixedClasses = getFixedColumnsClass<T>(\n      ns.b(),\n      columnIndex,\n      column.fixed,\n      props.store,\n      row as unknown as TableColumnCtx<T>[]\n    )\n    const classes = [\n      column.id,\n      column.order,\n      column.headerAlign,\n      column.className,\n      column.labelClassName,\n      ...fixedClasses,\n    ]\n\n    if (!column.children) {\n      classes.push('is-leaf')\n    }\n\n    if (column.sortable) {\n      classes.push('is-sortable')\n    }\n\n    const headerCellClassName = parent?.props.headerCellClassName\n    if (isString(headerCellClassName)) {\n      classes.push(headerCellClassName)\n    } else if (isFunction(headerCellClassName)) {\n      classes.push(\n        headerCellClassName.call(null, {\n          rowIndex,\n          columnIndex,\n          row,\n          column,\n        })\n      )\n    }\n\n    classes.push(ns.e('cell'))\n\n    return classes.filter((className) => Boolean(className)).join(' ')\n  }\n\n  return {\n    getHeaderRowStyle,\n    getHeaderRowClass,\n    getHeaderCellStyle,\n    getHeaderCellClass,\n  }\n}\n\nexport default useStyle\n","import { computed, inject } from 'vue'\nimport { TABLE_INJECTION_KEY } from '../tokens'\n\nimport type { DefaultRow } from '../table/defaults'\nimport type { TableColumnCtx } from '../table-column/defaults'\nimport type { TableHeaderProps } from '.'\n\nconst getAllColumns = <T extends DefaultRow>(\n  columns: TableColumnCtx<T>[]\n): TableColumnCtx<T>[] => {\n  const result: TableColumnCtx<T>[] = []\n  columns.forEach((column) => {\n    if (column.children) {\n      result.push(column)\n      // eslint-disable-next-line prefer-spread\n      result.push.apply(result, getAllColumns(column.children))\n    } else {\n      result.push(column)\n    }\n  })\n  return result\n}\n\nexport const convertToRows = <T extends DefaultRow>(\n  originColumns: TableColumnCtx<T>[]\n): TableColumnCtx<T>[][] => {\n  let maxLevel = 1\n  const traverse = (column: TableColumnCtx<T>, parent?: TableColumnCtx<T>) => {\n    if (parent) {\n      column.level = parent.level + 1\n      if (maxLevel < column.level) {\n        maxLevel = column.level\n      }\n    }\n    if (column.children) {\n      let colSpan = 0\n      column.children.forEach((subColumn) => {\n        traverse(subColumn, column)\n        colSpan += subColumn.colSpan\n      })\n      column.colSpan = colSpan\n    } else {\n      column.colSpan = 1\n    }\n  }\n\n  originColumns.forEach((column) => {\n    column.level = 1\n    traverse(column, undefined)\n  })\n\n  const rows: TableColumnCtx<T>[][] = []\n  for (let i = 0; i < maxLevel; i++) {\n    rows.push([])\n  }\n\n  const allColumns: TableColumnCtx<T>[] = getAllColumns(originColumns)\n\n  allColumns.forEach((column) => {\n    if (!column.children) {\n      column.rowSpan = maxLevel - column.level + 1\n    } else {\n      column.rowSpan = 1\n      column.children.forEach((col) => (col.isSubColumn = true))\n    }\n    rows[column.level - 1].push(column)\n  })\n\n  return rows\n}\n\nfunction useUtils<T extends DefaultRow>(props: TableHeaderProps<T>) {\n  const parent = inject(TABLE_INJECTION_KEY)\n  const columnRows = computed(() => {\n    return convertToRows(props.store.states.originColumns.value)\n  })\n  const isGroup = computed(() => {\n    const result = columnRows.value.length > 1\n    if (result && parent) {\n      parent.state.isGroup.value = true\n    }\n    return result\n  })\n  const toggleAllSelection = (event: Event) => {\n    event.stopPropagation()\n    parent?.store.commit('toggleAllSelection')\n  }\n  return {\n    isGroup,\n    toggleAllSelection,\n    columnRows,\n  }\n}\n\nexport default useUtils\n","import {\n  defineComponent,\n  getCurrentInstance,\n  h,\n  inject,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  reactive,\n  ref,\n  watch,\n} from 'vue'\nimport ElCheckbox from '@element-plus/components/checkbox'\nimport { useNamespace } from '@element-plus/hooks'\nimport FilterPanel from '../filter-panel.vue'\nimport useLayoutObserver from '../layout-observer'\nimport { TABLE_INJECTION_KEY } from '../tokens'\nimport TableLayout from '../table-layout'\nimport useEvent from './event-helper'\nimport useStyle from './style.helper'\nimport useUtils from './utils-helper'\n\nimport type { ComponentInternalInstance, PropType, Ref } from 'vue'\nimport type { DefaultRow, Sort } from '../table/defaults'\nimport type { Store } from '../store'\n\nexport interface TableHeader extends ComponentInternalInstance {\n  state: {\n    onColumnsChange: (layout: TableLayout<any>) => void\n    onScrollableChange: (layout: TableLayout<any>) => void\n  }\n  filterPanels: Ref<DefaultRow>\n}\nexport interface TableHeaderProps<T extends DefaultRow> {\n  fixed: string\n  store: Store<T>\n  border: boolean\n  defaultSort: Sort\n  allowDragLastColumn: boolean\n}\n\nexport default defineComponent({\n  name: 'ElTableHeader',\n  components: {\n    ElCheckbox,\n  },\n  props: {\n    fixed: {\n      type: String,\n      default: '',\n    },\n    store: {\n      required: true,\n      type: Object as PropType<TableHeaderProps<any>['store']>,\n    },\n    border: Boolean,\n    defaultSort: {\n      type: Object as PropType<TableHeaderProps<any>['defaultSort']>,\n      default: () => {\n        return {\n          prop: '',\n          order: '',\n        }\n      },\n    },\n    appendFilterPanelTo: {\n      type: String,\n    },\n    allowDragLastColumn: {\n      type: Boolean,\n    },\n  },\n  setup(props, { emit }) {\n    const instance = getCurrentInstance() as TableHeader\n    const parent = inject(TABLE_INJECTION_KEY)\n    const ns = useNamespace('table')\n    const filterPanels = ref({})\n    const { onColumnsChange, onScrollableChange } = useLayoutObserver(parent!)\n\n    const isTableLayoutAuto = parent?.props.tableLayout === 'auto'\n    const saveIndexSelection = reactive(new Map())\n    const theadRef = ref()\n\n    let delayId: ReturnType<typeof setTimeout> | undefined\n    const updateFixedColumnStyle = () => {\n      delayId = setTimeout(() => {\n        if (saveIndexSelection.size > 0) {\n          saveIndexSelection.forEach((column, key) => {\n            const el = theadRef.value.querySelector(\n              `.${key.replace(/\\s/g, '.')}`\n            )\n            if (el) {\n              const width = el.getBoundingClientRect().width\n              column.width = width || column.width\n            }\n          })\n          saveIndexSelection.clear()\n        }\n      })\n    }\n\n    watch(saveIndexSelection, updateFixedColumnStyle)\n    onBeforeUnmount(() => {\n      if (delayId) {\n        clearTimeout(delayId)\n        delayId = undefined\n      }\n    })\n\n    onMounted(async () => {\n      // Need double await, because updateColumns is executed after nextTick for now\n      await nextTick()\n      await nextTick()\n      const { prop, order } = props.defaultSort\n      parent?.store.commit('sort', { prop, order, init: true })\n\n      updateFixedColumnStyle()\n    })\n\n    const {\n      handleHeaderClick,\n      handleHeaderContextMenu,\n      handleMouseDown,\n      handleMouseMove,\n      handleMouseOut,\n      handleSortClick,\n      handleFilterClick,\n    } = useEvent(props as TableHeaderProps<any>, emit)\n    const {\n      getHeaderRowStyle,\n      getHeaderRowClass,\n      getHeaderCellStyle,\n      getHeaderCellClass,\n    } = useStyle(props as TableHeaderProps<any>)\n    const { isGroup, toggleAllSelection, columnRows } = useUtils(\n      props as TableHeaderProps<any>\n    )\n\n    instance.state = {\n      onColumnsChange,\n      onScrollableChange,\n    }\n    instance.filterPanels = filterPanels\n\n    return {\n      ns,\n      filterPanels,\n      onColumnsChange,\n      onScrollableChange,\n      columnRows,\n      getHeaderRowClass,\n      getHeaderRowStyle,\n      getHeaderCellClass,\n      getHeaderCellStyle,\n      handleHeaderClick,\n      handleHeaderContextMenu,\n      handleMouseDown,\n      handleMouseMove,\n      handleMouseOut,\n      handleSortClick,\n      handleFilterClick,\n      isGroup,\n      toggleAllSelection,\n      saveIndexSelection,\n      isTableLayoutAuto,\n      theadRef,\n      updateFixedColumnStyle,\n    }\n  },\n  render() {\n    const {\n      ns,\n      isGroup,\n      columnRows,\n      getHeaderCellStyle,\n      getHeaderCellClass,\n      getHeaderRowClass,\n      getHeaderRowStyle,\n      handleHeaderClick,\n      handleHeaderContextMenu,\n      handleMouseDown,\n      handleMouseMove,\n      handleSortClick,\n      handleMouseOut,\n      store,\n      $parent,\n      saveIndexSelection,\n      isTableLayoutAuto,\n    } = this\n    let rowSpan = 1\n    return h(\n      'thead',\n      {\n        ref: 'theadRef',\n        class: { [ns.is('group')]: isGroup },\n      },\n      columnRows.map((subColumns, rowIndex) =>\n        h(\n          'tr',\n          {\n            class: getHeaderRowClass(rowIndex),\n            key: rowIndex,\n            style: getHeaderRowStyle(rowIndex),\n          },\n          subColumns.map((column, cellIndex) => {\n            if (column.rowSpan > rowSpan) {\n              rowSpan = column.rowSpan\n            }\n            const _class = getHeaderCellClass(\n              rowIndex,\n              cellIndex,\n              subColumns,\n              column\n            )\n            if (isTableLayoutAuto && column.fixed) {\n              saveIndexSelection.set(_class, column)\n            }\n            return h(\n              'th',\n              {\n                class: _class,\n                colspan: column.colSpan,\n                key: `${column.id}-thead`,\n                rowspan: column.rowSpan,\n                style: getHeaderCellStyle(\n                  rowIndex,\n                  cellIndex,\n                  subColumns,\n                  column\n                ),\n                onClick: ($event: Event) => {\n                  if (\n                    ($event.currentTarget as Element)?.classList.contains(\n                      'noclick'\n                    )\n                  ) {\n                    return\n                  }\n                  handleHeaderClick($event, column)\n                },\n                onContextmenu: ($event: MouseEvent) =>\n                  handleHeaderContextMenu($event, column),\n                onMousedown: ($event: MouseEvent) =>\n                  handleMouseDown($event, column),\n                onMousemove: ($event: MouseEvent) =>\n                  handleMouseMove($event, column),\n                onMouseout: handleMouseOut,\n              },\n              [\n                h(\n                  'div',\n                  {\n                    class: [\n                      'cell',\n                      column.filteredValue && column.filteredValue.length > 0\n                        ? 'highlight'\n                        : '',\n                    ],\n                  },\n                  [\n                    column.renderHeader\n                      ? column.renderHeader({\n                          column,\n                          $index: cellIndex,\n                          store,\n                          _self: $parent,\n                        })\n                      : column.label,\n                    column.sortable &&\n                      h(\n                        'span',\n                        {\n                          onClick: ($event: Event) =>\n                            handleSortClick($event, column),\n                          class: 'caret-wrapper',\n                        },\n                        [\n                          h('i', {\n                            onClick: ($event: Event) =>\n                              handleSortClick($event, column, 'ascending'),\n                            class: 'sort-caret ascending',\n                          }),\n                          h('i', {\n                            onClick: ($event: Event) =>\n                              handleSortClick($event, column, 'descending'),\n                            class: 'sort-caret descending',\n                          }),\n                        ]\n                      ),\n                    column.filterable &&\n                      h(\n                        FilterPanel as any,\n                        {\n                          store,\n                          placement: column.filterPlacement || 'bottom-start',\n                          appendTo: ($parent as any)?.appendFilterPanelTo,\n                          column,\n                          upDataColumn: (key: never, value: never) => {\n                            column[key] = value\n                          },\n                        },\n                        {\n                          'filter-icon': () =>\n                            column.renderFilterIcon\n                              ? column.renderFilterIcon({\n                                  filterOpened: column.filterOpened,\n                                })\n                              : null,\n                        }\n                      ),\n                  ]\n                ),\n              ]\n            )\n          })\n        )\n      )\n    )\n  },\n})\n","import { h, inject, ref } from 'vue'\nimport { debounce } from 'lodash-unified'\nimport { addClass, hasClass, removeClass } from '@element-plus/utils'\nimport {\n  createTablePopper,\n  getCell,\n  getColumnByCell,\n  removePopper,\n} from '../util'\nimport { TABLE_INJECTION_KEY } from '../tokens'\n\nimport type { TableColumnCtx } from '../table-column/defaults'\nimport type { TableBodyProps } from './defaults'\nimport type { TableOverflowTooltipOptions } from '../util'\nimport type { DefaultRow } from '../table/defaults'\n\nfunction isGreaterThan(a: number, b: number, epsilon = 0.03) {\n  return a - b > epsilon\n}\n\nfunction useEvents<T extends DefaultRow>(props: Partial<TableBodyProps<T>>) {\n  const parent = inject(TABLE_INJECTION_KEY)\n  const tooltipContent = ref('')\n  const tooltipTrigger = ref(h('div'))\n  const handleEvent = (event: Event, row: T, name: string) => {\n    const table = parent\n    const cell = getCell(event)\n    let column: TableColumnCtx<T> | null = null\n    const namespace = table?.vnode.el?.dataset.prefix\n    if (cell) {\n      column = getColumnByCell(\n        {\n          columns: props.store?.states.columns.value ?? [],\n        },\n        cell,\n        namespace\n      )\n      if (column) {\n        table?.emit(`cell-${name}`, row, column, cell, event)\n      }\n    }\n    table?.emit(`row-${name}`, row, column, event)\n  }\n  const handleDoubleClick = (event: Event, row: T) => {\n    handleEvent(event, row, 'dblclick')\n  }\n  const handleClick = (event: Event, row: T) => {\n    props.store?.commit('setCurrentRow', row)\n    handleEvent(event, row, 'click')\n  }\n  const handleContextMenu = (event: Event, row: T) => {\n    handleEvent(event, row, 'contextmenu')\n  }\n  const handleMouseEnter = debounce((index: number) => {\n    props.store?.commit('setHoverRow', index)\n  }, 30)\n  const handleMouseLeave = debounce(() => {\n    props.store?.commit('setHoverRow', null)\n  }, 30)\n  const getPadding = (el: HTMLElement) => {\n    const style = window.getComputedStyle(el, null)\n    const paddingLeft = Number.parseInt(style.paddingLeft, 10) || 0\n    const paddingRight = Number.parseInt(style.paddingRight, 10) || 0\n    const paddingTop = Number.parseInt(style.paddingTop, 10) || 0\n    const paddingBottom = Number.parseInt(style.paddingBottom, 10) || 0\n    return {\n      left: paddingLeft,\n      right: paddingRight,\n      top: paddingTop,\n      bottom: paddingBottom,\n    }\n  }\n\n  const toggleRowClassByCell = (\n    rowSpan: number,\n    event: MouseEvent,\n    toggle: (el: Element, cls: string) => void\n  ) => {\n    let node: Node | null | undefined = (event?.target as Element | null)\n      ?.parentNode\n    while (rowSpan > 1) {\n      node = node?.nextSibling\n      if (!node || node.nodeName !== 'TR') break\n      toggle(node as Element, 'hover-row hover-fixed-row')\n      rowSpan--\n    }\n  }\n\n  const handleCellMouseEnter = (\n    event: MouseEvent,\n    row: T,\n    tooltipOptions: TableOverflowTooltipOptions\n  ) => {\n    if (!parent) return\n    const table = parent\n    const cell = getCell(event)\n    const namespace = table?.vnode.el?.dataset.prefix\n    let column: TableColumnCtx<T> | null = null\n    if (cell) {\n      column = getColumnByCell(\n        {\n          columns: props.store?.states.columns.value ?? [],\n        },\n        cell,\n        namespace\n      )\n      if (!column) {\n        return\n      }\n      if (cell.rowSpan > 1) {\n        toggleRowClassByCell(cell.rowSpan, event, addClass)\n      }\n      const hoverState = (table.hoverState = {\n        cell,\n        column: column as any,\n        row,\n      })\n      table?.emit(\n        'cell-mouse-enter',\n        hoverState.row,\n        hoverState.column,\n        hoverState.cell,\n        event\n      )\n    }\n\n    if (!tooltipOptions) {\n      if (removePopper?.trigger === cell) {\n        removePopper?.()\n      }\n      return\n    }\n\n    // 判断是否text-overflow, 如果是就显示tooltip\n    const cellChild = (event.target as HTMLElement).querySelector(\n      '.cell'\n    ) as HTMLElement\n    if (\n      !(\n        hasClass(cellChild, `${namespace}-tooltip`) &&\n        cellChild.childNodes.length\n      )\n    ) {\n      return\n    }\n    // use range width instead of scrollWidth to determine whether the text is overflowing\n    // to address a potential FireFox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1074543#c3\n    const range = document.createRange()\n    range.setStart(cellChild, 0)\n    range.setEnd(cellChild, cellChild.childNodes.length)\n    /** detail: https://github.com/element-plus/element-plus/issues/10790\n     *  What went wrong?\n     *  UI > Browser > Zoom, In Blink/WebKit, getBoundingClientRect() sometimes returns inexact values, probably due to lost precision during internal calculations. In the example above:\n     *    - Expected: 188\n     *    - Actual: 188.00000762939453\n     */\n    const { width: rangeWidth, height: rangeHeight } =\n      range.getBoundingClientRect()\n    const { width: cellChildWidth, height: cellChildHeight } =\n      cellChild.getBoundingClientRect()\n\n    const { top, left, right, bottom } = getPadding(cellChild)\n    const horizontalPadding = left + right\n    const verticalPadding = top + bottom\n    if (\n      isGreaterThan(rangeWidth + horizontalPadding, cellChildWidth) ||\n      isGreaterThan(rangeHeight + verticalPadding, cellChildHeight) ||\n      // When using a high-resolution screen, it is possible that a returns cellChild.scrollWidth value of 1921 and\n      // cellChildWidth returns a value of 1920.994140625. #16856 #16673\n      isGreaterThan(cellChild.scrollWidth, cellChildWidth)\n    ) {\n      createTablePopper(\n        tooltipOptions,\n        (cell?.innerText || cell?.textContent) ?? '',\n        row,\n        column,\n        cell,\n        table\n      )\n    } else if (removePopper?.trigger === cell) {\n      removePopper?.()\n    }\n  }\n  const handleCellMouseLeave = (event: MouseEvent) => {\n    const cell = getCell(event)\n    if (!cell) return\n    if (cell.rowSpan > 1) {\n      toggleRowClassByCell(cell.rowSpan, event, removeClass)\n    }\n    const oldHoverState = parent?.hoverState\n    parent?.emit(\n      'cell-mouse-leave',\n      oldHoverState?.row,\n      oldHoverState?.column,\n      oldHoverState?.cell,\n      event\n    )\n  }\n\n  return {\n    handleDoubleClick,\n    handleClick,\n    handleContextMenu,\n    handleMouseEnter,\n    handleMouseLeave,\n    handleCellMouseEnter,\n    handleCellMouseLeave,\n    tooltipContent,\n    tooltipTrigger,\n  }\n}\n\nexport default useEvents\n","import { inject } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { isArray, isFunction, isObject, isString } from '@element-plus/utils'\nimport {\n  ensurePosition,\n  getFixedColumnOffset,\n  getFixedColumnsClass,\n} from '../util'\nimport { TABLE_INJECTION_KEY } from '../tokens'\n\nimport type { TableColumnCtx } from '../table-column/defaults'\nimport type { TableBodyProps } from './defaults'\nimport type { DefaultRow, Table } from '../table/defaults'\n\nfunction useStyles<T extends DefaultRow>(props: Partial<TableBodyProps<T>>) {\n  const parent = inject(TABLE_INJECTION_KEY) as Table<T>\n  const ns = useNamespace('table')\n\n  const getRowStyle = (row: T, rowIndex: number) => {\n    const rowStyle = parent?.props.rowStyle\n    if (isFunction(rowStyle)) {\n      return rowStyle.call(null, {\n        row,\n        rowIndex,\n      })\n    }\n    return rowStyle || null\n  }\n\n  const getRowClass = (row: T, rowIndex: number) => {\n    const classes = [ns.e('row')]\n    if (\n      parent?.props.highlightCurrentRow &&\n      row === props.store?.states.currentRow.value\n    ) {\n      classes.push('current-row')\n    }\n\n    if (props.stripe && rowIndex % 2 === 1) {\n      classes.push(ns.em('row', 'striped'))\n    }\n    const rowClassName = parent?.props.rowClassName\n    if (isString(rowClassName)) {\n      classes.push(rowClassName)\n    } else if (isFunction(rowClassName)) {\n      classes.push(\n        rowClassName.call(null, {\n          row,\n          rowIndex,\n        })\n      )\n    }\n    return classes\n  }\n\n  const getCellStyle = (\n    rowIndex: number,\n    columnIndex: number,\n    row: T,\n    column: TableColumnCtx<T>\n  ) => {\n    const cellStyle = parent?.props.cellStyle\n    let cellStyles = cellStyle ?? {}\n    if (isFunction(cellStyle)) {\n      cellStyles = cellStyle.call(null, {\n        rowIndex,\n        columnIndex,\n        row,\n        column,\n      })\n    }\n    const fixedStyle = getFixedColumnOffset(\n      columnIndex,\n      props?.fixed,\n      props.store\n    )\n    ensurePosition(fixedStyle, 'left')\n    ensurePosition(fixedStyle, 'right')\n    return Object.assign({}, cellStyles, fixedStyle)\n  }\n\n  const getCellClass = (\n    rowIndex: number,\n    columnIndex: number,\n    row: T,\n    column: TableColumnCtx<T>,\n    offset: number\n  ) => {\n    const fixedClasses = getFixedColumnsClass(\n      ns.b(),\n      columnIndex,\n      props?.fixed,\n      props.store,\n      undefined,\n      offset\n    )\n    const classes = [column.id, column.align, column.className, ...fixedClasses]\n    const cellClassName = parent?.props.cellClassName\n    if (isString(cellClassName)) {\n      classes.push(cellClassName)\n    } else if (isFunction(cellClassName)) {\n      classes.push(\n        cellClassName.call(null, {\n          rowIndex,\n          columnIndex,\n          row,\n          column,\n        })\n      )\n    }\n    classes.push(ns.e('cell'))\n    return classes.filter((className) => Boolean(className)).join(' ')\n  }\n  const getSpan = (\n    row: T,\n    column: TableColumnCtx<T>,\n    rowIndex: number,\n    columnIndex: number\n  ) => {\n    let rowspan = 1\n    let colspan = 1\n    const fn = parent?.props.spanMethod\n    if (isFunction(fn)) {\n      const result = fn({\n        row,\n        column,\n        rowIndex,\n        columnIndex,\n      })\n      if (isArray(result)) {\n        rowspan = result[0]\n        colspan = result[1]\n      } else if (isObject(result)) {\n        rowspan = result.rowspan\n        colspan = result.colspan\n      }\n    }\n    return { rowspan, colspan }\n  }\n  const getColspanRealWidth = (\n    columns: TableColumnCtx<T>[],\n    colspan: number,\n    index: number\n  ): number => {\n    if (colspan < 1) {\n      return columns[index].realWidth!\n    }\n    const widthArr = columns\n      .map(({ realWidth, width }) => realWidth || width)\n      .slice(index, index + colspan)\n    return Number(\n      widthArr.reduce((acc, width) => Number(acc) + Number(width), -1)\n    )\n  }\n\n  return {\n    getRowStyle,\n    getRowClass,\n    getCellStyle,\n    getCellClass,\n    getSpan,\n    getColspanRealWidth,\n  }\n}\n\nexport default useStyles\n","<template>\n  <td :colspan=\"colspan\" :rowspan=\"rowspan\"><slot /></td>\n</template>\n\n<script setup lang=\"ts\">\ndefineOptions({\n  name: 'TableTdWrapper',\n})\n\ndefineProps({\n  colspan: {\n    type: Number,\n    default: 1,\n  },\n  rowspan: {\n    type: Number,\n    default: 1,\n  },\n})\n</script>\n","import { computed, h, inject } from 'vue'\nimport { merge } from 'lodash-unified'\nimport { useNamespace } from '@element-plus/hooks'\nimport { isBoolean, isPropAbsent } from '@element-plus/utils'\nimport { getRowIdentity } from '../util'\nimport { TABLE_INJECTION_KEY } from '../tokens'\nimport useEvents from './events-helper'\nimport useStyles from './styles-helper'\nimport TdWrapper from './td-wrapper.vue'\n\nimport type { TableBodyProps } from './defaults'\nimport type {\n  DefaultRow,\n  RenderRowData,\n  Table,\n  TableColumnCtx,\n  TableProps,\n  TreeNode,\n} from '../table/defaults'\nimport type { TreeData } from '../store/tree'\nimport type { TableOverflowTooltipOptions } from '../util'\n\nfunction useRender<T extends DefaultRow>(props: Partial<TableBodyProps<T>>) {\n  const parent = inject(TABLE_INJECTION_KEY) as Table<T>\n  const ns = useNamespace('table')\n  const {\n    handleDoubleClick,\n    handleClick,\n    handleContextMenu,\n    handleMouseEnter,\n    handleMouseLeave,\n    handleCellMouseEnter,\n    handleCellMouseLeave,\n    tooltipContent,\n    tooltipTrigger,\n  } = useEvents(props)\n  const {\n    getRowStyle,\n    getRowClass,\n    getCellStyle,\n    getCellClass,\n    getSpan,\n    getColspanRealWidth,\n  } = useStyles(props)\n  const firstDefaultColumnIndex = computed(() => {\n    return props.store?.states.columns.value.findIndex(\n      ({ type }) => type === 'default'\n    )\n  })\n  const getKeyOfRow = (row: T, index: number) => {\n    const rowKey = (parent?.props as Partial<TableProps<T>>)?.rowKey\n    if (rowKey) {\n      return getRowIdentity(row, rowKey)\n    }\n    return index\n  }\n  const rowRender = (\n    row: T,\n    $index: number,\n    treeRowData?: TreeNode,\n    expanded = false\n  ) => {\n    const { tooltipEffect, tooltipOptions, store } = props\n    const { indent, columns } = store!.states\n    const rowClasses = getRowClass(row, $index)\n    let display = true\n    if (treeRowData) {\n      rowClasses.push(ns.em('row', `level-${treeRowData.level}`))\n      display = !!treeRowData.display\n    }\n    const displayStyle = display ? null : { display: 'none' }\n    return h(\n      'tr',\n      {\n        style: [displayStyle, getRowStyle(row, $index)],\n        class: rowClasses,\n        key: getKeyOfRow(row, $index),\n        onDblclick: ($event: Event) => handleDoubleClick($event, row),\n        onClick: ($event: Event) => handleClick($event, row),\n        onContextmenu: ($event: Event) => handleContextMenu($event, row),\n        onMouseenter: () => handleMouseEnter($index),\n        onMouseleave: handleMouseLeave,\n      },\n      columns.value.map((column, cellIndex) => {\n        const { rowspan, colspan } = getSpan(row, column, $index, cellIndex)\n        if (!rowspan || !colspan) {\n          return null\n        }\n        const columnData = Object.assign({}, column)\n        columnData.realWidth = getColspanRealWidth(\n          columns.value,\n          colspan,\n          cellIndex\n        )\n        const data: RenderRowData<T> = {\n          store: store!,\n          _self: props.context || parent!,\n          column: columnData,\n          row,\n          $index,\n          cellIndex,\n          expanded,\n        }\n        if (cellIndex === firstDefaultColumnIndex.value && treeRowData) {\n          data.treeNode = {\n            indent: treeRowData.level && treeRowData.level * indent.value,\n            level: treeRowData.level,\n          }\n          if (isBoolean(treeRowData.expanded)) {\n            data.treeNode.expanded = treeRowData.expanded\n            // 表明是懒加载\n            if ('loading' in treeRowData) {\n              data.treeNode.loading = treeRowData.loading\n            }\n            if ('noLazyChildren' in treeRowData) {\n              data.treeNode.noLazyChildren = treeRowData.noLazyChildren\n            }\n          }\n        }\n        const baseKey = `${getKeyOfRow(row, $index)},${cellIndex}`\n        const patchKey = columnData.columnKey || columnData.rawColumnKey || ''\n        const mergedTooltipOptions =\n          column.showOverflowTooltip &&\n          merge(\n            {\n              effect: tooltipEffect,\n            },\n            tooltipOptions,\n            column.showOverflowTooltip\n          )\n        return h(\n          TdWrapper,\n          {\n            style: getCellStyle($index, cellIndex, row, column),\n            class: getCellClass($index, cellIndex, row, column, colspan - 1),\n            key: `${patchKey}${baseKey}`,\n            rowspan,\n            colspan,\n            onMouseenter: ($event: MouseEvent) =>\n              handleCellMouseEnter(\n                $event,\n                row,\n                mergedTooltipOptions as TableOverflowTooltipOptions\n              ),\n            onMouseleave: handleCellMouseLeave,\n          },\n          {\n            default: () => cellChildren(cellIndex, column, data),\n          }\n        )\n      })\n    )\n  }\n  const cellChildren = <T extends DefaultRow>(\n    _cellIndex: number,\n    column: TableColumnCtx<T>,\n    data: RenderRowData<T>\n  ) => {\n    return column.renderCell(data)\n  }\n\n  const wrappedRowRender = (row: T, $index: number) => {\n    const store = props.store!\n    const { isRowExpanded, assertRowKey } = store\n    const { treeData, lazyTreeNodeMap, childrenColumnName, rowKey } =\n      store.states\n    const columns = store.states.columns.value\n    const hasExpandColumn = columns.some(({ type }) => type === 'expand')\n    if (hasExpandColumn) {\n      const expanded = isRowExpanded(row)\n      const tr = rowRender(row, $index, undefined, expanded)\n      const renderExpanded = parent?.renderExpanded\n      if (!renderExpanded) {\n        console.error('[Element Error]renderExpanded is required.')\n        return tr\n      }\n\n      // 在没设置时候避免 h 执行\n      // 非保留模式且未展开时，直接返回\n      // 使用二维数组包装，避免修改 $index\n      const rows = [[tr]]\n\n      // 仅在需要时创建展开行（保留模式或展开状态）\n      if (parent.props.preserveExpandedContent || expanded) {\n        rows[0].push(\n          h(\n            'tr',\n            {\n              key: `expanded-row__${tr.key as string}`,\n              style: { display: expanded ? '' : 'none' },\n            },\n            [\n              h(\n                'td',\n                {\n                  colspan: columns.length,\n                  class: `${ns.e('cell')} ${ns.e('expanded-cell')}`,\n                },\n                [renderExpanded({ row, $index, store, expanded })]\n              ),\n            ]\n          )\n        )\n      }\n\n      return rows\n    } else if (Object.keys(treeData.value).length) {\n      assertRowKey()\n      // TreeTable 时，rowKey 必须由用户设定，不使用 getKeyOfRow 计算\n      // 在调用 rowRender 函数时，仍然会计算 rowKey，不太好的操作\n      const key = getRowIdentity(row, rowKey.value)\n      let cur = treeData.value[key]\n      let treeRowData = null\n      if (cur) {\n        treeRowData = {\n          expanded: cur.expanded,\n          level: cur.level,\n          display: true,\n          noLazyChildren: undefined as boolean | undefined,\n          loading: undefined as boolean | undefined,\n        }\n        if (isBoolean(cur.lazy)) {\n          if (treeRowData && isBoolean(cur.loaded) && cur.loaded) {\n            treeRowData.noLazyChildren = !(cur.children && cur.children.length)\n          }\n          treeRowData.loading = cur.loading\n        }\n      }\n      const tmp = [rowRender(row, $index, treeRowData ?? undefined)]\n      // 渲染嵌套数据\n      if (cur) {\n        // currentRow 记录的是 index，所以还需主动增加 TreeTable 的 index\n        let i = 0\n        const traverse = (children: T[], parent: TreeData) => {\n          if (!(children && children.length && parent)) return\n          children.forEach((node) => {\n            // 父节点的 display 状态影响子节点的显示状态\n            const innerTreeRowData: Partial<Record<string, any>> = {\n              display: parent.display && parent.expanded,\n              level: parent.level! + 1,\n              expanded: false,\n              noLazyChildren: false,\n              loading: false,\n            }\n            const childKey = getRowIdentity(node, rowKey.value)\n            if (isPropAbsent(childKey)) {\n              throw new Error('For nested data item, row-key is required.')\n            }\n            cur = { ...treeData.value[childKey] }\n            // 对于当前节点，分成有无子节点两种情况。\n            // 如果包含子节点的，设置 expanded 属性。\n            // 对于它子节点的 display 属性由它本身的 expanded 与 display 共同决定。\n            if (cur) {\n              innerTreeRowData.expanded = cur.expanded\n              // 懒加载的某些节点，level 未知\n              cur.level = cur.level || innerTreeRowData.level\n              cur.display = !!(cur.expanded && innerTreeRowData.display)\n              if (isBoolean(cur.lazy)) {\n                if (isBoolean(cur.loaded) && cur.loaded) {\n                  innerTreeRowData.noLazyChildren = !(\n                    cur.children && cur.children.length\n                  )\n                }\n                innerTreeRowData.loading = cur.loading\n              }\n            }\n            i++\n            tmp.push(rowRender(node, $index + i, innerTreeRowData))\n            if (cur) {\n              const nodes =\n                lazyTreeNodeMap.value[childKey] ||\n                node[childrenColumnName.value]\n              traverse(nodes, cur)\n            }\n          })\n        }\n        // 对于 root 节点，display 一定为 true\n        cur.display = true\n        const nodes =\n          lazyTreeNodeMap.value[key] || row[childrenColumnName.value]\n        traverse(nodes, cur)\n      }\n      return tmp\n    } else {\n      return rowRender(row, $index, undefined)\n    }\n  }\n\n  return {\n    wrappedRowRender,\n    tooltipContent,\n    tooltipTrigger,\n  }\n}\n\nexport default useRender\n","import type { PropType } from 'vue'\nimport type { Store } from '../store'\nimport type {\n  ColumnCls,\n  ColumnStyle,\n  DefaultRow,\n  Table,\n} from '../table/defaults'\nimport type { TableOverflowTooltipOptions } from '../util'\n\ninterface TableBodyProps<T extends DefaultRow> {\n  store: Store<T>\n  stripe?: boolean\n  context: Table<T>\n  rowClassName: ColumnCls<T>\n  rowStyle: ColumnStyle<T>\n  fixed: string\n  highlight: boolean\n  tooltipEffect?: string\n  tooltipOptions?: TableOverflowTooltipOptions\n}\n\nconst defaultProps = {\n  store: {\n    required: true,\n    type: Object as PropType<TableBodyProps<any>['store']>,\n  },\n  stripe: Boolean,\n  tooltipEffect: String,\n  tooltipOptions: {\n    type: Object as PropType<TableBodyProps<any>['tooltipOptions']>,\n  },\n  context: {\n    default: () => ({}),\n    type: Object as PropType<TableBodyProps<any>['context']>,\n  },\n  rowClassName: [String, Function] as PropType<\n    TableBodyProps<any>['rowClassName']\n  >,\n  rowStyle: [Object, Function] as PropType<TableBodyProps<any>['rowStyle']>,\n  fixed: {\n    type: String,\n    default: '',\n  },\n  highlight: Boolean,\n}\n\nexport { TableBodyProps }\nexport default defaultProps\n","import {\n  defineComponent,\n  getCurrentInstance,\n  h,\n  inject,\n  onUnmounted,\n  watch,\n} from 'vue'\nimport { addClass, isClient, rAF, removeClass } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport useLayoutObserver from '../layout-observer'\nimport { removePopper } from '../util'\nimport { TABLE_INJECTION_KEY } from '../tokens'\nimport useRender from './render-helper'\nimport defaultProps from './defaults'\n\nimport type { VNode } from 'vue'\n\nexport default defineComponent({\n  name: 'ElTableBody',\n  props: defaultProps,\n  setup(props) {\n    const instance = getCurrentInstance()\n    const parent = inject(TABLE_INJECTION_KEY)\n    const ns = useNamespace('table')\n    const { wrappedRowRender, tooltipContent, tooltipTrigger } =\n      useRender(props)\n    const { onColumnsChange, onScrollableChange } = useLayoutObserver(parent!)\n\n    const hoveredCellList: HTMLTableCellElement[] = []\n    watch(props.store?.states.hoverRow, (newVal: any, oldVal: any) => {\n      const el = instance?.vnode.el as HTMLElement\n      const rows = Array.from(el?.children || []).filter((e) =>\n        e?.classList.contains(`${ns.e('row')}`)\n      )\n\n      // hover rowSpan > 1 choose the whole row\n      let rowNum = newVal\n      const childNodes = rows[rowNum]\n        ?.childNodes as NodeListOf<HTMLTableCellElement>\n      if (childNodes?.length) {\n        let control = 0\n        const indexes = Array.from(childNodes).reduce((acc, item, index) => {\n          // drop colsSpan\n          if (childNodes[index]?.colSpan > 1) {\n            control = childNodes[index]?.colSpan\n          }\n          if (item.nodeName !== 'TD' && control === 0) {\n            acc.push(index)\n          }\n          control > 0 && control--\n          return acc\n        }, [] as number[])\n\n        indexes.forEach((rowIndex) => {\n          rowNum = newVal\n          while (rowNum > 0) {\n            // find from previous\n            const preChildNodes = rows[rowNum - 1]\n              ?.childNodes as NodeListOf<HTMLTableCellElement>\n\n            if (\n              preChildNodes[rowIndex] &&\n              preChildNodes[rowIndex].nodeName === 'TD' &&\n              preChildNodes[rowIndex].rowSpan > 1\n            ) {\n              addClass(preChildNodes[rowIndex], 'hover-cell')\n              hoveredCellList.push(preChildNodes[rowIndex])\n              break\n            }\n            rowNum--\n          }\n        })\n      } else {\n        hoveredCellList.forEach((item) => removeClass(item, 'hover-cell'))\n        hoveredCellList.length = 0\n      }\n      if (!props.store?.states.isComplex.value || !isClient) return\n\n      rAF(() => {\n        // just get first level children; fix #9723\n        const oldRow = rows[oldVal]\n        const newRow = rows[newVal]\n        // when there is fixed row, hover on rowSpan > 1 should not clear the class\n        if (oldRow && !oldRow.classList.contains('hover-fixed-row')) {\n          removeClass(oldRow, 'hover-row')\n        }\n        if (newRow) {\n          addClass(newRow, 'hover-row')\n        }\n      })\n    })\n\n    onUnmounted(() => {\n      removePopper?.()\n    })\n\n    return {\n      ns,\n      onColumnsChange,\n      onScrollableChange,\n      wrappedRowRender,\n      tooltipContent,\n      tooltipTrigger,\n    }\n  },\n  render() {\n    const { wrappedRowRender, store } = this\n    const data = store?.states.data.value || []\n    // Why do we need tabIndex: -1 ?\n    // If you set the tabindex attribute on an element ,\n    // then its child content cannot be scrolled with the arrow keys,\n    // unless you set tabindex on the content too\n    // See https://github.com/facebook/react/issues/25462#issuecomment-1274775248 or https://developer.mozilla.org/zh-CN/docs/Web/HTML/Global_attributes/tabindex\n    return h('tbody', { tabIndex: -1 }, [\n      data.reduce((acc: VNode[], row) => {\n        return acc.concat(wrappedRowRender(row, acc.length) as VNode[])\n      }, []),\n    ])\n  },\n})\n","import { computed, inject } from 'vue'\nimport { TABLE_INJECTION_KEY } from '../tokens'\n\nfunction useMapState() {\n  const table = inject(TABLE_INJECTION_KEY)\n  const store = table?.store\n  const leftFixedLeafCount = computed(() => {\n    return store?.states.fixedLeafColumnsLength.value ?? 0\n  })\n  const rightFixedLeafCount = computed(() => {\n    return store?.states.rightFixedColumns.value.length ?? 0\n  })\n  const columnsCount = computed(() => {\n    return store?.states.columns.value.length ?? 0\n  })\n  const leftFixedCount = computed(() => {\n    return store?.states.fixedColumns.value.length ?? 0\n  })\n  const rightFixedCount = computed(() => {\n    return store?.states.rightFixedColumns.value.length ?? 0\n  })\n\n  return {\n    leftFixedLeafCount,\n    rightFixedLeafCount,\n    columnsCount,\n    leftFixedCount,\n    rightFixedCount,\n    columns: computed(() => store?.states.columns.value ?? []),\n  }\n}\n\nexport default useMapState\n","import { useNamespace } from '@element-plus/hooks'\nimport {\n  ensurePosition,\n  getFixedColumnOffset,\n  getFixedColumnsClass,\n} from '../util'\nimport useMapState from './mapState-helper'\n\nimport type { TableColumnCtx } from '../table-column/defaults'\nimport type { DefaultRow } from '../table/defaults'\nimport type { TableFooter } from '.'\n\nfunction useStyle<T extends DefaultRow>(props: TableFooter<T>) {\n  const { columns } = useMapState()\n  const ns = useNamespace('table')\n\n  const getCellClasses = (columns: TableColumnCtx<T>[], cellIndex: number) => {\n    const column = columns[cellIndex]\n    const classes = [\n      ns.e('cell'),\n      column.id,\n      column.align,\n      column.labelClassName,\n      ...getFixedColumnsClass(ns.b(), cellIndex, column.fixed, props.store),\n    ]\n    if (column.className) {\n      classes.push(column.className)\n    }\n    if (!column.children) {\n      classes.push(ns.is('leaf'))\n    }\n    return classes\n  }\n\n  const getCellStyles = (column: TableColumnCtx<T>, cellIndex: number) => {\n    const fixedStyle = getFixedColumnOffset(\n      cellIndex,\n      column.fixed,\n      props.store\n    )\n    ensurePosition(fixedStyle, 'left')\n    ensurePosition(fixedStyle, 'right')\n    return fixedStyle\n  }\n\n  return {\n    getCellClasses,\n    getCellStyles,\n    columns,\n  }\n}\n\nexport default useStyle\n","import { defineComponent, h, inject } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport useLayoutObserver from '../layout-observer'\nimport { TABLE_INJECTION_KEY } from '../tokens'\nimport useStyle from './style-helper'\n\nimport type { Store } from '../store'\nimport type { PropType, VNode } from 'vue'\nimport type { DefaultRow, Sort, SummaryMethod, Table } from '../table/defaults'\n\nexport interface TableFooter<T extends DefaultRow> {\n  fixed: string\n  store: Store<T>\n  summaryMethod: SummaryMethod<T>\n  sumText: string\n  border: boolean\n  defaultSort: Sort\n}\n\nexport default defineComponent({\n  name: 'ElTableFooter',\n\n  props: {\n    fixed: {\n      type: String,\n      default: '',\n    },\n    store: {\n      required: true,\n      type: Object as PropType<TableFooter<any>['store']>,\n    },\n    summaryMethod: Function as PropType<TableFooter<any>['summaryMethod']>,\n    sumText: String,\n    border: Boolean,\n    defaultSort: {\n      type: Object as PropType<TableFooter<any>['defaultSort']>,\n      default: () => {\n        return {\n          prop: '',\n          order: '',\n        }\n      },\n    },\n  },\n  setup(props) {\n    const parent = inject(TABLE_INJECTION_KEY) as Table<any>\n    const ns = useNamespace('table')\n    const { getCellClasses, getCellStyles, columns } = useStyle(\n      props as TableFooter<any>\n    )\n    const { onScrollableChange, onColumnsChange } = useLayoutObserver(parent!)\n\n    return {\n      ns,\n      onScrollableChange,\n      onColumnsChange,\n      getCellClasses,\n      getCellStyles,\n      columns,\n    }\n  },\n  render() {\n    const { columns, getCellStyles, getCellClasses, summaryMethod, sumText } =\n      this\n    const data = this.store.states.data.value\n    let sums: (string | VNode | number | undefined)[] = []\n    if (summaryMethod) {\n      sums = summaryMethod({\n        columns,\n        data,\n      })\n    } else {\n      columns.forEach((column, index) => {\n        if (index === 0) {\n          sums[index] = sumText\n          return\n        }\n        const values = data.map((item) => Number(item[column.property]))\n        const precisions: number[] = []\n        let notNumber = true\n        values.forEach((value) => {\n          if (!Number.isNaN(+value)) {\n            notNumber = false\n            const decimal = `${value}`.split('.')[1]\n            precisions.push(decimal ? decimal.length : 0)\n          }\n        })\n        const precision = Math.max.apply(null, precisions)\n        if (!notNumber) {\n          sums[index] = values.reduce((prev, curr) => {\n            const value = Number(curr)\n            if (!Number.isNaN(+value)) {\n              return Number.parseFloat(\n                (prev + curr).toFixed(Math.min(precision, 20))\n              )\n            } else {\n              return prev\n            }\n          }, 0)\n        } else {\n          sums[index] = ''\n        }\n      })\n    }\n    return h(\n      h('tfoot', [\n        h('tr', {}, [\n          ...columns.map((column, cellIndex) =>\n            h(\n              'td',\n              {\n                key: cellIndex,\n                colspan: column.colSpan,\n                rowspan: column.rowSpan,\n                class: getCellClasses(columns, cellIndex),\n                style: getCellStyles(column, cellIndex),\n              },\n              [\n                h(\n                  'div',\n                  {\n                    class: ['cell', column.labelClassName],\n                  },\n                  [sums[cellIndex]]\n                ),\n              ]\n            )\n          ),\n        ]),\n      ])\n    )\n  },\n})\n","import type { Store } from '../store'\nimport type { DefaultRow } from './defaults'\n\nfunction useUtils<T extends DefaultRow>(store: Store<T>) {\n  const setCurrentRow = (row: T) => {\n    store.commit('setCurrentRow', row)\n  }\n  const getSelectionRows = () => {\n    return store.getSelectionRows()\n  }\n  const toggleRowSelection = (\n    row: T,\n    selected?: boolean,\n    ignoreSelectable = true\n  ) => {\n    store.toggleRowSelection(row, selected, false, ignoreSelectable)\n    store.updateAllSelected()\n  }\n  const clearSelection = () => {\n    store.clearSelection()\n  }\n  const clearFilter = (columnKeys?: string[] | string) => {\n    store.clearFilter(columnKeys)\n  }\n  const toggleAllSelection = () => {\n    store.commit('toggleAllSelection')\n  }\n  const toggleRowExpansion = (row: T, expanded?: boolean) => {\n    store.toggleRowExpansionAdapter(row, expanded)\n  }\n  const clearSort = () => {\n    store.clearSort()\n  }\n  const sort = (prop: string, order: string) => {\n    store.commit('sort', { prop, order })\n  }\n  const updateKeyChildren = (key: string, data: T[]) => {\n    store.updateKeyChildren(key, data)\n  }\n\n  return {\n    setCurrentRow,\n    getSelectionRows,\n    toggleRowSelection,\n    clearSelection,\n    clearFilter,\n    toggleAllSelection,\n    toggleRowExpansion,\n    clearSort,\n    sort,\n    updateKeyChildren,\n  }\n}\n\nexport default useUtils\n","import {\n  computed,\n  nextTick,\n  onMounted,\n  ref,\n  unref,\n  watch,\n  watchEffect,\n} from 'vue'\nimport { useEventListener, useResizeObserver } from '@vueuse/core'\nimport { useFormSize } from '@element-plus/components/form'\n\nimport type { DefaultRow, RenderExpanded, Table, TableProps } from './defaults'\nimport type { Store } from '../store'\nimport type TableLayout from '../table-layout'\nimport type { TableColumnCtx } from '../table-column/defaults'\n\nfunction useStyle<T extends DefaultRow>(\n  props: TableProps<T>,\n  layout: TableLayout<T>,\n  store: Store<T>,\n  table: Table<T>\n) {\n  const isHidden = ref(false)\n  const renderExpanded = ref<RenderExpanded<T> | null>(null)\n  const resizeProxyVisible = ref(false)\n  const setDragVisible = (visible: boolean) => {\n    resizeProxyVisible.value = visible\n  }\n  const resizeState = ref<{\n    width: null | number\n    height: null | number\n    headerHeight: null | number\n  }>({\n    width: null,\n    height: null,\n    headerHeight: null,\n  })\n  const isGroup = ref(false)\n  const scrollbarViewStyle = {\n    display: 'inline-block',\n    verticalAlign: 'middle',\n  }\n  const tableWidth = ref()\n  const tableScrollHeight = ref(0)\n  const bodyScrollHeight = ref(0)\n  const headerScrollHeight = ref(0)\n  const footerScrollHeight = ref(0)\n  const appendScrollHeight = ref(0)\n\n  watchEffect(() => {\n    layout.setHeight(props.height ?? null)\n  })\n  watchEffect(() => {\n    layout.setMaxHeight(props.maxHeight ?? null)\n  })\n  watch(\n    () => [props.currentRowKey, store.states.rowKey],\n    ([currentRowKey, rowKey]) => {\n      if (!unref(rowKey) || !unref(currentRowKey)) return\n      store.setCurrentRowKey(`${currentRowKey}`)\n    },\n    {\n      immediate: true,\n    }\n  )\n  watch(\n    () => props.data,\n    (data) => {\n      table.store.commit('setData', data)\n    },\n    {\n      immediate: true,\n      deep: true,\n    }\n  )\n  watchEffect(() => {\n    if (props.expandRowKeys) {\n      store.setExpandRowKeysAdapter(props.expandRowKeys)\n    }\n  })\n\n  const handleMouseLeave = () => {\n    table.store.commit('setHoverRow', null)\n    if (table.hoverState) table.hoverState = null\n  }\n\n  const handleHeaderFooterMousewheel = (_event: WheelEvent, data: any) => {\n    const { pixelX, pixelY } = data\n    if (Math.abs(pixelX) >= Math.abs(pixelY)) {\n      table.refs.bodyWrapper.scrollLeft += data.pixelX / 5\n    }\n  }\n\n  const shouldUpdateHeight = computed(() => {\n    return (\n      props.height ||\n      props.maxHeight ||\n      store.states.fixedColumns.value.length > 0 ||\n      store.states.rightFixedColumns.value.length > 0\n    )\n  })\n\n  const tableBodyStyles = computed(() => {\n    return {\n      width: layout.bodyWidth.value ? `${layout.bodyWidth.value}px` : '',\n    }\n  })\n\n  const doLayout = () => {\n    if (shouldUpdateHeight.value) {\n      layout.updateElsHeight()\n    }\n    layout.updateColumnsWidth()\n\n    // When the test case is running, the context environment simulated by jsdom may have been destroyed,\n    // and window.requestAnimationFrame does not exist at this time.\n    if (typeof window === 'undefined') return\n    requestAnimationFrame(syncPosition)\n  }\n  onMounted(async () => {\n    await nextTick()\n    store.updateColumns()\n    bindEvents()\n    requestAnimationFrame(doLayout)\n\n    const el: HTMLElement = table.vnode.el as HTMLElement\n    const tableHeader: HTMLElement = table.refs.headerWrapper\n    if (props.flexible && el && el.parentElement) {\n      // Automatic minimum size of flex-items\n      // Ensure that the main axis does not follow the width of the items\n      el.parentElement.style.minWidth = '0'\n    }\n\n    resizeState.value = {\n      width: (tableWidth.value = el.offsetWidth),\n      height: el.offsetHeight,\n      headerHeight:\n        props.showHeader && tableHeader ? tableHeader.offsetHeight : null,\n    }\n\n    // init filters\n    store.states.columns.value.forEach((column: TableColumnCtx<T>) => {\n      if (column.filteredValue && column.filteredValue.length) {\n        table.store.commit('filterChange', {\n          column,\n          values: column.filteredValue,\n          silent: true,\n        })\n      }\n    })\n    table.$ready = true\n  })\n  const setScrollClassByEl = (el: HTMLElement, className: string) => {\n    if (!el) return\n    const classList = Array.from(el.classList).filter(\n      (item) => !item.startsWith('is-scrolling-')\n    )\n    classList.push(layout.scrollX.value ? className : 'is-scrolling-none')\n    el.className = classList.join(' ')\n  }\n  const setScrollClass = (className: string) => {\n    const { tableWrapper } = table.refs\n    setScrollClassByEl(tableWrapper, className)\n  }\n  const hasScrollClass = (className: string) => {\n    const { tableWrapper } = table.refs\n    return !!(tableWrapper && tableWrapper.classList.contains(className))\n  }\n  const syncPosition = function () {\n    if (!table.refs.scrollBarRef) return\n    if (!layout.scrollX.value) {\n      const scrollingNoneClass = 'is-scrolling-none'\n      if (!hasScrollClass(scrollingNoneClass)) {\n        setScrollClass(scrollingNoneClass)\n      }\n      return\n    }\n    const scrollContainer = table.refs.scrollBarRef.wrapRef\n    if (!scrollContainer) return\n    const { scrollLeft, offsetWidth, scrollWidth } = scrollContainer\n    const { headerWrapper, footerWrapper } = table.refs\n    if (headerWrapper) headerWrapper.scrollLeft = scrollLeft\n    if (footerWrapper) footerWrapper.scrollLeft = scrollLeft\n    const maxScrollLeftPosition = scrollWidth - offsetWidth - 1\n    if (scrollLeft >= maxScrollLeftPosition) {\n      setScrollClass('is-scrolling-right')\n    } else if (scrollLeft === 0) {\n      setScrollClass('is-scrolling-left')\n    } else {\n      setScrollClass('is-scrolling-middle')\n    }\n  }\n\n  const bindEvents = () => {\n    if (!table.refs.scrollBarRef) return\n    if (table.refs.scrollBarRef.wrapRef) {\n      useEventListener(\n        table.refs.scrollBarRef.wrapRef,\n        'scroll',\n        syncPosition,\n        {\n          passive: true,\n        }\n      )\n    }\n    if (props.fit) {\n      useResizeObserver(table.vnode.el as HTMLElement, resizeListener)\n    } else {\n      useEventListener(window, 'resize', resizeListener)\n    }\n\n    useResizeObserver(table.refs.bodyWrapper, () => {\n      resizeListener()\n      table.refs?.scrollBarRef?.update()\n    })\n  }\n  const resizeListener = () => {\n    const el = table.vnode.el\n    if (!table.$ready || !el) return\n\n    let shouldUpdateLayout = false\n    const {\n      width: oldWidth,\n      height: oldHeight,\n      headerHeight: oldHeaderHeight,\n    } = resizeState.value\n\n    const width = (tableWidth.value = el.offsetWidth)\n    if (oldWidth !== width) {\n      shouldUpdateLayout = true\n    }\n\n    const height = el.offsetHeight\n    if ((props.height || shouldUpdateHeight.value) && oldHeight !== height) {\n      shouldUpdateLayout = true\n    }\n\n    const tableHeader: HTMLElement =\n      props.tableLayout === 'fixed'\n        ? table.refs.headerWrapper\n        : table.refs.tableHeaderRef?.$el\n    if (props.showHeader && tableHeader?.offsetHeight !== oldHeaderHeight) {\n      shouldUpdateLayout = true\n    }\n\n    tableScrollHeight.value = table.refs.tableWrapper?.scrollHeight || 0\n    headerScrollHeight.value = tableHeader?.scrollHeight || 0\n    footerScrollHeight.value = table.refs.footerWrapper?.offsetHeight || 0\n    appendScrollHeight.value = table.refs.appendWrapper?.offsetHeight || 0\n    bodyScrollHeight.value =\n      tableScrollHeight.value -\n      headerScrollHeight.value -\n      footerScrollHeight.value -\n      appendScrollHeight.value\n\n    if (shouldUpdateLayout) {\n      resizeState.value = {\n        width,\n        height,\n        headerHeight: (props.showHeader && tableHeader?.offsetHeight) || 0,\n      }\n      doLayout()\n    }\n  }\n  const tableSize = useFormSize()\n  const bodyWidth = computed(() => {\n    const { bodyWidth: bodyWidth_, scrollY, gutterWidth } = layout\n    return bodyWidth_.value\n      ? `${(bodyWidth_.value as number) - (scrollY.value ? gutterWidth : 0)}px`\n      : ''\n  })\n\n  const tableLayout = computed(() => {\n    if (props.maxHeight) return 'fixed'\n    return props.tableLayout\n  })\n\n  const emptyBlockStyle = computed(() => {\n    if (props.data && props.data.length) return\n    let height = '100%'\n    if (props.height && bodyScrollHeight.value) {\n      height = `${bodyScrollHeight.value}px`\n    }\n    const width = tableWidth.value\n    return {\n      width: width ? `${width}px` : '',\n      height,\n    }\n  })\n\n  const scrollbarStyle = computed(() => {\n    if (props.height) {\n      return {\n        height: '100%',\n      }\n    }\n    if (props.maxHeight) {\n      if (!Number.isNaN(Number(props.maxHeight))) {\n        return {\n          maxHeight: `${\n            +props.maxHeight -\n            headerScrollHeight.value -\n            footerScrollHeight.value\n          }px`,\n        }\n      } else {\n        return {\n          maxHeight: `calc(${props.maxHeight} - ${\n            headerScrollHeight.value + footerScrollHeight.value\n          }px)`,\n        }\n      }\n    }\n\n    return {}\n  })\n\n  return {\n    isHidden,\n    renderExpanded,\n    setDragVisible,\n    isGroup,\n    handleMouseLeave,\n    handleHeaderFooterMousewheel,\n    tableSize,\n    emptyBlockStyle,\n    resizeProxyVisible,\n    bodyWidth,\n    resizeState,\n    doLayout,\n    tableBodyStyles,\n    tableLayout,\n    scrollbarViewStyle,\n    scrollbarStyle,\n  }\n}\n\nexport default useStyle\n","import { onMounted, onUnmounted, ref } from 'vue'\n\nimport type { Table } from './defaults'\n\nexport default function useKeyRender(table: Table<[]>) {\n  const observer = ref<MutationObserver>()\n\n  const initWatchDom = () => {\n    const el = table.vnode.el\n    const columnsWrapper = (el as HTMLElement).querySelector('.hidden-columns')\n    const config = { childList: true, subtree: true }\n    const updateOrderFns = table.store.states.updateOrderFns\n    observer.value = new MutationObserver(() => {\n      updateOrderFns.forEach((fn: () => void) => fn())\n    })\n\n    observer.value.observe(columnsWrapper!, config)\n  }\n\n  onMounted(() => {\n    // fix https://github.com/element-plus/element-plus/issues/8528\n    initWatchDom()\n  })\n\n  onUnmounted(() => {\n    observer.value?.disconnect()\n  })\n}\n","import { useSizeProp } from '@element-plus/hooks'\n\nimport type {\n  CSSProperties,\n  ComponentInternalInstance,\n  PropType,\n  Ref,\n  VNode,\n} from 'vue'\nimport type { ComponentSize } from '@element-plus/constants'\nimport type { Nullable } from '@element-plus/utils'\nimport type { Store } from '../store'\nimport type { TableColumnCtx } from '../table-column/defaults'\nimport type TableLayout from '../table-layout'\nimport type {\n  TableOverflowTooltipFormatter,\n  TableOverflowTooltipOptions,\n} from '../util'\n\ntype DefaultRow = Record<PropertyKey, any>\n\ninterface TableRefs {\n  tableWrapper: HTMLElement\n  headerWrapper: HTMLElement\n  footerWrapper: HTMLElement\n  fixedBodyWrapper: HTMLElement\n  rightFixedBodyWrapper: HTMLElement\n  bodyWrapper: HTMLElement\n  appendWrapper: HTMLElement\n  [key: string]: any\n}\n\ninterface TableState {\n  isGroup: Ref<boolean>\n  resizeState: Ref<{\n    width: any\n    height: any\n  }>\n  doLayout: () => void\n  debouncedUpdateLayout: () => void\n}\n\ninterface TreeProps {\n  hasChildren?: string\n  children?: string\n  checkStrictly?: boolean\n}\n\ntype HoverState<T extends DefaultRow> = Nullable<{\n  cell: HTMLElement\n  column: TableColumnCtx<T>\n  row: T\n}>\n\ntype RIS<T extends DefaultRow> = {\n  row: T\n  $index: number\n  store: Store<T>\n  expanded: boolean\n}\n\ntype RenderExpanded<T extends DefaultRow> = ({\n  row,\n  $index,\n  store,\n  expanded,\n}: RIS<T>) => VNode[] | undefined\n\ntype SummaryMethod<T extends DefaultRow> = (data: {\n  columns: TableColumnCtx<T>[]\n  data: T[]\n}) => (string | VNode)[]\n\ninterface Table<T extends DefaultRow = any> extends ComponentInternalInstance {\n  $ready: boolean\n  hoverState?: HoverState<T> | null\n  renderExpanded: RenderExpanded<T>\n  store: Store<T>\n  layout: TableLayout<T>\n  refs: TableRefs\n  tableId: string\n  state: TableState\n}\n\ntype ColumnCls<T> = string | ((data: { row: T; rowIndex: number }) => string)\ntype ColumnStyle<T> =\n  | CSSProperties\n  | ((data: { row: T; rowIndex: number }) => CSSProperties)\ntype CellCls<T extends DefaultRow> =\n  | string\n  | ((data: {\n      row: T\n      rowIndex: number\n      column: TableColumnCtx<T>\n      columnIndex: number\n    }) => string)\ntype CellStyle<T extends DefaultRow> =\n  | CSSProperties\n  | ((data: {\n      row: T\n      rowIndex: number\n      column: TableColumnCtx<T>\n      columnIndex: number\n    }) => CSSProperties)\ntype Layout = 'fixed' | 'auto'\ninterface TableProps<T extends DefaultRow> {\n  data: T[]\n  size?: ComponentSize\n  width?: string | number\n  height?: string | number\n  maxHeight?: string | number\n  fit?: boolean\n  stripe?: boolean\n  border?: boolean\n  rowKey?: string | ((row: T) => string)\n  context?: Table<T>\n  showHeader?: boolean\n  showSummary?: boolean\n  sumText?: string\n  summaryMethod?: SummaryMethod<T>\n  rowClassName?: ColumnCls<T>\n  rowStyle?: ColumnStyle<T>\n  cellClassName?: CellCls<T>\n  cellStyle?: CellStyle<T>\n  headerRowClassName?: ColumnCls<T>\n  headerRowStyle?: ColumnStyle<T>\n  headerCellClassName?: CellCls<T>\n  headerCellStyle?: CellStyle<T>\n  highlightCurrentRow?: boolean\n  currentRowKey?: string | number\n  emptyText?: string\n  expandRowKeys?: Array<string>\n  defaultExpandAll?: boolean\n  defaultSort?: Sort\n  tooltipEffect?: string\n  tooltipOptions?: TableOverflowTooltipOptions\n  spanMethod?: (data: {\n    row: T\n    rowIndex: number\n    column: TableColumnCtx<T>\n    columnIndex: number\n  }) =>\n    | number[]\n    | {\n        rowspan: number\n        colspan: number\n      }\n    | undefined\n  selectOnIndeterminate?: boolean\n  indent?: number\n  treeProps?: TreeProps\n  lazy?: boolean\n  load?: (row: T, treeNode: TreeNode, resolve: (data: T[]) => void) => void\n  className?: string\n  style?: CSSProperties\n  tableLayout?: Layout\n  scrollbarAlwaysOn?: boolean\n  flexible?: boolean\n  showOverflowTooltip?: boolean | TableOverflowTooltipOptions\n  tooltipFormatter?: TableOverflowTooltipFormatter<T>\n  appendFilterPanelTo?: string\n  scrollbarTabindex?: number | string\n  nativeScrollbar?: boolean\n}\n\ntype TableTooltipData<T extends DefaultRow> = Parameters<\n  TableOverflowTooltipFormatter<T>\n>[0]\ntype TableSortOrder = 'ascending' | 'descending'\n\ninterface Sort {\n  prop: string\n  order: TableSortOrder\n  init?: any\n  silent?: any\n}\n\ninterface Filter<T extends DefaultRow> {\n  column: TableColumnCtx<T>\n  values: string[]\n  silent: any\n}\n\ninterface TreeNode {\n  expanded?: boolean\n  loading?: boolean\n  noLazyChildren?: boolean\n  indent?: number\n  level?: number\n  display?: boolean\n}\n\ninterface RenderRowData<T extends DefaultRow> {\n  store: Store<T>\n  _self: Table<T>\n  column: TableColumnCtx<T>\n  row: T\n  $index: number\n  cellIndex: number\n  treeNode?: TreeNode\n  expanded: boolean\n}\n\nexport default {\n  /**\n   * @description table data\n   */\n  data: {\n    type: Array as PropType<any[]>,\n    default: () => [],\n  },\n  /**\n   * @description size of Table\n   */\n  size: useSizeProp,\n  width: [String, Number],\n  /**\n   * @description table's height. By default it has an `auto` height. If its value is a number, the height is measured in pixels; if its value is a string, the value will be assigned to element's style.height, the height is affected by external styles\n   */\n  height: [String, Number],\n  /**\n   * @description table's max-height. The legal value is a number or the height in px\n   */\n  maxHeight: [String, Number],\n  /**\n   * @description whether width of column automatically fits its container\n   */\n  fit: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description whether Table is striped\n   */\n  stripe: Boolean,\n  /**\n   * @description whether Table has vertical border\n   */\n  border: Boolean,\n  /**\n   * @description key of row data, used for optimizing rendering. Required if `reserve-selection` is on or display tree data. When its type is String, multi-level access is supported, e.g. `user.info.id`, but `user.info[0].id` is not supported, in which case `Function` should be used\n   */\n  rowKey: [String, Function] as PropType<TableProps<any>['rowKey']>,\n  /**\n   * @description whether Table header is visible\n   */\n  showHeader: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description whether to display a summary row\n   */\n  showSummary: Boolean,\n  /**\n   * @description displayed text for the first column of summary row\n   */\n  sumText: String,\n  /**\n   * @description custom summary method\n   */\n  summaryMethod: Function as PropType<TableProps<any>['summaryMethod']>,\n  /**\n   * @description function that returns custom class names for a row, or a string assigning class names for every row\n   */\n  rowClassName: [String, Function] as PropType<TableProps<any>['rowClassName']>,\n  /**\n   * @description function that returns custom style for a row, or an object assigning custom style for every row\n   */\n  rowStyle: [Object, Function] as PropType<TableProps<any>['rowStyle']>,\n  /**\n   * @description function that returns custom class names for a cell, or a string assigning class names for every cell\n   */\n  cellClassName: [String, Function] as PropType<\n    TableProps<any>['cellClassName']\n  >,\n  /**\n   * @description function that returns custom style for a cell, or an object assigning custom style for every cell\n   */\n  cellStyle: [Object, Function] as PropType<TableProps<any>['cellStyle']>,\n  /**\n   * @description function that returns custom class names for a row in table header, or a string assigning class names for every row in table header\n   */\n  headerRowClassName: [String, Function] as PropType<\n    TableProps<any>['headerRowClassName']\n  >,\n  /**\n   * @description function that returns custom style for a row in table header, or an object assigning custom style for every row in table header\n   */\n  headerRowStyle: [Object, Function] as PropType<\n    TableProps<any>['headerRowStyle']\n  >,\n  /**\n   * @description function that returns custom class names for a cell in table header, or a string assigning class names for every cell in table header\n   */\n  headerCellClassName: [String, Function] as PropType<\n    TableProps<any>['headerCellClassName']\n  >,\n  /**\n   * @description function that returns custom style for a cell in table header, or an object assigning custom style for every cell in table header\n   */\n  headerCellStyle: [Object, Function] as PropType<\n    TableProps<any>['headerCellStyle']\n  >,\n  /**\n   * @description whether current row is highlighted\n   */\n  highlightCurrentRow: Boolean,\n  /**\n   * @description key of current row, a set only prop\n   */\n  currentRowKey: [String, Number],\n  /**\n   * @description displayed text when data is empty. You can customize this area with `#empty`\n   */\n  emptyText: String,\n  /**\n   * @description set expanded rows by this prop, prop's value is the keys of expand rows, you should set row-key before using this prop\n   */\n  expandRowKeys: Array as PropType<TableProps<any>['expandRowKeys']>,\n  /**\n   * @description whether expand all rows by default, works when the table has a column type=\"expand\" or contains tree structure data\n   */\n  defaultExpandAll: Boolean,\n  /**\n   * @description set the default sort column and order. property `prop` is used to set default sort column, property `order` is used to set default sort order\n   */\n  defaultSort: Object as PropType<TableProps<any>['defaultSort']>,\n  /**\n   * @description the `effect` of the overflow tooltip\n   */\n  tooltipEffect: String,\n  /**\n   * @description the options for the overflow tooltip, [see the following tooltip component](tooltip.html#attributes)\n   */\n  tooltipOptions: Object as PropType<TableProps<any>['tooltipOptions']>,\n  /**\n   * @description method that returns rowspan and colspan\n   */\n  spanMethod: Function as PropType<TableProps<any>['spanMethod']>,\n  /**\n   * @description controls the behavior of master checkbox in multi-select tables when only some rows are selected (but not all). If true, all rows will be selected, else deselected\n   */\n  selectOnIndeterminate: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description horizontal indentation of tree data\n   */\n  indent: {\n    type: Number,\n    default: 16,\n  },\n  /**\n   * @description configuration for rendering nested data\n   */\n  treeProps: {\n    type: Object as PropType<TableProps<any>['treeProps']>,\n    default: () => {\n      return {\n        hasChildren: 'hasChildren',\n        children: 'children',\n        checkStrictly: false,\n      }\n    },\n  },\n  /**\n   * @description whether to lazy loading data\n   */\n  lazy: Boolean,\n  /**\n   * @description method for loading child row data, only works when `lazy` is true\n   */\n  load: Function as PropType<TableProps<any>['load']>,\n  style: {\n    type: Object as PropType<CSSProperties>,\n    default: () => ({}),\n  },\n  className: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description sets the algorithm used to lay out table cells, rows, and columns\n   */\n  tableLayout: {\n    type: String as PropType<Layout>,\n    default: 'fixed',\n  },\n  /**\n   * @description always show scrollbar\n   */\n  scrollbarAlwaysOn: Boolean,\n  /**\n   * @description ensure main axis minimum-size doesn't follow the content\n   */\n  flexible: Boolean,\n  /**\n   * @description whether to hide extra content and show them in a tooltip when hovering on the cell.It will affect all the table columns\n   */\n  showOverflowTooltip: [Boolean, Object] as PropType<\n    TableProps<any>['showOverflowTooltip']\n  >,\n  /**\n   * @description function that formats cell tooltip content, works when `show-overflow-tooltip` is `true`\n   */\n  tooltipFormatter: Function as PropType<TableProps<any>['tooltipFormatter']>,\n  appendFilterPanelTo: String,\n  scrollbarTabindex: {\n    type: [Number, String],\n    default: undefined,\n  },\n  /**\n   * @description whether to allow drag the last column\n   */\n  allowDragLastColumn: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description whether to preserve expanded row content in DOM when collapsed\n   */\n  preserveExpandedContent: Boolean,\n  /**\n   * @description whether to use native scrollbars\n   */\n  nativeScrollbar: Boolean,\n}\nexport type {\n  SummaryMethod,\n  Table,\n  TableProps,\n  TableRefs,\n  ColumnCls,\n  ColumnStyle,\n  CellCls,\n  CellStyle,\n  DefaultRow,\n  TreeNode,\n  RenderRowData,\n  Sort,\n  Filter,\n  TableColumnCtx,\n  TreeProps,\n  TableTooltipData,\n  TableSortOrder,\n  RenderExpanded,\n}\n","import { h } from 'vue'\nimport { isUndefined } from '@element-plus/utils'\n\nimport type { TableColumnCtx } from './table-column/defaults'\nimport type { DefaultRow } from './table/defaults'\n\ntype Props = {\n  tableLayout: 'fixed' | 'auto'\n  columns?: TableColumnCtx<DefaultRow>[]\n}\n\nexport function hColgroup(props: Props) {\n  const isAuto = props.tableLayout === 'auto'\n  let columns = props.columns || []\n  if (isAuto) {\n    if (columns.every(({ width }) => isUndefined(width))) {\n      columns = []\n    }\n  }\n  const getPropsData = (column: TableColumnCtx<DefaultRow>) => {\n    const propsData = {\n      key: `${props.tableLayout}_${column.id}`,\n      style: {},\n      name: undefined as string | undefined,\n    }\n    if (isAuto) {\n      propsData.style = {\n        width: `${column.width}px`,\n      }\n    } else {\n      propsData.name = column.id\n    }\n    return propsData\n  }\n\n  return h(\n    'colgroup',\n    {},\n    columns.map((column) => h('col', getPropsData(column)))\n  )\n}\n\nhColgroup.props = ['columns', 'tableLayout']\n","import { ref } from 'vue'\nimport { isNumber } from '@element-plus/utils'\n\nexport const useScrollbar = () => {\n  const scrollBarRef = ref()\n\n  const scrollTo = (options: ScrollToOptions | number, yCoord?: number) => {\n    const scrollbar = scrollBarRef.value\n    if (scrollbar) {\n      scrollbar.scrollTo(options, yCoord)\n    }\n  }\n\n  const setScrollPosition = (position: 'Top' | 'Left', offset?: number) => {\n    const scrollbar = scrollBarRef.value\n    if (scrollbar && isNumber(offset) && ['Top', 'Left'].includes(position)) {\n      scrollbar[`setScroll${position}`](offset)\n    }\n  }\n\n  const setScrollTop = (top?: number) => setScrollPosition('Top', top)\n  const setScrollLeft = (left?: number) => setScrollPosition('Left', left)\n\n  return {\n    scrollBarRef,\n    scrollTo,\n    setScrollTop,\n    setScrollLeft,\n  }\n}\n","<template>\n  <div\n    ref=\"tableWrapper\"\n    :class=\"[\n      {\n        [ns.m('fit')]: fit,\n        [ns.m('striped')]: stripe,\n        [ns.m('border')]: border || isGroup,\n        [ns.m('hidden')]: isHidden,\n        [ns.m('group')]: isGroup,\n        [ns.m('fluid-height')]: maxHeight,\n        [ns.m('scrollable-x')]: layout.scrollX.value,\n        [ns.m('scrollable-y')]: layout.scrollY.value,\n        [ns.m('enable-row-hover')]: !store.states.isComplex.value,\n        [ns.m('enable-row-transition')]:\n          (store.states.data.value || []).length !== 0 &&\n          (store.states.data.value || []).length < 100,\n        'has-footer': showSummary,\n      },\n      ns.m(tableSize),\n      className,\n      ns.b(),\n      ns.m(`layout-${tableLayout}`),\n    ]\"\n    :style=\"style\"\n    :data-prefix=\"ns.namespace.value\"\n    @mouseleave=\"handleMouseLeave\"\n  >\n    <div :class=\"ns.e('inner-wrapper')\">\n      <div ref=\"hiddenColumns\" class=\"hidden-columns\">\n        <slot />\n      </div>\n      <div\n        v-if=\"showHeader && tableLayout === 'fixed'\"\n        ref=\"headerWrapper\"\n        v-mousewheel=\"handleHeaderFooterMousewheel\"\n        :class=\"ns.e('header-wrapper')\"\n      >\n        <table\n          ref=\"tableHeader\"\n          :class=\"ns.e('header')\"\n          :style=\"tableBodyStyles\"\n          border=\"0\"\n          cellpadding=\"0\"\n          cellspacing=\"0\"\n        >\n          <hColgroup\n            :columns=\"store.states.columns.value\"\n            :table-layout=\"tableLayout\"\n          />\n          <table-header\n            ref=\"tableHeaderRef\"\n            :border=\"border\"\n            :default-sort=\"defaultSort\"\n            :store=\"store\"\n            :append-filter-panel-to=\"appendFilterPanelTo\"\n            :allow-drag-last-column=\"allowDragLastColumn\"\n            @set-drag-visible=\"setDragVisible\"\n          />\n        </table>\n      </div>\n      <div ref=\"bodyWrapper\" :class=\"ns.e('body-wrapper')\">\n        <el-scrollbar\n          ref=\"scrollBarRef\"\n          :view-style=\"scrollbarViewStyle\"\n          :wrap-style=\"scrollbarStyle\"\n          :always=\"scrollbarAlwaysOn\"\n          :tabindex=\"scrollbarTabindex\"\n          :native=\"nativeScrollbar\"\n          @scroll=\"$emit('scroll', $event)\"\n        >\n          <table\n            ref=\"tableBody\"\n            :class=\"ns.e('body')\"\n            cellspacing=\"0\"\n            cellpadding=\"0\"\n            border=\"0\"\n            :style=\"{\n              width: bodyWidth,\n              tableLayout,\n            }\"\n          >\n            <hColgroup\n              :columns=\"store.states.columns.value\"\n              :table-layout=\"tableLayout\"\n            />\n            <table-header\n              v-if=\"showHeader && tableLayout === 'auto'\"\n              ref=\"tableHeaderRef\"\n              :class=\"ns.e('body-header')\"\n              :border=\"border\"\n              :default-sort=\"defaultSort\"\n              :store=\"store\"\n              :append-filter-panel-to=\"appendFilterPanelTo\"\n              @set-drag-visible=\"setDragVisible\"\n            />\n            <table-body\n              :context=\"context\"\n              :highlight=\"highlightCurrentRow\"\n              :row-class-name=\"rowClassName\"\n              :tooltip-effect=\"tooltipEffect\"\n              :tooltip-options=\"tooltipOptions\"\n              :row-style=\"rowStyle\"\n              :store=\"store\"\n              :stripe=\"stripe\"\n            />\n            <table-footer\n              v-if=\"showSummary && tableLayout === 'auto'\"\n              :class=\"ns.e('body-footer')\"\n              :border=\"border\"\n              :default-sort=\"defaultSort\"\n              :store=\"store\"\n              :sum-text=\"computedSumText\"\n              :summary-method=\"summaryMethod\"\n            />\n          </table>\n          <div\n            v-if=\"isEmpty\"\n            ref=\"emptyBlock\"\n            :style=\"emptyBlockStyle\"\n            :class=\"ns.e('empty-block')\"\n          >\n            <span :class=\"ns.e('empty-text')\">\n              <slot name=\"empty\">{{ computedEmptyText }}</slot>\n            </span>\n          </div>\n          <div\n            v-if=\"$slots.append\"\n            ref=\"appendWrapper\"\n            :class=\"ns.e('append-wrapper')\"\n          >\n            <slot name=\"append\" />\n          </div>\n        </el-scrollbar>\n      </div>\n      <div\n        v-if=\"showSummary && tableLayout === 'fixed'\"\n        v-show=\"!isEmpty\"\n        ref=\"footerWrapper\"\n        v-mousewheel=\"handleHeaderFooterMousewheel\"\n        :class=\"ns.e('footer-wrapper')\"\n      >\n        <table\n          :class=\"ns.e('footer')\"\n          cellspacing=\"0\"\n          cellpadding=\"0\"\n          border=\"0\"\n          :style=\"tableBodyStyles\"\n        >\n          <hColgroup\n            :columns=\"store.states.columns.value\"\n            :table-layout=\"tableLayout\"\n          />\n          <table-footer\n            :border=\"border\"\n            :default-sort=\"defaultSort\"\n            :store=\"store\"\n            :sum-text=\"computedSumText\"\n            :summary-method=\"summaryMethod\"\n          />\n        </table>\n      </div>\n      <div v-if=\"border || isGroup\" :class=\"ns.e('border-left-patch')\" />\n    </div>\n    <div\n      v-show=\"resizeProxyVisible\"\n      ref=\"resizeProxy\"\n      :class=\"ns.e('column-resize-proxy')\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  onBeforeUnmount,\n  provide,\n} from 'vue'\nimport { debounce } from 'lodash-unified'\nimport { Mousewheel } from '@element-plus/directives'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport { createStore } from './store/helper'\nimport TableLayout from './table-layout'\nimport TableHeader from './table-header'\nimport TableBody from './table-body'\nimport TableFooter from './table-footer'\nimport useUtils from './table/utils-helper'\nimport { convertToRows } from './table-header/utils-helper'\nimport useStyle from './table/style-helper'\nimport useKeyRender from './table/key-render-helper'\nimport defaultProps from './table/defaults'\nimport { TABLE_INJECTION_KEY } from './tokens'\nimport { hColgroup } from './h-helper'\nimport { useScrollbar } from './composables/use-scrollbar'\n\nimport type { Table } from './table/defaults'\n\nlet tableIdSeed = 1\nexport default defineComponent({\n  name: 'ElTable',\n  directives: {\n    Mousewheel,\n  },\n  components: {\n    TableHeader,\n    TableBody,\n    TableFooter,\n    ElScrollbar,\n    hColgroup,\n  },\n  props: defaultProps,\n  emits: [\n    'select',\n    'select-all',\n    'selection-change',\n    'cell-mouse-enter',\n    'cell-mouse-leave',\n    'cell-contextmenu',\n    'cell-click',\n    'cell-dblclick',\n    'row-click',\n    'row-contextmenu',\n    'row-dblclick',\n    'header-click',\n    'header-contextmenu',\n    'sort-change',\n    'filter-change',\n    'current-change',\n    'header-dragend',\n    'expand-change',\n    'scroll',\n  ],\n  setup(props) {\n    type Row = typeof props.data[number]\n    const { t } = useLocale()\n    const ns = useNamespace('table')\n    const table = getCurrentInstance() as Table<Row>\n    provide(TABLE_INJECTION_KEY, table)\n    const store = createStore<Row>(table, props)\n    table.store = store\n    const layout = new TableLayout<Row>({\n      store: table.store,\n      table,\n      fit: props.fit,\n      showHeader: props.showHeader,\n    })\n    table.layout = layout\n\n    const isEmpty = computed(() => (store.states.data.value || []).length === 0)\n\n    /**\n     * open functions\n     */\n    const {\n      setCurrentRow,\n      getSelectionRows,\n      toggleRowSelection,\n      clearSelection,\n      clearFilter,\n      toggleAllSelection,\n      toggleRowExpansion,\n      clearSort,\n      sort,\n      updateKeyChildren,\n    } = useUtils<Row>(store)\n    const {\n      isHidden,\n      renderExpanded,\n      setDragVisible,\n      isGroup,\n      handleMouseLeave,\n      handleHeaderFooterMousewheel,\n      tableSize,\n      emptyBlockStyle,\n      resizeProxyVisible,\n      bodyWidth,\n      resizeState,\n      doLayout,\n      tableBodyStyles,\n      tableLayout,\n      scrollbarViewStyle,\n      scrollbarStyle,\n    } = useStyle<Row>(props, layout, store, table)\n\n    const { scrollBarRef, scrollTo, setScrollLeft, setScrollTop } =\n      useScrollbar()\n\n    const debouncedUpdateLayout = debounce(doLayout, 50)\n\n    const tableId = `${ns.namespace.value}-table_${tableIdSeed++}`\n    table.tableId = tableId\n    table.state = {\n      isGroup,\n      resizeState,\n      doLayout,\n      debouncedUpdateLayout,\n    }\n    const computedSumText = computed(\n      () => props.sumText ?? t('el.table.sumText')\n    )\n\n    const computedEmptyText = computed(() => {\n      return props.emptyText ?? t('el.table.emptyText')\n    })\n\n    const columns = computed(() => {\n      return convertToRows(store.states.originColumns.value)[0]\n    })\n\n    useKeyRender(table)\n\n    onBeforeUnmount(() => {\n      debouncedUpdateLayout.cancel()\n    })\n\n    return {\n      ns,\n      layout,\n      store,\n      columns,\n      handleHeaderFooterMousewheel,\n      handleMouseLeave,\n      tableId,\n      tableSize,\n      isHidden,\n      isEmpty,\n      renderExpanded,\n      resizeProxyVisible,\n      resizeState,\n      isGroup,\n      bodyWidth,\n      tableBodyStyles,\n      emptyBlockStyle,\n      debouncedUpdateLayout,\n      /**\n       * @description used in single selection Table, set a certain row selected. If called without any parameter, it will clear selection\n       */\n      setCurrentRow,\n      /**\n       * @description returns the currently selected rows\n       */\n      getSelectionRows,\n      /**\n       * @description used in multiple selection Table, toggle if a certain row is selected. With the second parameter, you can directly set if this row is selected\n       */\n      toggleRowSelection,\n      /**\n       * @description used in multiple selection Table, clear user selection\n       */\n      clearSelection,\n      /**\n       * @description clear filters of the columns whose `columnKey` are passed in. If no params, clear all filters\n       */\n      clearFilter,\n      /**\n       * @description used in multiple selection Table, toggle select all and deselect all\n       */\n      toggleAllSelection,\n      /**\n       * @description used in expandable Table or tree Table, toggle if a certain row is expanded. With the second parameter, you can directly set if this row is expanded or collapsed\n       */\n      toggleRowExpansion,\n      /**\n       * @description clear sorting, restore data to the original order\n       */\n      clearSort,\n      /**\n       * @description refresh the layout of Table. When the visibility of Table changes, you may need to call this method to get a correct layout\n       */\n      doLayout,\n      /**\n       * @description sort Table manually. Property `prop` is used to set sort column, property `order` is used to set sort order\n       */\n      sort,\n      /**\n       * @description used in lazy Table, must set `rowKey`, update key children\n       */\n      updateKeyChildren,\n      t,\n      setDragVisible,\n      context: table,\n      computedSumText,\n      computedEmptyText,\n      tableLayout,\n      scrollbarViewStyle,\n      scrollbarStyle,\n      scrollBarRef,\n      /**\n       * @description scrolls to a particular set of coordinates\n       */\n      scrollTo,\n      /**\n       * @description set horizontal scroll position\n       */\n      setScrollLeft,\n      /**\n       * @description set vertical scroll position\n       */\n      setScrollTop,\n      /**\n       * @description whether to allow drag the last column\n       */\n      allowDragLastColumn: props.allowDragLastColumn,\n    }\n  },\n})\n</script>\n","import { h } from 'vue'\nimport ElCheckbox from '@element-plus/components/checkbox'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { ArrowRight, Loading } from '@element-plus/icons-vue'\nimport { getProp, isBoolean, isFunction, isNumber } from '@element-plus/utils'\n\nimport type { VNode } from 'vue'\nimport type { TableColumnCtx } from './table-column/defaults'\nimport type { Store } from './store'\nimport type { DefaultRow, TreeNode } from './table/defaults'\n\nconst defaultClassNames = {\n  selection: 'table-column--selection',\n  expand: 'table__expand-column',\n} as const\n\nexport const cellStarts = {\n  default: {\n    order: '',\n  },\n  selection: {\n    width: 48,\n    minWidth: 48,\n    realWidth: 48,\n    order: '',\n  },\n  expand: {\n    width: 48,\n    minWidth: 48,\n    realWidth: 48,\n    order: '',\n  },\n  index: {\n    width: 48,\n    minWidth: 48,\n    realWidth: 48,\n    order: '',\n  },\n}\n\nexport const getDefaultClassName = (type: string) => {\n  return defaultClassNames[type as keyof typeof defaultClassNames] || ''\n}\n\n// 这些选项不应该被覆盖\nexport const cellForced = {\n  selection: {\n    renderHeader<T extends DefaultRow>({\n      store,\n      column,\n    }: {\n      store: Store<T>\n      column: TableColumnCtx<T>\n    }) {\n      function isDisabled() {\n        return store.states.data.value && store.states.data.value.length === 0\n      }\n      return h(ElCheckbox, {\n        disabled: isDisabled(),\n        size: store.states.tableSize.value,\n        indeterminate:\n          store.states.selection.value.length > 0 &&\n          !store.states.isAllSelected.value,\n        'onUpdate:modelValue': store.toggleAllSelection ?? undefined,\n        modelValue: store.states.isAllSelected.value,\n        ariaLabel: column.label,\n      })\n    },\n    renderCell<T extends DefaultRow>({\n      row,\n      column,\n      store,\n      $index,\n    }: {\n      row: T\n      column: TableColumnCtx<T>\n      store: Store<T>\n      $index: number\n    }) {\n      return h(ElCheckbox, {\n        disabled: column.selectable\n          ? !column.selectable.call(null, row, $index)\n          : false,\n        size: store.states.tableSize.value,\n        onChange: () => {\n          store.commit('rowSelectedChanged', row)\n        },\n        onClick: (event: Event) => event.stopPropagation(),\n        modelValue: store.isSelected(row),\n        ariaLabel: column.label,\n      })\n    },\n    sortable: false,\n    resizable: false,\n  },\n  index: {\n    renderHeader<T extends DefaultRow>({\n      column,\n    }: {\n      column: TableColumnCtx<T>\n    }) {\n      return column.label || '#'\n    },\n    renderCell<T extends DefaultRow>({\n      column,\n      $index,\n    }: {\n      column: TableColumnCtx<T>\n      $index: number\n    }) {\n      let i = $index + 1\n      const index = column.index\n\n      if (isNumber(index)) {\n        i = $index + index\n      } else if (isFunction(index)) {\n        i = index($index)\n      }\n      return h('div', {}, [i])\n    },\n    sortable: false,\n  },\n  expand: {\n    renderHeader<T extends DefaultRow>({\n      column,\n    }: {\n      column: TableColumnCtx<T>\n    }) {\n      return column.label || ''\n    },\n    renderCell<T extends DefaultRow>({\n      column,\n      row,\n      store,\n      expanded,\n    }: {\n      column: TableColumnCtx<T>\n      row: T\n      store: Store<T>\n      expanded: boolean\n    }) {\n      const { ns } = store\n      const classes = [ns.e('expand-icon')]\n\n      if (!column.renderExpand && expanded) {\n        classes.push(ns.em('expand-icon', 'expanded'))\n      }\n      const callback = function (e: Event) {\n        e.stopPropagation()\n        store.toggleRowExpansion(row)\n      }\n      return h(\n        'div',\n        {\n          class: classes,\n          onClick: callback,\n        },\n        {\n          default: () => {\n            if (column.renderExpand) {\n              return [\n                column.renderExpand({\n                  expanded,\n                }),\n              ]\n            }\n\n            return [\n              h(ElIcon, null, {\n                default: () => {\n                  return [h(ArrowRight)]\n                },\n              }),\n            ]\n          },\n        }\n      )\n    },\n    sortable: false,\n    resizable: false,\n  },\n}\n\nexport function defaultRenderCell<T extends DefaultRow>({\n  row,\n  column,\n  $index,\n}: {\n  row: T\n  column: TableColumnCtx<T>\n  $index: number\n}) {\n  const property = column.property\n  const value = property && getProp(row, property).value\n  if (column && column.formatter) {\n    return column.formatter(row, column, value, $index)\n  }\n  return value?.toString?.() || ''\n}\n\nexport function treeCellPrefix<T extends DefaultRow>(\n  {\n    row,\n    treeNode,\n    store,\n  }: {\n    row: T\n    treeNode: TreeNode\n    store: Store<T>\n  },\n  createPlaceholder = false\n) {\n  const { ns } = store\n  if (!treeNode) {\n    if (createPlaceholder) {\n      return [\n        h('span', {\n          class: ns.e('placeholder'),\n        }),\n      ]\n    }\n    return null\n  }\n  const ele: VNode[] = []\n  const callback = function (e: Event) {\n    e.stopPropagation()\n    if (treeNode.loading) {\n      return\n    }\n    store.loadOrToggle(row)\n  }\n  if (treeNode.indent) {\n    ele.push(\n      h('span', {\n        class: ns.e('indent'),\n        style: { 'padding-left': `${treeNode.indent}px` },\n      })\n    )\n  }\n  if (isBoolean(treeNode.expanded) && !treeNode.noLazyChildren) {\n    const expandClasses = [\n      ns.e('expand-icon'),\n      treeNode.expanded ? ns.em('expand-icon', 'expanded') : '',\n    ]\n    let icon = ArrowRight\n    if (treeNode.loading) {\n      icon = Loading\n    }\n\n    ele.push(\n      h(\n        'div',\n        {\n          class: expandClasses,\n          onClick: callback,\n        },\n        {\n          default: () => {\n            return [\n              h(\n                ElIcon,\n                { class: { [ns.is('loading')]: treeNode.loading } },\n                {\n                  default: () => [h(icon)],\n                }\n              ),\n            ]\n          },\n        }\n      )\n    )\n  } else {\n    ele.push(\n      h('span', {\n        class: ns.e('placeholder'),\n      })\n    )\n  }\n  return ele\n}\n","import { getCurrentInstance, watch } from 'vue'\nimport { hasOwn } from '@element-plus/utils'\nimport { parseMinWidth, parseWidth } from '../util'\n\nimport type { ComputedRef } from 'vue'\nimport type { DefaultRow } from '../table/defaults'\nimport type { TableColumn, TableColumnCtx, ValueOf } from './defaults'\n\nfunction getAllAliases(props: string[], aliases: Record<string, string>) {\n  return props.reduce((prev, cur) => {\n    prev[cur as keyof typeof prev] = cur\n    return prev\n  }, aliases)\n}\nfunction useWatcher<T extends DefaultRow>(\n  owner: ComputedRef<any>,\n  props_: Partial<TableColumnCtx<T>>\n) {\n  const instance = getCurrentInstance() as TableColumn<T>\n  const registerComplexWatchers = () => {\n    const props = ['fixed']\n    const aliases: Record<string, string> = {\n      realWidth: 'width',\n      realMinWidth: 'minWidth',\n    }\n    const allAliases = getAllAliases(props, aliases)\n    Object.keys(allAliases).forEach((key) => {\n      const columnKey = aliases[key]\n      if (hasOwn(props_, columnKey)) {\n        watch(\n          () => props_[columnKey],\n          (newVal) => {\n            let value: ValueOf<TableColumnCtx<T>> = newVal\n            if (columnKey === 'width' && key === 'realWidth') {\n              value = parseWidth(newVal)\n            }\n            if (columnKey === 'minWidth' && key === 'realMinWidth') {\n              value = parseMinWidth(newVal)\n            }\n            instance.columnConfig.value[columnKey as never] = value as never\n            instance.columnConfig.value[key as never] = value as never\n            const updateColumns = columnKey === 'fixed'\n            owner.value.store.scheduleLayout(updateColumns)\n          }\n        )\n      }\n    })\n  }\n  const registerNormalWatchers = () => {\n    const props = [\n      'label',\n      'filters',\n      'filterMultiple',\n      'filteredValue',\n      'sortable',\n      'index',\n      'formatter',\n      'className',\n      'labelClassName',\n      'filterClassName',\n      'showOverflowTooltip',\n      'tooltipFormatter',\n    ]\n    const parentProps = ['showOverflowTooltip']\n    const aliases: Record<string, string> = {\n      property: 'prop',\n      align: 'realAlign',\n      headerAlign: 'realHeaderAlign',\n    }\n    const allAliases = getAllAliases(props, aliases)\n    Object.keys(allAliases).forEach((key) => {\n      const columnKey = aliases[key]\n      if (hasOwn(props_, columnKey)) {\n        watch(\n          () => props_[columnKey],\n          (newVal) => {\n            instance.columnConfig.value[key as never] = newVal\n          }\n        )\n      }\n    })\n    parentProps.forEach((key) => {\n      if (hasOwn(owner.value.props, key)) {\n        watch(\n          () => owner.value.props[key],\n          (newVal) => {\n            instance.columnConfig.value[key] = newVal as never\n          }\n        )\n      }\n    })\n  }\n\n  return {\n    registerComplexWatchers,\n    registerNormalWatchers,\n  }\n}\n\nexport default useWatcher\n","import {\n  Comment,\n  computed,\n  getCurrentInstance,\n  h,\n  ref,\n  renderSlot,\n  unref,\n  watchEffect,\n} from 'vue'\nimport { debugWarn, isArray, isUndefined } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport {\n  cellForced,\n  defaultRenderCell,\n  getDefaultClassName,\n  treeCellPrefix,\n} from '../config'\nimport { parseMinWidth, parseWidth } from '../util'\n\nimport type { ComputedRef, RendererNode, Slots, VNode } from 'vue'\nimport type { TableColumn, TableColumnCtx } from './defaults'\nimport type { DefaultRow, Table } from '../table/defaults'\n\nfunction useRender<T extends DefaultRow>(\n  props: TableColumnCtx<T>,\n  slots: Slots,\n  owner: ComputedRef<Table<T>>\n) {\n  const instance = getCurrentInstance() as TableColumn<T>\n  const columnId = ref('')\n  const isSubColumn = ref(false)\n  const realAlign = ref<string | null>()\n  const realHeaderAlign = ref<string | null | undefined>()\n  const ns = useNamespace('table')\n  watchEffect(() => {\n    realAlign.value = props.align ? `is-${props.align}` : null\n    // nextline help render\n    realAlign.value\n  })\n  watchEffect(() => {\n    realHeaderAlign.value = props.headerAlign\n      ? `is-${props.headerAlign}`\n      : realAlign.value\n    // nextline help render\n    realHeaderAlign.value\n  })\n  const columnOrTableParent = computed<Table<T> | TableColumn<T>>(() => {\n    let parent: any = instance.vnode.vParent || instance.parent\n    while (parent && !parent.tableId && !parent.columnId) {\n      parent = parent.vnode.vParent || parent.parent\n    }\n    return parent\n  })\n  const hasTreeColumn = computed<boolean>(() => {\n    const { store } = (instance.parent as Table<T>)!\n    if (!store) return false\n    const { treeData } = store.states\n    const treeDataValue = treeData.value\n    return treeDataValue && Object.keys(treeDataValue).length > 0\n  })\n\n  const realWidth = ref(parseWidth(props.width))\n  const realMinWidth = ref(parseMinWidth(props.minWidth))\n  const setColumnWidth = (column: TableColumnCtx<T>) => {\n    if (realWidth.value) column.width = realWidth.value\n    if (realMinWidth.value) {\n      column.minWidth = realMinWidth.value\n    }\n    if (!realWidth.value && realMinWidth.value) {\n      column.width = undefined\n    }\n    if (!column.minWidth) {\n      column.minWidth = 80\n    }\n    column.realWidth = Number(\n      isUndefined(column.width) ? column.minWidth : column.width\n    )\n    return column\n  }\n  const setColumnForcedProps = (column: TableColumnCtx<T>) => {\n    // 对于特定类型的 column，某些属性不允许设置\n    const type = column.type\n    const source = cellForced[type as keyof typeof cellForced] || {}\n    Object.keys(source).forEach((prop) => {\n      const value = source[prop as keyof typeof source]\n      if (prop !== 'className' && !isUndefined(value)) {\n        ;(column as any)[prop] = value\n      }\n    })\n    const className = getDefaultClassName(type)\n    if (className) {\n      const forceClass = `${unref(ns.namespace)}-${className}`\n      column.className = column.className\n        ? `${column.className} ${forceClass}`\n        : forceClass\n    }\n    return column\n  }\n\n  const checkSubColumn = (children: VNode | VNode[]) => {\n    if (isArray(children)) {\n      children.forEach((child) => check(child))\n    } else {\n      check(children)\n    }\n    function check(item: any) {\n      if (item?.type?.name === 'ElTableColumn') {\n        item.vParent = instance\n      }\n    }\n  }\n  const setColumnRenders = (column: TableColumnCtx<T>) => {\n    // renderHeader 属性不推荐使用。\n    //@ts-expect-error\n    if (props.renderHeader) {\n      debugWarn(\n        'TableColumn',\n        'Comparing to render-header, scoped-slot header is easier to use. We recommend users to use scoped-slot header.'\n      )\n    } else if (column.type !== 'selection') {\n      column.renderHeader = (scope) => {\n        // help render\n        instance.columnConfig.value['label']\n        return renderSlot(slots, 'header', scope, () => [column.label])\n      }\n    }\n\n    if (slots['filter-icon']) {\n      column.renderFilterIcon = (scope) => {\n        return renderSlot(slots, 'filter-icon', scope)\n      }\n    }\n\n    if (slots.expand) {\n      column.renderExpand = (scope) => {\n        return renderSlot(slots, 'expand', scope)\n      }\n    }\n\n    let originRenderCell = column.renderCell\n    // TODO: 这里的实现调整\n    if (column.type === 'expand') {\n      // 对于展开行，renderCell 不允许配置的。在上一步中已经设置过，这里需要简单封装一下。\n      column.renderCell = (data) =>\n        h(\n          'div',\n          {\n            class: 'cell',\n          },\n          [originRenderCell(data)]\n        )\n      owner.value.renderExpanded = (row) => {\n        return slots.default ? slots.default(row) : slots.default\n      }\n    } else {\n      originRenderCell = originRenderCell || defaultRenderCell\n      // 对 renderCell 进行包装\n      column.renderCell = (data) => {\n        let children: VNode | VNode[] | null = null\n        if (slots.default) {\n          const vnodes = slots.default(data)\n          children = vnodes.some((v) => v.type !== Comment)\n            ? vnodes\n            : originRenderCell(data)\n        } else {\n          children = originRenderCell(data)\n        }\n\n        const { columns } = owner.value.store.states\n        const firstUserColumnIndex = columns.value.findIndex(\n          (item) => item.type === 'default'\n        )\n        const shouldCreatePlaceholder =\n          hasTreeColumn.value && data.cellIndex === firstUserColumnIndex\n        const prefix = treeCellPrefix(data, shouldCreatePlaceholder)\n        const props = {\n          class: 'cell',\n          style: {},\n        }\n        if (column.showOverflowTooltip) {\n          props.class = `${props.class} ${unref(ns.namespace)}-tooltip`\n          props.style = {\n            width: `${\n              (data.column.realWidth || Number(data.column.width)) - 1\n            }px`,\n          }\n        }\n        checkSubColumn(children)\n        return h('div', props, [prefix, children])\n      }\n    }\n    return column\n  }\n  const getPropsData = (...propsKey: string[][]) => {\n    return propsKey.reduce((prev, cur) => {\n      if (isArray(cur)) {\n        cur.forEach((key) => {\n          prev[key] = props[key as keyof TableColumnCtx<T>]\n        })\n      }\n      return prev\n    }, {} as Record<string, any>)\n  }\n  const getColumnElIndex = (children: T[], child: RendererNode | null) => {\n    return Array.prototype.indexOf.call(children, child)\n  }\n\n  const updateColumnOrder = () => {\n    owner.value.store.commit('updateColumnOrder', instance.columnConfig.value)\n  }\n\n  return {\n    columnId,\n    realAlign,\n    isSubColumn,\n    realHeaderAlign,\n    columnOrTableParent,\n    setColumnWidth,\n    setColumnForcedProps,\n    setColumnRenders,\n    getPropsData,\n    getColumnElIndex,\n    updateColumnOrder,\n  }\n}\n\nexport default useRender\n","import type { ComponentInternalInstance, PropType, Ref, VNode } from 'vue'\nimport type { DefaultRow, Table, TableSortOrder } from '../table/defaults'\nimport type {\n  TableOverflowTooltipFormatter,\n  TableOverflowTooltipOptions,\n} from '../util'\nimport type { Store } from '../store'\n\ntype CI<T extends DefaultRow> = {\n  column: TableColumnCtx<T>\n  $index: number\n  store: Store<T>\n  _self: any\n}\n\ntype Filters = {\n  text: string\n  value: string\n}[]\n\ntype FilterMethods<T extends DefaultRow> = (\n  value: string,\n  row: T,\n  column: TableColumnCtx<T>\n) => void\n\ntype ValueOf<T> = T[keyof T]\n\ntype TableColumnCtx<T extends DefaultRow = DefaultRow> = {\n  id: string\n  realWidth: number | null\n  type: string\n  label: string\n  className: string\n  labelClassName: string\n  property: string\n  prop: string\n  width?: string | number\n  minWidth: string | number\n  renderHeader: (data: CI<T>) => VNode\n  sortable: boolean | string\n  sortMethod: (a: T, b: T) => number\n  sortBy: string | ((row: T, index: number, array?: T[]) => string) | string[]\n  resizable: boolean\n  columnKey: string\n  rawColumnKey: string\n  align: string\n  headerAlign: string\n  showOverflowTooltip?: boolean | TableOverflowTooltipOptions\n  tooltipFormatter?: TableOverflowTooltipFormatter<T>\n  fixed: boolean | string\n  formatter: (\n    row: T,\n    column: TableColumnCtx<T>,\n    cellValue: any,\n    index: number\n  ) => VNode | string\n  selectable: (row: T, index: number) => boolean\n  reserveSelection: boolean\n  filterMethod: FilterMethods<T>\n  filteredValue: string[]\n  filters: Filters\n  filterPlacement: string\n  filterMultiple: boolean\n  filterClassName: string\n  index: number | ((index: number) => number)\n  sortOrders: (TableSortOrder | null)[]\n  renderCell: (data: any) => VNode | VNode[]\n  colSpan: number\n  rowSpan: number\n  children?: TableColumnCtx<T>[]\n  level: number\n  filterable: boolean | FilterMethods<T> | Filters\n  order: TableSortOrder | null\n  isColumnGroup: boolean\n  isSubColumn: boolean\n  columns: TableColumnCtx<T>[]\n  getColumnIndex: () => number\n  no: number\n  filterOpened?: boolean\n  renderFilterIcon?: (scope: any) => VNode\n  renderExpand?: (scope: any) => VNode\n}\n\ninterface TableColumn<T extends DefaultRow> extends ComponentInternalInstance {\n  vnode: {\n    vParent: TableColumn<T> | Table<T>\n  } & VNode\n  vParent: TableColumn<T> | Table<T>\n  columnId: string\n  columnConfig: Ref<Partial<TableColumnCtx<T>>>\n}\n\nexport type { Filters, FilterMethods, TableColumnCtx, TableColumn, ValueOf }\n\nexport default {\n  /**\n   * @description type of the column. If set to `selection`, the column will display checkbox. If set to `index`, the column will display index of the row (staring from 1). If set to `expand`, the column will display expand icon\n   */\n  type: {\n    type: String,\n    default: 'default',\n  },\n  /**\n   * @description column label\n   */\n  label: String,\n  /**\n   * @description class name of cells in the column\n   */\n  className: String,\n  /**\n   * @description class name of the label of this column\n   */\n  labelClassName: String,\n  /**\n   * @description\n   */\n  property: String,\n  /**\n   * @description field name. You can also use its alias: `property`\n   */\n  prop: String,\n  /**\n   * @description column width\n   */\n  width: {\n    type: [String, Number],\n    default: '',\n  },\n  /**\n   * @description column minimum width. Columns with `width` has a fixed width, while columns with `min-width` has a width that is distributed in proportion\n   */\n  minWidth: {\n    type: [String, Number],\n    default: '',\n  },\n  /**\n   * @description render function for table header of this column\n   */\n  renderHeader: Function as PropType<TableColumnCtx<any>['renderHeader']>,\n  /**\n   * @description whether column can be sorted. Remote sorting can be done by setting this attribute to 'custom' and listening to the `sort-change` event of Table\n   */\n  sortable: {\n    type: [Boolean, String],\n    default: false,\n  },\n  /**\n   * @description sorting method, works when `sortable` is `true`. Should return a number, just like Array.sort\n   */\n  sortMethod: Function as PropType<TableColumnCtx<any>['sortMethod']>,\n  /**\n   * @description specify which property to sort by, works when `sortable` is `true` and `sort-method` is `undefined`. If set to an Array, the column will sequentially sort by the next property if the previous one is equal\n   */\n  sortBy: [String, Function, Array] as PropType<TableColumnCtx<any>['sortBy']>,\n  /**\n   * @description whether column width can be resized, works when `border` of `el-table` is `true`\n   */\n  resizable: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description column's key. If you need to use the filter-change event, you need this attribute to identify which column is being filtered\n   */\n  columnKey: String,\n  /**\n   * @description alignment, the value should be 'left' \\/ 'center' \\/ 'right'\n   */\n  align: String,\n  /**\n   * @description alignment of the table header. If omitted, the value of the above `align` attribute will be applied, the value should be 'left' \\/ 'center' \\/ 'right'\n   */\n  headerAlign: String,\n  /**\n   * @description whether to hide extra content and show them in a tooltip when hovering on the cell\n   */\n  showOverflowTooltip: {\n    type: [Boolean, Object] as PropType<\n      TableColumnCtx<any>['showOverflowTooltip']\n    >,\n    default: undefined,\n  },\n  /**\n   * @description function that formats cell tooltip content, works when `show-overflow-tooltip` is `true`\n   */\n  tooltipFormatter: Function as PropType<\n    TableColumnCtx<any>['tooltipFormatter']\n  >,\n  /**\n   * @description whether column is fixed at left / right. Will be fixed at left if `true`\n   */\n  fixed: [Boolean, String],\n  /**\n   * @description function that formats cell content\n   */\n  formatter: Function as PropType<TableColumnCtx<any>['formatter']>,\n  /**\n   * @description function that determines if a certain row can be selected, works when `type` is 'selection'\n   */\n  selectable: Function as PropType<TableColumnCtx<any>['selectable']>,\n  /**\n   * @description whether to reserve selection after data refreshing, works when `type` is 'selection'. Note that `row-key` is required for this to work\n   */\n  reserveSelection: Boolean,\n  /**\n   * @description data filtering method. If `filter-multiple` is on, this method will be called multiple times for each row, and a row will display if one of the calls returns `true`\n   */\n  filterMethod: Function as PropType<TableColumnCtx<any>['filterMethod']>,\n  /**\n   * @description filter value for selected data, might be useful when table header is rendered with `render-header`\n   */\n  filteredValue: Array as PropType<TableColumnCtx<any>['filteredValue']>,\n  /**\n   * @description an array of data filtering options. For each element in this array, `text` and `value` are required\n   */\n  filters: Array as PropType<TableColumnCtx<any>['filters']>,\n  /**\n   * @description placement for the filter dropdown\n   */\n  filterPlacement: String,\n  /**\n   * @description whether data filtering supports multiple options\n   */\n  filterMultiple: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description className for the filter dropdown\n   */\n  filterClassName: String,\n  /**\n   * @description customize indices for each row, works on columns with `type=index`\n   */\n  index: [Number, Function] as PropType<TableColumnCtx<any>['index']>,\n  /**\n   * @description the order of the sorting strategies used when sorting the data, works when `sortable` is `true`. Accepts an array, as the user clicks on the header, the column is sorted in order of the elements in the array\n   */\n  sortOrders: {\n    type: Array as PropType<TableColumnCtx<any>['sortOrders']>,\n    default: () => {\n      return ['ascending', 'descending', null]\n    },\n    validator: (val: TableColumnCtx<any>['sortOrders']) => {\n      return val.every((order: TableSortOrder | null) =>\n        ['ascending', 'descending', null].includes(order)\n      )\n    },\n  },\n}\n","import {\n  Fragment,\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  h,\n  onBeforeMount,\n  onBeforeUnmount,\n  onMounted,\n  ref,\n} from 'vue'\nimport ElCheckbox from '@element-plus/components/checkbox'\nimport { isArray, isString, isUndefined } from '@element-plus/utils'\nimport { cellStarts } from '../config'\nimport { compose, mergeOptions } from '../util'\nimport useWatcher from './watcher-helper'\nimport useRender from './render-helper'\nimport defaultProps from './defaults'\n\nimport type { VNode } from 'vue'\nimport type { TableColumn, TableColumnCtx } from './defaults'\nimport type { DefaultRow } from '../table/defaults'\n\nlet columnIdSeed = 1\n\n//TODO: when vue 3.3 we can set this component a generic: https://github.com/vuejs/core/pull/7963\nexport default defineComponent({\n  name: 'ElTableColumn',\n  components: {\n    ElCheckbox,\n  },\n  props: defaultProps,\n  setup(props, { slots }) {\n    const instance = getCurrentInstance() as TableColumn<DefaultRow>\n    const columnConfig = ref<Partial<TableColumnCtx<DefaultRow>>>({})\n    const owner = computed(() => {\n      let parent = instance.parent as any\n      while (parent && !parent.tableId) {\n        parent = parent.parent\n      }\n      return parent\n    })\n\n    const { registerNormalWatchers, registerComplexWatchers } = useWatcher(\n      owner,\n      props\n    )\n    const {\n      columnId,\n      isSubColumn,\n      realHeaderAlign,\n      columnOrTableParent,\n      setColumnWidth,\n      setColumnForcedProps,\n      setColumnRenders,\n      getPropsData,\n      getColumnElIndex,\n      realAlign,\n      updateColumnOrder,\n    } = useRender(props as unknown as TableColumnCtx<DefaultRow>, slots, owner)\n\n    const parent = columnOrTableParent.value\n    columnId.value = `${\n      ('tableId' in parent && parent.tableId) ||\n      ('columnId' in parent && parent.columnId)\n    }_column_${columnIdSeed++}`\n    onBeforeMount(() => {\n      isSubColumn.value = owner.value !== parent\n\n      const type = (props.type as keyof typeof cellStarts) || 'default'\n      const sortable = props.sortable === '' ? true : props.sortable\n      //The selection column should not be affected by `showOverflowTooltip`.\n      const showOverflowTooltip =\n        type === 'selection'\n          ? false\n          : isUndefined(props.showOverflowTooltip)\n          ? parent.props.showOverflowTooltip\n          : props.showOverflowTooltip\n      const tooltipFormatter = isUndefined(props.tooltipFormatter)\n        ? parent.props.tooltipFormatter\n        : props.tooltipFormatter\n      const defaults = {\n        ...cellStarts[type],\n        id: columnId.value,\n        type,\n        property: props.prop || props.property,\n        align: realAlign,\n        headerAlign: realHeaderAlign,\n        showOverflowTooltip,\n        tooltipFormatter,\n        // filter 相关属性\n        filterable: props.filters || props.filterMethod,\n        filteredValue: [],\n        filterPlacement: '',\n        filterClassName: '',\n        isColumnGroup: false,\n        isSubColumn: false,\n        filterOpened: false,\n        // sort 相关属性\n        sortable,\n        // index 列\n        index: props.index,\n        // <el-table-column key=\"xxx\" />\n        rawColumnKey: instance.vnode.key,\n      }\n\n      const basicProps = [\n        'columnKey',\n        'label',\n        'className',\n        'labelClassName',\n        'type',\n        'renderHeader',\n        'formatter',\n        'fixed',\n        'resizable',\n      ]\n      const sortProps = ['sortMethod', 'sortBy', 'sortOrders']\n      const selectProps = ['selectable', 'reserveSelection']\n      const filterProps = [\n        'filterMethod',\n        'filters',\n        'filterMultiple',\n        'filterOpened',\n        'filteredValue',\n        'filterPlacement',\n        'filterClassName',\n      ]\n\n      let column = getPropsData(basicProps, sortProps, selectProps, filterProps)\n\n      column = mergeOptions(defaults, column)\n      // 注意 compose 中函数执行的顺序是从右到左\n      const chains = compose(\n        setColumnRenders,\n        setColumnWidth,\n        setColumnForcedProps\n      )\n      column = chains(column) as unknown as TableColumnCtx<DefaultRow>\n      columnConfig.value = column\n\n      // 注册 watcher\n      registerNormalWatchers()\n      registerComplexWatchers()\n    })\n    onMounted(() => {\n      const parent = columnOrTableParent.value\n      const children = isSubColumn.value\n        ? parent.vnode.el?.children\n        : parent.refs.hiddenColumns?.children\n      const getColumnIndex = () =>\n        getColumnElIndex(children || [], instance.vnode.el)\n      columnConfig.value.getColumnIndex = getColumnIndex\n      const columnIndex = getColumnIndex()\n      columnIndex > -1 &&\n        owner.value.store.commit(\n          'insertColumn',\n          columnConfig.value,\n          isSubColumn.value\n            ? 'columnConfig' in parent && parent.columnConfig.value\n            : null,\n          updateColumnOrder\n        )\n    })\n    onBeforeUnmount(() => {\n      const getColumnIndex = columnConfig.value.getColumnIndex\n      const columnIndex = getColumnIndex ? getColumnIndex() : -1\n      columnIndex > -1 &&\n        owner.value.store.commit(\n          'removeColumn',\n          columnConfig.value,\n          isSubColumn.value\n            ? 'columnConfig' in parent && parent.columnConfig.value\n            : null,\n          updateColumnOrder\n        )\n    })\n    instance.columnId = columnId.value\n\n    instance.columnConfig = columnConfig as any\n    return\n  },\n  render() {\n    try {\n      const renderDefault = this.$slots.default?.({\n        row: {},\n        column: {},\n        $index: -1,\n      })\n      const children = []\n      if (isArray(renderDefault)) {\n        for (const childNode of renderDefault) {\n          if (\n            (childNode.type as any)?.name === 'ElTableColumn' ||\n            childNode.shapeFlag & 2\n          ) {\n            children.push(childNode)\n          } else if (\n            childNode.type === Fragment &&\n            isArray(childNode.children)\n          ) {\n            childNode.children.forEach((vnode) => {\n              // No rendering when vnode is dynamic slot or text\n              if (\n                (vnode as VNode)?.patchFlag !== 1024 &&\n                !isString((vnode as VNode)?.children)\n              ) {\n                children.push(vnode)\n              }\n            })\n          }\n        }\n      }\n      const vnode = h('div', children)\n      return vnode\n    } catch {\n      return h('div', [])\n    }\n  },\n})\n","import { withInstall, withNoopInstall } from '@element-plus/utils'\nimport Table from './src/table.vue'\nimport TableColumn from './src/tableColumn'\n\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nexport const ElTable: SFCWithInstall<typeof Table> & {\n  TableColumn: typeof TableColumn\n} = withInstall(Table, {\n  TableColumn,\n})\nexport default ElTable\nexport const ElTableColumn: SFCWithInstall<typeof TableColumn> =\n  withNoopInstall(TableColumn)\n\nexport type TableInstance = InstanceType<typeof Table> & unknown\n\nexport type TableColumnInstance = InstanceType<typeof TableColumn> & unknown\n\nexport type {\n  SummaryMethod,\n  Table,\n  TableProps,\n  TableRefs,\n  ColumnCls,\n  ColumnStyle,\n  CellCls,\n  CellStyle,\n  TreeNode,\n  RenderRowData,\n  Sort,\n  Filter,\n  TableColumnCtx,\n  TableTooltipData,\n} from './src/table/defaults'\n","export const MINIMUM_INPUT_WIDTH = 11\nexport const BORDER_HORIZONTAL_WIDTH = 2\n","import { buildProps, definePropType } from '@element-plus/utils'\nimport { popperContentProps } from '@element-plus/components/popper'\nimport { useAriaProps, useDelayedToggleProps } from '@element-plus/hooks'\nimport { teleportProps } from '@element-plus/components/teleport'\n\nimport type TooltipContent from './content.vue'\nimport type { ExtractPropTypes, __ExtractPublicPropTypes } from 'vue'\n\nexport const useTooltipContentProps = buildProps({\n  ...useDelayedToggleProps,\n  ...popperContentProps,\n  /**\n   * @description which element the tooltip CONTENT appends to\n   */\n  appendTo: {\n    type: teleportProps.to.type,\n  },\n  /**\n   * @description display content, can be overridden by `slot#content`\n   */\n  content: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description whether `content` is treated as HTML string\n   */\n  rawContent: Boolean,\n  /**\n   * @description when tooltip inactive and `persistent` is `false` , popconfirm will be destroyed\n   */\n  persistent: Boolean,\n  // because model toggle prop is generated dynamically\n  // so the typing cannot be evaluated by typescript as type:\n  // [name]: { type: Boolean, default: null }\n  // so we need to declare that again for type checking.\n  /**\n   * @description visibility of Tooltip\n   */\n  visible: {\n    type: definePropType<boolean | null>(Boolean),\n    default: null,\n  },\n  /**\n   * @description animation name\n   */\n  transition: String,\n  /**\n   * @description whether tooltip content is teleported, if `true` it will be teleported to where `append-to` sets\n   */\n  teleported: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description whether Tooltip is disabled\n   */\n  disabled: Boolean,\n  ...useAriaProps(['ariaLabel']),\n} as const)\n\nexport type ElTooltipContentProps = ExtractPropTypes<\n  typeof useTooltipContentProps\n>\nexport type ElTooltipContentPropsPublic = __ExtractPublicPropTypes<\n  typeof useTooltipContentProps\n>\n\nexport type TooltipContentInstance = InstanceType<typeof TooltipContent> &\n  unknown\n","import type {\n  ComputedRef,\n  InjectionKey,\n  Ref,\n  Slots,\n  UnwrapRef,\n  VNode,\n} from 'vue'\nimport type { TabsProps } from './tabs'\nimport type { TabPaneProps } from './tab-pane'\nimport type { TabNavInstance } from './tab-nav'\n\nexport type TabPaneName = string | number\n\nexport type TabsPaneContext = UnwrapRef<{\n  uid: number\n  getVnode: () => VNode\n  slots: Slots\n  props: TabPaneProps\n  paneName: ComputedRef<TabPaneName | undefined>\n  active: ComputedRef<boolean>\n  index: Ref<string | undefined>\n  isClosable: ComputedRef<boolean>\n  isFocusInsidePane: () => boolean | undefined\n}>\n\nexport interface TabsRootContext {\n  props: TabsProps\n  currentName: Ref<TabPaneName>\n  registerPane: (pane: TabsPaneContext) => void\n  unregisterPane: (pane: TabsPaneContext) => void\n  nav$: Ref<TabNavInstance | undefined>\n}\n\nexport const tabsRootContextKey: InjectionKey<TabsRootContext> =\n  Symbol('tabsRootContextKey')\n","import { buildProps, definePropType, mutable } from '@element-plus/utils'\n\nimport type { ExtractPropTypes, __ExtractPublicPropTypes } from 'vue'\nimport type { TabPaneName, TabsPaneContext } from './constants'\nimport type TabBar from './tab-bar.vue'\n\nexport const tabBarProps = buildProps({\n  tabs: {\n    type: definePropType<TabsPaneContext[]>(Array),\n    default: () => mutable([] as const),\n  },\n  tabRefs: {\n    type: definePropType<{ [key: TabPaneName]: HTMLDivElement }>(Object),\n    default: () => mutable({} as const),\n  },\n} as const)\n\nexport type TabBarProps = ExtractPropTypes<typeof tabBarProps>\nexport type TabBarPropsPublic = __ExtractPublicPropTypes<typeof tabBarProps>\nexport type TabBarInstance = InstanceType<typeof TabBar> & unknown\n","<template>\n  <div\n    ref=\"barRef\"\n    :class=\"[ns.e('active-bar'), ns.is(rootTabs!.props.tabPosition)]\"\n    :style=\"barStyle\"\n  />\n</template>\n\n<script lang=\"ts\" setup>\nimport { inject, nextTick, onBeforeUnmount, ref, watch } from 'vue'\nimport { useResizeObserver } from '@vueuse/core'\nimport { capitalize, isUndefined, throwError } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { tabsRootContextKey } from './constants'\nimport { tabBarProps } from './tab-bar'\n\nimport type { CSSProperties } from 'vue'\n\nconst COMPONENT_NAME = 'ElTabBar'\ndefineOptions({\n  name: COMPONENT_NAME,\n})\nconst props = defineProps(tabBarProps)\n\nconst rootTabs = inject(tabsRootContextKey)\nif (!rootTabs) throwError(COMPONENT_NAME, '<el-tabs><el-tab-bar /></el-tabs>')\n\nconst ns = useNamespace('tabs')\n\nconst barRef = ref<HTMLDivElement>()\nconst barStyle = ref<CSSProperties>()\n\nconst getBarStyle = (): CSSProperties => {\n  let offset = 0\n  let tabSize = 0\n\n  const sizeName = ['top', 'bottom'].includes(rootTabs.props.tabPosition)\n    ? 'width'\n    : 'height'\n  const sizeDir = sizeName === 'width' ? 'x' : 'y'\n  const position = sizeDir === 'x' ? 'left' : 'top'\n\n  props.tabs.every((tab) => {\n    if (isUndefined(tab.paneName)) return false\n    const $el = props.tabRefs[tab.paneName]\n    if (!$el) return false\n\n    if (!tab.active) {\n      return true\n    }\n\n    offset = $el[`offset${capitalize(position)}`]\n    tabSize = $el[`client${capitalize(sizeName)}`]\n\n    const tabStyles = window.getComputedStyle($el)\n\n    if (sizeName === 'width') {\n      tabSize -=\n        Number.parseFloat(tabStyles.paddingLeft) +\n        Number.parseFloat(tabStyles.paddingRight)\n      offset += Number.parseFloat(tabStyles.paddingLeft)\n    }\n    return false\n  })\n\n  return {\n    [sizeName]: `${tabSize}px`,\n    transform: `translate${capitalize(sizeDir)}(${offset}px)`,\n  }\n}\n\nconst update = () => (barStyle.value = getBarStyle())\n\nconst tabObservers = [] as ReturnType<typeof useResizeObserver>[]\nconst observerTabs = () => {\n  tabObservers.forEach((observer) => observer.stop())\n  tabObservers.length = 0\n\n  Object.values(props.tabRefs).forEach((tab) => {\n    tabObservers.push(useResizeObserver(tab, update))\n  })\n}\n\nwatch(\n  () => props.tabs,\n  async () => {\n    await nextTick()\n    update()\n\n    observerTabs()\n  },\n  { immediate: true }\n)\nconst barObserver = useResizeObserver(barRef, () => update())\n\nonBeforeUnmount(() => {\n  tabObservers.forEach((observer) => observer.stop())\n  tabObservers.length = 0\n  barObserver.stop()\n})\n\ndefineExpose({\n  /** @description tab root html element */\n  ref: barRef,\n  /** @description method to manually update tab bar style */\n  update,\n})\n</script>\n","import {\n  computed,\n  defineComponent,\n  inject,\n  nextTick,\n  onMounted,\n  onUpdated,\n  ref,\n  shallowRef,\n  triggerRef,\n  watch,\n} from 'vue'\nimport {\n  useDocumentVisibility,\n  useResizeObserver,\n  useWindowFocus,\n} from '@vueuse/core'\nimport {\n  buildProps,\n  capitalize,\n  definePropType,\n  mutable,\n  throwError,\n} from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { ArrowLeft, ArrowRight, Close } from '@element-plus/icons-vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport TabBar from './tab-bar.vue'\nimport { tabsRootContextKey } from './constants'\n\nimport type {\n  CSSProperties,\n  ComponentPublicInstance,\n  ExtractPropTypes,\n  __ExtractPublicPropTypes,\n} from 'vue'\nimport type { TabBarInstance } from './tab-bar'\nimport type { TabPaneName, TabsPaneContext } from './constants'\n\ninterface Scrollable {\n  next?: boolean\n  prev?: number\n}\n\nexport const tabNavProps = buildProps({\n  panes: {\n    type: definePropType<TabsPaneContext[]>(Array),\n    default: () => mutable([] as const),\n  },\n  currentName: {\n    type: [String, Number],\n    default: '',\n  },\n  editable: Boolean,\n  type: {\n    type: String,\n    values: ['card', 'border-card', ''],\n    default: '',\n  },\n  stretch: Boolean,\n} as const)\n\nexport const tabNavEmits = {\n  tabClick: (tab: TabsPaneContext, tabName: TabPaneName, ev: Event) =>\n    ev instanceof Event,\n  tabRemove: (tab: TabsPaneContext, ev: Event) => ev instanceof Event,\n}\n\nexport type TabNavProps = ExtractPropTypes<typeof tabNavProps>\nexport type TabNavPropsPublic = __ExtractPublicPropTypes<typeof tabNavProps>\nexport type TabNavEmits = typeof tabNavEmits\n\nconst COMPONENT_NAME = 'ElTabNav'\nconst TabNav = defineComponent({\n  name: COMPONENT_NAME,\n  props: tabNavProps,\n  emits: tabNavEmits,\n  setup(props, { expose, emit }) {\n    const rootTabs = inject(tabsRootContextKey)\n    if (!rootTabs) throwError(COMPONENT_NAME, `<el-tabs><tab-nav /></el-tabs>`)\n\n    const ns = useNamespace('tabs')\n    const visibility = useDocumentVisibility()\n    const focused = useWindowFocus()\n\n    const navScroll$ = ref<HTMLDivElement>()\n    const nav$ = ref<HTMLDivElement>()\n    const el$ = ref<HTMLDivElement>()\n    const tabRefsMap = ref<{ [key: TabPaneName]: HTMLDivElement }>({})\n\n    const tabBarRef = ref<TabBarInstance>()\n\n    const scrollable = ref<false | Scrollable>(false)\n    const navOffset = ref(0)\n    const isFocus = ref(false)\n    const focusable = ref(true)\n    const tracker = shallowRef()\n\n    const isHorizontal = computed(() =>\n      ['top', 'bottom'].includes(rootTabs.props.tabPosition)\n    )\n\n    const sizeName = computed(() => (isHorizontal.value ? 'width' : 'height'))\n    const navStyle = computed<CSSProperties>(() => {\n      const dir = sizeName.value === 'width' ? 'X' : 'Y'\n      return {\n        transform: `translate${dir}(-${navOffset.value}px)`,\n      }\n    })\n\n    const scrollPrev = () => {\n      if (!navScroll$.value) return\n\n      const containerSize =\n        navScroll$.value[`offset${capitalize(sizeName.value)}`]\n      const currentOffset = navOffset.value\n\n      if (!currentOffset) return\n\n      const newOffset =\n        currentOffset > containerSize ? currentOffset - containerSize : 0\n\n      navOffset.value = newOffset\n    }\n\n    const scrollNext = () => {\n      if (!navScroll$.value || !nav$.value) return\n\n      const navSize = nav$.value[`offset${capitalize(sizeName.value)}`]\n      const containerSize =\n        navScroll$.value[`offset${capitalize(sizeName.value)}`]\n      const currentOffset = navOffset.value\n\n      if (navSize - currentOffset <= containerSize) return\n\n      const newOffset =\n        navSize - currentOffset > containerSize * 2\n          ? currentOffset + containerSize\n          : navSize - containerSize\n\n      navOffset.value = newOffset\n    }\n\n    const scrollToActiveTab = async () => {\n      const nav = nav$.value\n      if (!scrollable.value || !el$.value || !navScroll$.value || !nav) return\n\n      await nextTick()\n\n      const activeTab = tabRefsMap.value[props.currentName]\n      if (!activeTab) return\n\n      const navScroll = navScroll$.value\n\n      const activeTabBounding = activeTab.getBoundingClientRect()\n      const navScrollBounding = navScroll.getBoundingClientRect()\n      const maxOffset = isHorizontal.value\n        ? nav.offsetWidth - navScrollBounding.width\n        : nav.offsetHeight - navScrollBounding.height\n      const currentOffset = navOffset.value\n      let newOffset = currentOffset\n\n      if (isHorizontal.value) {\n        if (activeTabBounding.left < navScrollBounding.left) {\n          newOffset =\n            currentOffset - (navScrollBounding.left - activeTabBounding.left)\n        }\n        if (activeTabBounding.right > navScrollBounding.right) {\n          newOffset =\n            currentOffset + activeTabBounding.right - navScrollBounding.right\n        }\n      } else {\n        if (activeTabBounding.top < navScrollBounding.top) {\n          newOffset =\n            currentOffset - (navScrollBounding.top - activeTabBounding.top)\n        }\n        if (activeTabBounding.bottom > navScrollBounding.bottom) {\n          newOffset =\n            currentOffset +\n            (activeTabBounding.bottom - navScrollBounding.bottom)\n        }\n      }\n      newOffset = Math.max(newOffset, 0)\n      navOffset.value = Math.min(newOffset, maxOffset)\n    }\n\n    const update = () => {\n      if (!nav$.value || !navScroll$.value) return\n\n      props.stretch && tabBarRef.value?.update()\n\n      const navSize = nav$.value[`offset${capitalize(sizeName.value)}`]\n      const containerSize =\n        navScroll$.value[`offset${capitalize(sizeName.value)}`]\n      const currentOffset = navOffset.value\n\n      if (containerSize < navSize) {\n        scrollable.value = scrollable.value || {}\n        scrollable.value.prev = currentOffset\n        scrollable.value.next = currentOffset + containerSize < navSize\n        if (navSize - currentOffset < containerSize) {\n          navOffset.value = navSize - containerSize\n        }\n      } else {\n        scrollable.value = false\n        if (currentOffset > 0) {\n          navOffset.value = 0\n        }\n      }\n    }\n\n    const changeTab = (event: KeyboardEvent) => {\n      let step = 0\n\n      switch (event.code) {\n        case EVENT_CODE.left:\n        case EVENT_CODE.up:\n          step = -1\n          break\n        case EVENT_CODE.right:\n        case EVENT_CODE.down:\n          step = 1\n          break\n        default:\n          return\n      }\n\n      const tabList = Array.from(\n        (\n          event.currentTarget as HTMLDivElement\n        ).querySelectorAll<HTMLDivElement>('[role=tab]:not(.is-disabled)')\n      )\n      const currentIndex = tabList.indexOf(event.target as HTMLDivElement)\n      let nextIndex = currentIndex + step\n\n      if (nextIndex < 0) {\n        nextIndex = tabList.length - 1\n      } else if (nextIndex >= tabList.length) {\n        nextIndex = 0\n      }\n\n      tabList[nextIndex].focus({ preventScroll: true }) // 改变焦点元素\n      tabList[nextIndex].click() // 选中下一个tab\n      setFocus()\n    }\n\n    const setFocus = () => {\n      if (focusable.value) isFocus.value = true\n    }\n    const removeFocus = () => (isFocus.value = false)\n\n    const setRefs = (\n      el: Element | ComponentPublicInstance | null,\n      key: TabPaneName\n    ) => {\n      tabRefsMap.value[key] = el as HTMLDivElement\n    }\n\n    const focusActiveTab = async () => {\n      await nextTick()\n\n      const activeTab = tabRefsMap.value[props.currentName]\n      activeTab?.focus({ preventScroll: true })\n    }\n\n    watch(visibility, (visibility) => {\n      if (visibility === 'hidden') {\n        focusable.value = false\n      } else if (visibility === 'visible') {\n        setTimeout(() => (focusable.value = true), 50)\n      }\n    })\n    watch(focused, (focused) => {\n      if (focused) {\n        setTimeout(() => (focusable.value = true), 50)\n      } else {\n        focusable.value = false\n      }\n    })\n\n    useResizeObserver(el$, update)\n\n    onMounted(() => setTimeout(() => scrollToActiveTab(), 0))\n    onUpdated(() => update())\n\n    expose({\n      scrollToActiveTab,\n      removeFocus,\n      focusActiveTab,\n      tabListRef: nav$,\n      tabBarRef,\n      scheduleRender: () => triggerRef(tracker),\n    })\n\n    return () => {\n      const scrollBtn = scrollable.value\n        ? [\n            <span\n              class={[\n                ns.e('nav-prev'),\n                ns.is('disabled', !scrollable.value.prev),\n              ]}\n              onClick={scrollPrev}\n            >\n              <ElIcon>\n                <ArrowLeft />\n              </ElIcon>\n            </span>,\n            <span\n              class={[\n                ns.e('nav-next'),\n                ns.is('disabled', !scrollable.value.next),\n              ]}\n              onClick={scrollNext}\n            >\n              <ElIcon>\n                <ArrowRight />\n              </ElIcon>\n            </span>,\n          ]\n        : null\n\n      const tabs = props.panes.map((pane, index) => {\n        const uid = pane.uid\n        const disabled = pane.props.disabled\n        const tabName = pane.props.name ?? pane.index ?? `${index}`\n        const closable = !disabled && (pane.isClosable || props.editable)\n        pane.index = `${index}`\n\n        const btnClose = closable ? (\n          <ElIcon\n            class=\"is-icon-close\"\n            // `onClick` not exist when generate dts\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            onClick={(ev: MouseEvent) => emit('tabRemove', pane, ev)}\n          >\n            <Close />\n          </ElIcon>\n        ) : null\n\n        const tabLabelContent = pane.slots.label?.() || pane.props.label\n        const tabindex = !disabled && pane.active ? 0 : -1\n\n        return (\n          <div\n            ref={(el) => setRefs(el, tabName)}\n            class={[\n              ns.e('item'),\n              ns.is(rootTabs.props.tabPosition),\n              ns.is('active', pane.active),\n              ns.is('disabled', disabled),\n              ns.is('closable', closable),\n              ns.is('focus', isFocus.value),\n            ]}\n            id={`tab-${tabName}`}\n            key={`tab-${uid}`}\n            aria-controls={`pane-${tabName}`}\n            role=\"tab\"\n            aria-selected={pane.active}\n            tabindex={tabindex}\n            onFocus={() => setFocus()}\n            onBlur={() => removeFocus()}\n            onClick={(ev: MouseEvent) => {\n              removeFocus()\n              emit('tabClick', pane, tabName, ev)\n            }}\n            onKeydown={(ev: KeyboardEvent) => {\n              if (\n                closable &&\n                (ev.code === EVENT_CODE.delete ||\n                  ev.code === EVENT_CODE.backspace)\n              ) {\n                emit('tabRemove', pane, ev)\n              }\n            }}\n          >\n            {...[tabLabelContent, btnClose]}\n          </div>\n        )\n      })\n\n      // By tracking the value property, we can schedule a job to re-render `TabNav` when needed.\n      // Unlike `instance.update`, the scheduler ensures the job is queued only once even if we trigger it multiple times.\n      tracker.value\n\n      return (\n        <div\n          ref={el$}\n          class={[\n            ns.e('nav-wrap'),\n            ns.is('scrollable', !!scrollable.value),\n            ns.is(rootTabs.props.tabPosition),\n          ]}\n        >\n          {scrollBtn}\n          <div class={ns.e('nav-scroll')} ref={navScroll$}>\n            {props.panes.length > 0 ? (\n              <div\n                class={[\n                  ns.e('nav'),\n                  ns.is(rootTabs.props.tabPosition),\n                  ns.is(\n                    'stretch',\n                    props.stretch &&\n                      ['top', 'bottom'].includes(rootTabs.props.tabPosition)\n                  ),\n                ]}\n                ref={nav$}\n                style={navStyle.value}\n                role=\"tablist\"\n                onKeydown={changeTab}\n              >\n                {...[\n                  !props.type ? (\n                    <TabBar\n                      ref={tabBarRef}\n                      tabs={[...props.panes]}\n                      tabRefs={tabRefsMap.value}\n                    />\n                  ) : null,\n                  tabs,\n                ]}\n              </div>\n            ) : null}\n          </div>\n        </div>\n      )\n    }\n  },\n})\n\nexport type TabNavInstance = InstanceType<typeof TabNav> & {\n  scrollToActiveTab: () => Promise<void>\n  removeFocus: () => void\n  focusActiveTab: () => void\n  scheduleRender: () => void\n  tabListRef: HTMLDivElement | undefined\n  tabBarRef: TabBarInstance | undefined\n}\n\nexport default TabNav\n","import {\n  computed,\n  createVNode,\n  defineComponent,\n  getCurrentInstance,\n  nextTick,\n  provide,\n  ref,\n  renderSlot,\n  watch,\n} from 'vue'\nimport { omit } from 'lodash-unified'\nimport {\n  buildProps,\n  definePropType,\n  isNumber,\n  isString,\n  isUndefined,\n} from '@element-plus/utils'\nimport { EVENT_CODE, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport ElIcon from '@element-plus/components/icon'\nimport { Plus } from '@element-plus/icons-vue'\nimport { useNamespace, useOrderedChildren } from '@element-plus/hooks'\nimport { tabsRootContextKey } from './constants'\nimport TabNav from './tab-nav'\n\nimport type { ExtractPropTypes, VNode, __ExtractPublicPropTypes } from 'vue'\nimport type { Awaitable } from '@element-plus/utils'\nimport type { TabNavInstance } from './tab-nav'\nimport type { TabPaneName, TabsPaneContext } from './constants'\n\nexport const tabsProps = buildProps({\n  /**\n   * @description type of Tab\n   */\n  type: {\n    type: String,\n    values: ['card', 'border-card', ''],\n    default: '',\n  },\n  /**\n   * @description whether Tab is closable\n   */\n  closable: Boolean,\n  /**\n   * @description whether Tab is addable\n   */\n  addable: Boolean,\n  /**\n   * @description binding value, name of the selected tab\n   */\n  modelValue: {\n    type: [String, Number],\n  },\n  /**\n   * @description whether Tab is addable and closable\n   */\n  editable: Boolean,\n  /**\n   * @description position of tabs\n   */\n  tabPosition: {\n    type: String,\n    values: ['top', 'right', 'bottom', 'left'],\n    default: 'top',\n  },\n  /**\n   * @description hook function before switching tab. If `false` is returned or a `Promise` is returned and then is rejected, switching will be prevented\n   */\n  beforeLeave: {\n    type: definePropType<\n      (newName: TabPaneName, oldName: TabPaneName) => Awaitable<void | boolean>\n    >(Function),\n    default: () => true,\n  },\n  /**\n   * @description whether width of tab automatically fits its container\n   */\n  stretch: Boolean,\n} as const)\nexport type TabsProps = ExtractPropTypes<typeof tabsProps>\nexport type TabsPropsPublic = __ExtractPublicPropTypes<typeof tabsProps>\n\nconst isPaneName = (value: unknown): value is string | number =>\n  isString(value) || isNumber(value)\n\nexport const tabsEmits = {\n  [UPDATE_MODEL_EVENT]: (name: TabPaneName) => isPaneName(name),\n  tabClick: (pane: TabsPaneContext, ev: Event) => ev instanceof Event,\n  tabChange: (name: TabPaneName) => isPaneName(name),\n  edit: (paneName: TabPaneName | undefined, action: 'remove' | 'add') =>\n    ['remove', 'add'].includes(action),\n  tabRemove: (name: TabPaneName) => isPaneName(name),\n  tabAdd: () => true,\n}\nexport type TabsEmits = typeof tabsEmits\n\nexport type TabsPanes = Record<number, TabsPaneContext>\n\nconst Tabs = defineComponent({\n  name: 'ElTabs',\n\n  props: tabsProps,\n  emits: tabsEmits,\n\n  setup(props, { emit, slots, expose }) {\n    const ns = useNamespace('tabs')\n\n    const isVertical = computed(() =>\n      ['left', 'right'].includes(props.tabPosition)\n    )\n\n    const {\n      children: panes,\n      addChild: registerPane,\n      removeChild: unregisterPane,\n      ChildrenSorter: PanesSorter,\n    } = useOrderedChildren<TabsPaneContext>(getCurrentInstance()!, 'ElTabPane')\n\n    const nav$ = ref<TabNavInstance>()\n    const currentName = ref<TabPaneName>(props.modelValue ?? '0')\n\n    const setCurrentName = async (value?: TabPaneName, trigger = false) => {\n      // should do nothing.\n      if (currentName.value === value || isUndefined(value)) return\n\n      try {\n        let canLeave\n        if (props.beforeLeave) {\n          const result = props.beforeLeave(value, currentName.value)\n          canLeave = result instanceof Promise ? await result : result\n        } else {\n          canLeave = true\n        }\n\n        if (canLeave !== false) {\n          const isFocusInsidePane = panes.value\n            .find((item) => item.paneName === currentName.value)\n            ?.isFocusInsidePane()\n\n          currentName.value = value\n          if (trigger) {\n            emit(UPDATE_MODEL_EVENT, value)\n            emit('tabChange', value)\n          }\n\n          nav$.value?.removeFocus?.()\n          if (isFocusInsidePane) {\n            nav$.value?.focusActiveTab()\n          }\n        }\n      } catch {}\n    }\n\n    const handleTabClick = (\n      tab: TabsPaneContext,\n      tabName: TabPaneName,\n      event: Event\n    ) => {\n      if (tab.props.disabled) return\n      emit('tabClick', tab, event)\n      setCurrentName(tabName, true)\n    }\n\n    const handleTabRemove = (pane: TabsPaneContext, ev: Event) => {\n      if (pane.props.disabled || isUndefined(pane.props.name)) return\n      ev.stopPropagation()\n      emit('edit', pane.props.name, 'remove')\n      emit('tabRemove', pane.props.name)\n    }\n\n    const handleTabAdd = () => {\n      emit('edit', undefined, 'add')\n      emit('tabAdd')\n    }\n\n    const swapChildren = (\n      vnode: VNode & {\n        el: HTMLDivElement\n        children: VNode<HTMLDivElement>[]\n      }\n    ) => {\n      const actualFirstChild = vnode.el.firstChild!\n      const firstChild = ['bottom', 'right'].includes(props.tabPosition)\n        ? vnode.children[0].el!\n        : vnode.children[1].el!\n\n      if (actualFirstChild !== firstChild) {\n        actualFirstChild.before(firstChild)\n      }\n    }\n\n    watch(\n      () => props.modelValue,\n      (modelValue) => setCurrentName(modelValue)\n    )\n\n    watch(currentName, async () => {\n      await nextTick()\n      nav$.value?.scrollToActiveTab()\n    })\n\n    provide(tabsRootContextKey, {\n      props,\n      currentName,\n      registerPane,\n      unregisterPane,\n      nav$,\n    })\n\n    expose({\n      currentName,\n      get tabNavRef() {\n        return omit(nav$.value, ['scheduleRender'])\n      },\n    })\n\n    return () => {\n      const addSlot = slots['add-icon']\n      const newButton =\n        props.editable || props.addable ? (\n          <div\n            class={[\n              ns.e('new-tab'),\n              isVertical.value && ns.e('new-tab-vertical'),\n            ]}\n            tabindex=\"0\"\n            onClick={handleTabAdd}\n            onKeydown={(ev: KeyboardEvent) => {\n              if ([EVENT_CODE.enter, EVENT_CODE.numpadEnter].includes(ev.code))\n                handleTabAdd()\n            }}\n          >\n            {addSlot ? (\n              renderSlot(slots, 'add-icon')\n            ) : (\n              <ElIcon class={ns.is('icon-plus')}>\n                <Plus />\n              </ElIcon>\n            )}\n          </div>\n        ) : null\n\n      const tabNav = () => (\n        <TabNav\n          ref={nav$}\n          currentName={currentName.value}\n          editable={props.editable}\n          type={props.type}\n          panes={panes.value}\n          stretch={props.stretch}\n          onTabClick={handleTabClick}\n          onTabRemove={handleTabRemove}\n        />\n      )\n\n      const header = (\n        <div\n          class={[\n            ns.e('header'),\n            isVertical.value && ns.e('header-vertical'),\n            ns.is(props.tabPosition),\n          ]}\n        >\n          {createVNode(PanesSorter, null, {\n            default: tabNav,\n            $stable: true,\n          })}\n          {newButton}\n        </div>\n      )\n\n      const panels = (\n        <div class={ns.e('content')}>{renderSlot(slots, 'default')}</div>\n      )\n\n      return (\n        <div\n          class={[\n            ns.b(),\n            ns.m(props.tabPosition),\n            {\n              [ns.m('card')]: props.type === 'card',\n              [ns.m('border-card')]: props.type === 'border-card',\n            },\n          ]}\n          // @ts-ignore\n          onVnodeMounted={swapChildren}\n          onVnodeUpdated={swapChildren}\n        >\n          {panels}\n          {header}\n        </div>\n      )\n    }\n  },\n})\n\nexport type TabsInstance = InstanceType<typeof Tabs> & {\n  currentName: TabPaneName\n  tabNavRef: TabNavInstance | undefined\n}\n\nexport default Tabs\n","import { buildProps } from '@element-plus/utils'\n\nimport type { ExtractPropTypes, __ExtractPublicPropTypes } from 'vue'\nimport type TabPane from './tab-pane.vue'\n\nexport const tabPaneProps = buildProps({\n  /**\n   * @description title of the tab\n   */\n  label: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description identifier corresponding to the name of Tabs, representing the alias of the tab-pane, the default is ordinal number of the tab-pane in the sequence, e.g. the first tab-pane is '0'\n   */\n  name: {\n    type: [String, Number],\n  },\n  /**\n   * @description whether Tab is closable\n   */\n  closable: Boolean,\n  /**\n   * @description whether Tab is disabled\n   */\n  disabled: Boolean,\n  /**\n   * @description whether Tab is lazily rendered\n   */\n  lazy: Boolean,\n} as const)\n\nexport type TabPaneProps = ExtractPropTypes<typeof tabPaneProps>\nexport type TabPanePropsPublic = __ExtractPublicPropTypes<typeof tabPaneProps>\n\nexport type TabPaneInstance = InstanceType<typeof TabPane> & unknown\n","<template>\n  <div\n    v-if=\"shouldBeRender\"\n    v-show=\"active\"\n    :id=\"`pane-${paneName}`\"\n    ref=\"paneRef\"\n    :class=\"ns.b()\"\n    role=\"tabpanel\"\n    :aria-hidden=\"!active\"\n    :aria-labelledby=\"`tab-${paneName}`\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  getCurrentInstance,\n  inject,\n  onBeforeUnmount,\n  onBeforeUpdate,\n  reactive,\n  ref,\n  useSlots,\n  watch,\n} from 'vue'\nimport { eagerComputed } from '@vueuse/core'\nimport { throwError } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { tabsRootContextKey } from './constants'\nimport { tabPaneProps } from './tab-pane'\n\nconst COMPONENT_NAME = 'ElTabPane'\ndefineOptions({\n  name: COMPONENT_NAME,\n})\nconst props = defineProps(tabPaneProps)\n\nconst instance = getCurrentInstance()!\nconst slots = useSlots()\n\nconst tabsRoot = inject(tabsRootContextKey)\nif (!tabsRoot)\n  throwError(COMPONENT_NAME, 'usage: <el-tabs><el-tab-pane /></el-tabs/>')\n\nconst ns = useNamespace('tab-pane')\n\nconst paneRef = ref<HTMLDivElement>()\nconst index = ref<string>()\nconst isClosable = computed(() => props.closable || tabsRoot.props.closable)\nconst active = eagerComputed(\n  () => tabsRoot.currentName.value === (props.name ?? index.value)\n)\nconst loaded = ref(active.value)\nconst paneName = computed(() => props.name ?? index.value)\nconst shouldBeRender = eagerComputed(\n  () => !props.lazy || loaded.value || active.value\n)\n\nconst isFocusInsidePane = () => {\n  return paneRef.value?.contains(document.activeElement)\n}\n\nwatch(active, (val) => {\n  if (val) loaded.value = true\n})\n\nconst pane = reactive({\n  uid: instance.uid,\n  getVnode: () => instance.vnode,\n  slots,\n  props,\n  paneName,\n  active,\n  index,\n  isClosable,\n  isFocusInsidePane,\n})\n\ntabsRoot.registerPane(pane)\n\nonBeforeUnmount(() => {\n  tabsRoot.unregisterPane(pane)\n})\n\nonBeforeUpdate(() => {\n  if (slots.label) tabsRoot.nav$.value?.scheduleRender()\n})\n</script>\n","import { withInstall, withNoopInstall } from '@element-plus/utils'\nimport Tabs from './src/tabs'\nimport TabPane from './src/tab-pane.vue'\n\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nexport const ElTabs: SFCWithInstall<typeof Tabs> & {\n  TabPane: typeof TabPane\n} = withInstall(Tabs, {\n  TabPane,\n})\nexport const ElTabPane: SFCWithInstall<typeof TabPane> =\n  withNoopInstall(TabPane)\nexport default ElTabs\n\nexport * from './src/tabs'\nexport * from './src/tab-bar'\nexport * from './src/tab-nav'\nexport * from './src/tab-pane'\nexport * from './src/constants'\n","import { buildProps, definePropType } from '@element-plus/utils'\n\nimport type { ExtractPropTypes, __ExtractPublicPropTypes } from 'vue'\nimport type Teleport from './teleport.vue'\n\nexport const teleportProps = buildProps({\n  to: {\n    type: definePropType<string | HTMLElement>([String, Object]),\n    required: true,\n  },\n  disabled: Boolean,\n} as const)\n\nexport type TeleportProps = ExtractPropTypes<typeof teleportProps>\nexport type TeleportPropsPublic = __ExtractPublicPropTypes<typeof teleportProps>\nexport type TeleportInstance = InstanceType<typeof Teleport> & unknown\n","export const UPDATE_MODEL_EVENT = 'update:modelValue'\nexport const CHANGE_EVENT = 'change'\nexport const INPUT_EVENT = 'input'\n","import { withInstall } from '@element-plus/utils'\nimport Teleport from './src/teleport.vue'\n\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nexport const ElTeleport: SFCWithInstall<typeof Teleport> = withInstall(Teleport)\n\nexport default ElTeleport\n\nexport * from './src/teleport'\n","import type { Arrayable } from '@element-plus/utils'\nimport type { InjectionKey, Ref } from 'vue'\nimport type { TooltipTriggerType } from './trigger'\n\nexport type ElTooltipInjectionContext = {\n  controlled: Ref<boolean>\n  id: Ref<string>\n  open: Ref<boolean>\n  trigger: Ref<Arrayable<TooltipTriggerType>>\n  onOpen: (e?: Event) => void\n  onClose: (e?: Event) => void\n  onToggle: (e: Event) => void\n  onShow: () => void\n  onHide: () => void\n  onBeforeShow: () => void\n  onBeforeHide: () => void\n  updatePopper: () => void\n}\n\nexport const TOOLTIP_INJECTION_KEY: InjectionKey<ElTooltipInjectionContext> =\n  Symbol('elTooltip')\n","import { buildProps, definePropType } from '@element-plus/utils'\nimport { popperTriggerProps } from '@element-plus/components/popper'\nimport { EVENT_CODE } from '@element-plus/constants'\n\nimport type { Arrayable } from '@element-plus/utils'\nimport type { ExtractPropTypes, __ExtractPublicPropTypes } from 'vue'\n\nexport type TooltipTriggerType = 'hover' | 'focus' | 'click' | 'contextmenu'\n\nexport const useTooltipTriggerProps = buildProps({\n  ...popperTriggerProps,\n  /**\n   * @description whether Tooltip is disabled\n   */\n  disabled: Boolean,\n  /**\n   * @description How should the tooltip be triggered (to show)\n   */\n  trigger: {\n    type: definePropType<Arrayable<TooltipTriggerType>>([String, Array]),\n    default: 'hover',\n  },\n  /**\n   * @description When you click the mouse to focus on the trigger element, you can define a set of keyboard codes to control the display of tooltip through the keyboard\n   */\n  triggerKeys: {\n    type: definePropType<string[]>(Array),\n    default: () => [EVENT_CODE.enter, EVENT_CODE.numpadEnter, EVENT_CODE.space],\n  },\n  /**\n   * @description when triggering tooltips through hover, whether to focus the trigger element, which improves accessibility\n   */\n  focusOnTarget: Boolean,\n} as const)\n\nexport type ElTooltipTriggerProps = ExtractPropTypes<\n  typeof useTooltipTriggerProps\n>\n\nexport type ElTooltipTriggerPropsPublic = __ExtractPublicPropTypes<\n  typeof useTooltipTriggerProps\n>\n","import { buildProps } from '@element-plus/utils'\nimport { createModelToggleComposable } from '@element-plus/hooks'\nimport { popperArrowProps, popperProps } from '@element-plus/components/popper'\nimport { useTooltipContentProps } from './content'\nimport { useTooltipTriggerProps } from './trigger'\n\nimport type Tooltip from './tooltip.vue'\nimport type { ExtractPropTypes, __ExtractPublicPropTypes } from 'vue'\n\nexport const {\n  useModelToggleProps: useTooltipModelToggleProps,\n  useModelToggleEmits: useTooltipModelToggleEmits,\n  useModelToggle: useTooltipModelToggle,\n} = createModelToggleComposable('visible' as const)\n\nexport const useTooltipProps = buildProps({\n  ...popperProps,\n  ...useTooltipModelToggleProps,\n  ...useTooltipContentProps,\n  ...useTooltipTriggerProps,\n  ...popperArrowProps,\n  /**\n   * @description whether the tooltip content has an arrow\n   */\n  showArrow: {\n    type: Boolean,\n    default: true,\n  },\n})\n\nexport const tooltipEmits = [\n  ...useTooltipModelToggleEmits,\n  'before-show',\n  'before-hide',\n  'show',\n  'hide',\n  'open',\n  'close',\n]\n\nexport type ElTooltipProps = ExtractPropTypes<typeof useTooltipProps>\nexport type ElTooltipPropsPublic = __ExtractPublicPropTypes<\n  typeof useTooltipProps\n>\n\nexport type TooltipInstance = InstanceType<typeof Tooltip> & unknown\n","import { unref } from 'vue'\nimport { isArray } from '@element-plus/utils'\n\nimport type { Arrayable } from '@element-plus/utils'\nimport type { Ref } from 'vue'\nimport type { TooltipTriggerType } from './trigger'\n\nexport const isTriggerType = (\n  trigger: Arrayable<TooltipTriggerType>,\n  type: TooltipTriggerType\n) => {\n  if (isArray(trigger)) {\n    return trigger.includes(type)\n  }\n  return trigger === type\n}\n\nexport const whenTrigger = (\n  trigger: Ref<Arrayable<TooltipTriggerType>>,\n  type: TooltipTriggerType,\n  handler: (e: Event) => void\n) => {\n  return (e: Event) => {\n    isTriggerType(unref(trigger), type) && handler(e)\n  }\n}\n","<template>\n  <el-popper-trigger\n    :id=\"id\"\n    :virtual-ref=\"virtualRef\"\n    :open=\"open\"\n    :virtual-triggering=\"virtualTriggering\"\n    :class=\"ns.e('trigger')\"\n    @blur=\"onBlur\"\n    @click=\"onClick\"\n    @contextmenu=\"onContextMenu\"\n    @focus=\"onFocus\"\n    @mouseenter=\"onMouseenter\"\n    @mouseleave=\"onMouseleave\"\n    @keydown=\"onKeydown\"\n  >\n    <slot />\n  </el-popper-trigger>\n</template>\n\n<script lang=\"ts\" setup>\nimport { inject, nextTick, ref, toRef, unref } from 'vue'\nimport { ElPopperTrigger } from '@element-plus/components/popper'\nimport { composeEventHandlers, focusElement } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { TOOLTIP_INJECTION_KEY } from './constants'\nimport { useTooltipTriggerProps } from './trigger'\nimport { whenTrigger } from './utils'\n\nimport type { OnlyChildExpose } from '@element-plus/components/slot'\n\ndefineOptions({\n  name: 'ElTooltipTrigger',\n})\n\nconst props = defineProps(useTooltipTriggerProps)\n\nconst ns = useNamespace('tooltip')\nconst { controlled, id, open, onOpen, onClose, onToggle } = inject(\n  TOOLTIP_INJECTION_KEY,\n  undefined\n)!\n\nconst triggerRef = ref<OnlyChildExpose | null>(null)\n\nconst stopWhenControlledOrDisabled = () => {\n  if (unref(controlled) || props.disabled) {\n    return true\n  }\n}\nconst trigger = toRef(props, 'trigger')\nconst onMouseenter = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  whenTrigger(trigger, 'hover', (e) => {\n    onOpen(e)\n\n    if (props.focusOnTarget && e.target) {\n      nextTick(() => {\n        focusElement(e.target as HTMLElement, { preventScroll: true })\n      })\n    }\n  })\n)\nconst onMouseleave = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  whenTrigger(trigger, 'hover', onClose)\n)\nconst onClick = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  whenTrigger(trigger, 'click', (e) => {\n    // distinguish left click\n    if ((e as MouseEvent).button === 0) {\n      onToggle(e)\n    }\n  })\n)\n\nconst onFocus = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  whenTrigger(trigger, 'focus', onOpen)\n)\n\nconst onBlur = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  whenTrigger(trigger, 'focus', onClose)\n)\n\nconst onContextMenu = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  whenTrigger(trigger, 'contextmenu', (e: Event) => {\n    e.preventDefault()\n    onToggle(e)\n  })\n)\n\nconst onKeydown = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  (e: KeyboardEvent) => {\n    const { code } = e\n    if (props.triggerKeys.includes(code)) {\n      e.preventDefault()\n      onToggle(e)\n    }\n  }\n)\n\ndefineExpose({\n  /**\n   * @description trigger element\n   */\n  triggerRef,\n})\n</script>\n","<template>\n  <el-teleport :disabled=\"!teleported\" :to=\"appendTo\">\n    <transition\n      v-if=\"shouldRender || !ariaHidden\"\n      :name=\"transitionClass\"\n      :appear=\"!persistentRef\"\n      @after-leave=\"onTransitionLeave\"\n      @before-enter=\"onBeforeEnter\"\n      @after-enter=\"onAfterShow\"\n      @before-leave=\"onBeforeLeave\"\n    >\n      <el-popper-content\n        v-show=\"shouldShow\"\n        :id=\"id\"\n        ref=\"contentRef\"\n        v-bind=\"$attrs\"\n        :aria-label=\"ariaLabel\"\n        :aria-hidden=\"ariaHidden\"\n        :boundaries-padding=\"boundariesPadding\"\n        :fallback-placements=\"fallbackPlacements\"\n        :gpu-acceleration=\"gpuAcceleration\"\n        :offset=\"offset\"\n        :placement=\"placement\"\n        :popper-options=\"popperOptions\"\n        :arrow-offset=\"arrowOffset\"\n        :strategy=\"strategy\"\n        :effect=\"effect\"\n        :enterable=\"enterable\"\n        :pure=\"pure\"\n        :popper-class=\"popperClass\"\n        :popper-style=\"[popperStyle!, contentStyle]\"\n        :reference-el=\"referenceEl\"\n        :trigger-target-el=\"triggerTargetEl\"\n        :visible=\"shouldShow\"\n        :z-index=\"zIndex\"\n        @mouseenter=\"onContentEnter\"\n        @mouseleave=\"onContentLeave\"\n        @blur=\"onBlur\"\n        @close=\"onClose\"\n      >\n        <slot />\n      </el-popper-content>\n    </transition>\n  </el-teleport>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, inject, onBeforeUnmount, ref, unref, watch } from 'vue'\nimport { computedEager, onClickOutside } from '@vueuse/core'\nimport { useNamespace, usePopperContainerId } from '@element-plus/hooks'\nimport {\n  castArray,\n  composeEventHandlers,\n  focusElement,\n} from '@element-plus/utils'\nimport { ElPopperContent } from '@element-plus/components/popper'\nimport ElTeleport from '@element-plus/components/teleport'\nimport { TOOLTIP_INJECTION_KEY } from './constants'\nimport { useTooltipContentProps } from './content'\n\nimport type { PopperContentInstance } from '@element-plus/components/popper'\n\ndefineOptions({\n  name: 'ElTooltipContent',\n  inheritAttrs: false,\n})\n\nconst props = defineProps(useTooltipContentProps)\n\nconst { selector } = usePopperContainerId()\nconst ns = useNamespace('tooltip')\n\nconst contentRef = ref<PopperContentInstance>()\nconst popperContentRef = computedEager(() => contentRef.value?.popperContentRef)\nlet stopHandle: ReturnType<typeof onClickOutside>\nconst {\n  controlled,\n  id,\n  open,\n  trigger,\n  onClose,\n  onOpen,\n  onShow,\n  onHide,\n  onBeforeShow,\n  onBeforeHide,\n} = inject(TOOLTIP_INJECTION_KEY, undefined)!\nconst transitionClass = computed(() => {\n  return props.transition || `${ns.namespace.value}-fade-in-linear`\n})\nconst persistentRef = computed(() => {\n  // For testing, we would always want the content to be rendered\n  // to the DOM, so we need to return true here.\n  if (process.env.NODE_ENV === 'test') {\n    if (!process.env.RUN_TEST_WITH_PERSISTENT) {\n      return true\n    }\n  }\n  return props.persistent\n})\n\nonBeforeUnmount(() => {\n  stopHandle?.()\n})\n\nconst shouldRender = computed(() => {\n  return unref(persistentRef) ? true : unref(open)\n})\n\nconst shouldShow = computed(() => {\n  return props.disabled ? false : unref(open)\n})\n\nconst appendTo = computed(() => {\n  return props.appendTo || selector.value\n})\n\nconst contentStyle = computed(() => props.style ?? {})\n\nconst ariaHidden = ref(true)\n\nconst onTransitionLeave = () => {\n  onHide()\n  isFocusInsideContent() && focusElement(document.body, { preventScroll: true })\n  ariaHidden.value = true\n}\n\nconst stopWhenControlled = () => {\n  if (unref(controlled)) return true\n}\n\nconst onContentEnter = composeEventHandlers(stopWhenControlled, () => {\n  if (props.enterable && unref(trigger) === 'hover') {\n    onOpen()\n  }\n})\n\nconst onContentLeave = composeEventHandlers(stopWhenControlled, () => {\n  if (unref(trigger) === 'hover') {\n    onClose()\n  }\n})\n\nconst onBeforeEnter = () => {\n  contentRef.value?.updatePopper?.()\n  onBeforeShow?.()\n}\n\nconst onBeforeLeave = () => {\n  onBeforeHide?.()\n}\n\nconst onAfterShow = () => {\n  onShow()\n}\n\nconst onBlur = () => {\n  if (!props.virtualTriggering) {\n    onClose()\n  }\n}\n\nconst isFocusInsideContent = (event?: FocusEvent) => {\n  const popperContent: HTMLElement | undefined =\n    contentRef.value?.popperContentRef\n  const activeElement = (event?.relatedTarget as Node) || document.activeElement\n\n  return popperContent?.contains(activeElement)\n}\n\nwatch(\n  () => unref(open),\n  (val) => {\n    if (!val) {\n      stopHandle?.()\n    } else {\n      ariaHidden.value = false\n      stopHandle = onClickOutside(popperContentRef, () => {\n        if (unref(controlled)) return\n        const needClose = castArray(unref(trigger)).every((item) => {\n          return item !== 'hover' && item !== 'focus'\n        })\n        if (needClose) {\n          onClose()\n        }\n      })\n    }\n  },\n  {\n    flush: 'post',\n  }\n)\n\nwatch(\n  () => props.content,\n  () => {\n    contentRef.value?.updatePopper?.()\n  }\n)\n\ndefineExpose({\n  /**\n   * @description el-popper-content component instance\n   */\n  contentRef,\n  /**\n   * @description validate current focus event is trigger inside el-popper-content\n   */\n  isFocusInsideContent,\n})\n</script>\n","<template>\n  <el-popper ref=\"popperRef\" :role=\"role\">\n    <el-tooltip-trigger\n      :disabled=\"disabled\"\n      :trigger=\"trigger\"\n      :trigger-keys=\"triggerKeys\"\n      :virtual-ref=\"virtualRef\"\n      :virtual-triggering=\"virtualTriggering\"\n      :focus-on-target=\"focusOnTarget\"\n    >\n      <slot v-if=\"$slots.default\" />\n    </el-tooltip-trigger>\n    <el-tooltip-content\n      ref=\"contentRef\"\n      :aria-label=\"ariaLabel\"\n      :boundaries-padding=\"boundariesPadding\"\n      :content=\"content\"\n      :disabled=\"disabled\"\n      :effect=\"effect\"\n      :enterable=\"enterable\"\n      :fallback-placements=\"fallbackPlacements\"\n      :hide-after=\"hideAfter\"\n      :gpu-acceleration=\"gpuAcceleration\"\n      :offset=\"offset\"\n      :persistent=\"persistent\"\n      :popper-class=\"kls\"\n      :popper-style=\"popperStyle\"\n      :placement=\"placement\"\n      :popper-options=\"popperOptions\"\n      :arrow-offset=\"arrowOffset\"\n      :pure=\"pure\"\n      :raw-content=\"rawContent\"\n      :reference-el=\"referenceEl\"\n      :trigger-target-el=\"triggerTargetEl\"\n      :show-after=\"showAfter\"\n      :strategy=\"strategy\"\n      :teleported=\"teleported\"\n      :transition=\"transition\"\n      :virtual-triggering=\"virtualTriggering\"\n      :z-index=\"zIndex\"\n      :append-to=\"appendTo\"\n    >\n      <slot name=\"content\">\n        <span v-if=\"rawContent\" v-html=\"content\" />\n        <span v-else>{{ content }}</span>\n      </slot>\n      <el-popper-arrow v-if=\"showArrow\" />\n    </el-tooltip-content>\n  </el-popper>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  onDeactivated,\n  provide,\n  readonly,\n  ref,\n  toRef,\n  unref,\n  watch,\n} from 'vue'\nimport { ElPopper, ElPopperArrow } from '@element-plus/components/popper'\nimport { isBoolean } from '@element-plus/utils'\nimport {\n  useDelayedToggle,\n  useId,\n  useNamespace,\n  usePopperContainer,\n} from '@element-plus/hooks'\nimport { TOOLTIP_INJECTION_KEY } from './constants'\nimport { tooltipEmits, useTooltipModelToggle, useTooltipProps } from './tooltip'\nimport ElTooltipTrigger from './trigger.vue'\nimport ElTooltipContent from './content.vue'\n\nimport type { TooltipContentInstance } from './content'\nimport type { PopperInstance } from '@element-plus/components/popper'\n\ndefineOptions({\n  name: 'ElTooltip',\n})\n\nconst props = defineProps(useTooltipProps)\nconst emit = defineEmits(tooltipEmits)\n\nusePopperContainer()\n\nconst ns = useNamespace('tooltip')\nconst id = useId()\nconst popperRef = ref<PopperInstance>()\nconst contentRef = ref<TooltipContentInstance>()\n\nconst updatePopper = () => {\n  const popperComponent = unref(popperRef)\n  if (popperComponent) {\n    popperComponent.popperInstanceRef?.update()\n  }\n}\nconst open = ref(false)\nconst toggleReason = ref<Event>()\n\nconst { show, hide, hasUpdateHandler } = useTooltipModelToggle({\n  indicator: open,\n  toggleReason,\n})\n\nconst { onOpen, onClose } = useDelayedToggle({\n  showAfter: toRef(props, 'showAfter'),\n  hideAfter: toRef(props, 'hideAfter'),\n  autoClose: toRef(props, 'autoClose'),\n  open: show,\n  close: hide,\n})\n\nconst controlled = computed(\n  () => isBoolean(props.visible) && !hasUpdateHandler.value\n)\n\nconst kls = computed(() => {\n  return [ns.b(), props.popperClass!]\n})\n\nprovide(TOOLTIP_INJECTION_KEY, {\n  controlled,\n  id,\n  open: readonly(open),\n  trigger: toRef(props, 'trigger'),\n  onOpen,\n  onClose,\n  onToggle: (event?: Event) => {\n    if (unref(open)) {\n      onClose(event)\n    } else {\n      onOpen(event)\n    }\n  },\n  onShow: () => {\n    emit('show', toggleReason.value)\n  },\n  onHide: () => {\n    emit('hide', toggleReason.value)\n  },\n  onBeforeShow: () => {\n    emit('before-show', toggleReason.value)\n  },\n  onBeforeHide: () => {\n    emit('before-hide', toggleReason.value)\n  },\n  updatePopper,\n})\n\nwatch(\n  () => props.disabled,\n  (disabled) => {\n    if (disabled && open.value) {\n      open.value = false\n    }\n  }\n)\n\nconst isFocusInsideContent = (event?: FocusEvent) => {\n  return contentRef.value?.isFocusInsideContent(event)\n}\n\nonDeactivated(() => open.value && hide())\n\ndefineExpose({\n  /**\n   * @description el-popper component instance\n   */\n  popperRef,\n  /**\n   * @description el-tooltip-content component instance\n   */\n  contentRef,\n  /**\n   * @description validate current focus event is trigger inside el-tooltip-content\n   */\n  isFocusInsideContent,\n  /**\n   * @description update el-popper component instance\n   */\n  updatePopper,\n  /**\n   * @description expose onOpen function to mange el-tooltip open state\n   */\n  onOpen,\n  /**\n   * @description expose onClose function to manage el-tooltip close state\n   */\n  onClose,\n  /**\n   * @description expose hide function\n   */\n  hide,\n})\n</script>\n","import { withInstall } from '@element-plus/utils'\nimport Tooltip from './src/tooltip.vue'\n\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nexport const ElTooltip: SFCWithInstall<typeof Tooltip> = withInstall(Tooltip)\nexport * from './src/tooltip'\nexport * from './src/trigger'\nexport * from './src/content'\nexport * from './src/constants'\nexport default ElTooltip\n"],"names":["EVENT_CODE","tab","enter","space","left","up","right","down","esc","delete","backspace","numpadEnter","pageUp","pageDown","home","end","componentSizes","switchProps","buildProps","modelValue","type","Boolean","String","Number","default","disabled","loading","size","validator","isValidComponentSize","width","inlinePrompt","inactiveActionIcon","iconPropType","activeActionIcon","activeIcon","inactiveIcon","activeText","inactiveText","activeValue","inactiveValue","name","validateEvent","beforeChange","definePropType","Function","id","tabindex","useAriaProps","switchEmits","UPDATE_MODEL_EVENT","val","isBoolean","isString","isNumber","CHANGE_EVENT","INPUT_EVENT","COMPONENT_NAME","formItem","useFormItem","switchSize","useFormSize","ns","useNamespace","inputId","useFormItemInputId","props","formItemContext","switchDisabled","useFormDisabled","computed","isControlled","ref","input","core","switchKls","b","m","value","is","checked","labelLeftKls","e","em","labelRightKls","coreStyle","addUnit","watch","actualValue","includes","emit","_a","validate","call","catch","err","debugWarn","handleChange","nextTick","switchValue","shouldChange","isPromiseOrBool","isPromise","throwError","then","result","focus","_b","onMounted","expose","_ctx","_cache","openBlock","createElementBlock","class","normalizeClass","unref","onClick","withModifiers","createElementVNode","ref_key","ElSwitch","withInstall","Switch","tagSize","containerKls","hit","effect","closable","round","handleClose","event","handleClick","handleVNodeMounted","vnode","_c","component","subTree","bum","ElTag","Tag","tagProps","values","disableTransitions","color","tagEmits","close","evt","MouseEvent","click","getCell","target","closest","orderBy","array","sortKey","reverse","sortMethod","sortBy","isArray","length","getKey","index","flatMap","castArray","by","get","isObject","$value","compare","a","_d","_e","_f","i","len","key","map","sort","order","item","getColumnById","table","columnId","column","columns","forEach","getColumnByKey","columnKey","getColumnByCell","cell","namespace","matches","className","match","RegExp","getRowIdentity","row","rowKey","Error","split","current","element","isFunction","getKeysMap","flatten","childrenKey","data","arrayMap","children","Object","assign","mergeOptions","defaults","config","options","hasOwn","isUndefined","parseWidth","parseInt","isNaN","parseMinWidth","minWidth","parseHeight","height","test","compose","funcs","arg","reduce","args","toggleRowStatus","statusArr","newVal","tableTreeProps","selectable","rowIndex","_rowIndex","changed","getIndex","indexOf","findIndex","included","isRowSelectable","toggleStatus","push","splice","getChildrenCount","row2","count","checkStrictly","childChanged","walkTreeNode","root","cb","lazyKey","lazy","isNil","_walker","parent","level","children2","getTableOverflowTooltipProps","innerText","popperOptions","strategy","tooltipFormatterContent","tooltipFormatter","cellValue","getProp","property","isVNode","slotContent","content","removePopper","createTablePopper","popperContent","trigger","tableOverflowTooltipProps","mergedProps","comp","vm","merge","slots","parentNode","refs","tableWrapper","dataset","prefix","createVNode","ElTooltip","virtualTriggering","virtualRef","appendTo","placement","transition","offset","hideAfter","appContext","container","document","createElement","render","exposed","onOpen","scrollContainer","querySelector","_a2","onClose","currentRemovePopper","removeEventListener","addEventListener","getCurrentColumns","getColSpan","colSpan","isFixedColumn","fixed","store","realColumns","start","after","states","curColumns","preColumns","slice","fixedLayout","fixedLeafColumnsLength","rightFixedLeafColumnsLength","direction","getFixedColumnsClass","classes","isLeft","getOffset","isNull","realWidth","getFixedColumnOffset","styles","ensurePosition","style","useExpand","watcherData","instance","getCurrentInstance","defaultExpandAll","expandRows","updateExpandRows","expandRowsMap","prev","rowId","rowInfo","toggleRowExpansion","expanded","setExpandRowKeys","rowKeys","assertRowKey","keysMap","cur","info","isRowExpanded","expandMap","useCurrent","_currentRowKey","currentRow","setCurrentRowKey","setCurrentRowByKey","restoreCurrentRowKey","_currentRow","find","updateCurrentRow","oldCurrentRow","updateCurrentRowData","currentRowKey","useTree","expandRowKeys","treeData","indent","lazyTreeNodeMap","lazyColumnIdentifier","childrenColumnName","normalizedData","normalize","normalizedLazyNode","keys","res","parentId","updateTreeData","ifChangeExpandRowKeys","ifExpandAll","nested","normalizedLazyNode_","newTreeData","oldTreeData","rootLazyRowKeys","getExpanded","oldValue","newValue","loaded","lazyKeys","lazyNodeChildren","updateTableScrollY","updateTreeExpandKeys","isUseLazy","toggleTreeExpansion","oldExpanded","loadData","loadOrToggle","treeNode","load","TypeError","updateKeyChildren","lazy2","sortData","sortingColumn","sortable","sortProp","sortOrder","doFlattenColumns","apply","useWatcher","tableSize","toRefs","proxy","$props","_data","isComplex","_columns","originColumns","fixedColumns","rightFixedColumns","leafColumns","fixedLeafColumns","rightFixedLeafColumns","updateOrderFns","leafColumnsLength","isAllSelected","selection","reserveSelection","selectOnIndeterminate","filters","filteredData","hoverRow","selectedMap","state","scheduleLayout","needUpdateFixed","tableLayout","tableHeaderRef","updateFixedColumnStyle","deep","updateChildFixed","childColumn","updateColumns","filter","selectColumn","selectColFixLeft","selectColumnIndex","unshift","notFixedColumns","Array","from","concat","leafColumns2","fixedLeafColumns2","rightFixedLeafColumns2","needUpdateColumns","immediate","doLayout","debouncedUpdateLayout","isSelected","clearSelection","oldSelection","cleanSelection","deleted","dataMap","newSelection","getSelectionRows","toggleRowSelection","selected","emitChange","ignoreSelectable","treeProps","_toggleAllSelection","selectionChanged","childrenCount","rowKey2","updateAllSelected","selectedCount","checkSelectedStatus","data2","_a3","isAllSelected_","childKey","updateFilters","filters_","col","updateSort","prop","execFilter","sourceData","filterMethod","some","execSort","execQuery","ignore","clearFilter","columnKeys","panels","filterPanels","columns_","filteredValue","commit","silent","multi","clearSort","expandStates","treeStates","currentData","setExpandRowKeysAdapter","toggleRowExpansionAdapter","hasExpandColumn","toggleAllSelection","replaceColumn","sortColumn","no","getColumnIndex","pre","useStore","watcher","mutations","setData","dataInstanceChanged","$ready","insertColumn","updateColumnOrder","newColumns","newColumnIndex","removeColumn","updateFnIndex","init","column2","changeSortCondition","columnValue","propValue","orderValue","filterChange","_states","newFilters","rowSelectedChanged","setHoverRow","setCurrentRow","mutations2","layout","updateScrollY","InitialStateMap","createStore","debounce","handleValue","getArrKeysValue","proxyTableProps","propsKey","storeKey","keyList","k","TableLayout","constructor","observers","fit","showHeader","scrollX","scrollY","bodyWidth","fixedWidth","rightFixedWidth","gutterWidth","isRef","scrollBarRef","el","wrapRef","prevScrollY","scrollHeight","clientHeight","setHeight","isClient","updateElsHeight","setMaxHeight","getFlattenColumns","flattenColumns","isColumnGroup","this","notifyObservers","headerDisplayNone","elm","headerChild","tagName","getComputedStyle","display","parentElement","updateColumnsWidth","clientWidth","bodyMinWidth","flexColumns","totalFlexWidth","allColumnsWidth","flexWidthPerPixel","noneFirstWidth","flexWidth","Math","floor","max","resizeState","addObserver","observer","removeObserver","onColumnsChange","onScrollableChange","CheckboxGroup","ElCheckboxGroup","ElCheckbox","_sfc_main","defineComponent","components","ElScrollbar","ElIcon","ArrowDown","ArrowUp","directives","ClickOutside","upDataColumn","useTooltipContentProps","setup","t","useLocale","tooltipVisible","tooltip","filterClassName","filterValue","set","isPropAbsent","multiple","filterMultiple","isActive","hidden","showFilterPanel","stopPropagation","hideFilterPanel","handleConfirm","confirmFilter","handleReset","handleSelect","_filterValue","filteredValue2","popperPaneRef","popperRef","contentRef","resolveComponent","_component_el_tooltip","_directive_click_outside","resolveDirective","createBlock","visible","teleported","pure","persistent","withCtx","_component_el_scrollbar","_component_el_checkbox_group","$event","Fragment","renderList","_component_el_checkbox","createTextVNode","toDisplayString","text","_","label","withDirectives","_component_el_icon","$slots","filterOpened","_component_arrow_up","_component_arrow_down","useLayoutObserver","onBeforeMount","onUpdated","onUnmounted","cols","querySelectorAll","columnsMap","j","getAttribute","setAttribute","ths","th","TABLE_INJECTION_KEY","Symbol","useEvent","inject","handleFilterClick","handleHeaderClick","handleSortClick","filterable","handleHeaderContextMenu","draggingColumn","dragging","dragState","handleMouseDown","border","tableEl","tableLeft","getBoundingClientRect","columnEl","columnRect","minLeft","addClass","startMouseLeft","clientX","startLeft","startColumnLeft","resizeProxy","onselectstart","ondragstart","handleMouseMove2","event2","deltaLeft","proxyLeft","handleMouseUp","finalLeft","columnWidth","requestAnimationFrame","body","cursor","setTimeout","removeClass","handleMouseMove","isElement","resizable","rect","bodyStyle","isLastTh","lastElementChild","allowDarg","allowDragLastColumn","hasClass","handleMouseOut","toggleOrder","sortOrders","givenOrder","clickTarget","currentTarget","str","useStyle","getHeaderRowStyle","headerRowStyle","getHeaderRowClass","headerRowClassName","join","getHeaderCellStyle","columnIndex","headerCellStyles","headerCellStyle","fixedStyle","getHeaderCellClass","fixedClasses","headerAlign","labelClassName","headerCellClassName","getAllColumns","convertToRows","maxLevel","traverse","subColumn","rows","allColumns","rowSpan","isSubColumn","useUtils","columnRows","isGroup","TableHeader","required","defaultSort","appendFilterPanelTo","isTableLayoutAuto","saveIndexSelection","reactive","Map","theadRef","delayId","replace","clear","onBeforeUnmount","clearTimeout","$parent","h","subColumns","cellIndex","_class","colspan","rowspan","classList","contains","onContextmenu","onMousedown","onMousemove","onMouseout","renderHeader","$index","_self","FilterPanel","filterPlacement","filter-icon","renderFilterIcon","isGreaterThan","epsilon","useEvents","tooltipContent","tooltipTrigger","handleEvent","handleDoubleClick","handleContextMenu","handleMouseEnter","handleMouseLeave","getPadding","window","paddingLeft","paddingRight","paddingTop","paddingBottom","top","bottom","toggleRowClassByCell","toggle","node","nextSibling","nodeName","handleCellMouseEnter","tooltipOptions","_g","_h","hoverState","cellChild","childNodes","range","createRange","setStart","setEnd","rangeWidth","rangeHeight","cellChildWidth","cellChildHeight","horizontalPadding","verticalPadding","scrollWidth","textContent","handleCellMouseLeave","oldHoverState","useStyles","getRowStyle","rowStyle","getRowClass","highlightCurrentRow","stripe","rowClassName","getCellStyle","cellStyle","cellStyles","getCellClass","align","cellClassName","getSpan","fn","spanMethod","getColspanRealWidth","widthArr","acc","useRender","firstDefaultColumnIndex","getKeyOfRow","rowRender","treeRowData","tooltipEffect","rowClasses","displayStyle","onDblclick","onMouseenter","onMouseleave","columnData","context","noLazyChildren","baseKey","patchKey","rawColumnKey","mergedTooltipOptions","showOverflowTooltip","TdWrapper","cellChildren","_cellIndex","renderCell","wrappedRowRender","tr","renderExpanded","console","error","preserveExpandedContent","tmp","parent2","innerTreeRowData","nodes2","nodes","defaultProps","highlight","TableBody","hoveredCellList","oldVal","rowNum","control","indexes","_b2","preChildNodes","rAF","oldRow","newRow","tabIndex","useMapState","leftFixedLeafCount","rightFixedLeafCount","columnsCount","leftFixedCount","rightFixedCount","getCellClasses","columns2","getCellStyles","TableFooter","summaryMethod","sumText","sums","precisions","notNumber","decimal","precision","curr","parseFloat","toFixed","min","isHidden","resizeProxyVisible","setDragVisible","headerHeight","scrollbarViewStyle","verticalAlign","tableWidth","tableScrollHeight","bodyScrollHeight","headerScrollHeight","footerScrollHeight","appendScrollHeight","watchEffect","maxHeight","handleHeaderFooterMousewheel","_event","pixelX","pixelY","abs","bodyWrapper","scrollLeft","shouldUpdateHeight","tableBodyStyles","syncPosition","bindEvents","tableHeader","headerWrapper","flexible","offsetWidth","offsetHeight","setScrollClassByEl","startsWith","setScrollClass","hasScrollClass","scrollingNoneClass","footerWrapper","maxScrollLeftPosition","useEventListener","passive","useResizeObserver","resizeListener","update","shouldUpdateLayout","oldWidth","oldHeight","oldHeaderHeight","$el","appendWrapper","bodyWidth_","emptyBlockStyle","scrollbarStyle","useKeyRender","initWatchDom","columnsWrapper","childList","subtree","MutationObserver","observe","disconnect","useSizeProp","showSummary","emptyText","hasChildren","scrollbarAlwaysOn","scrollbarTabindex","nativeScrollbar","hColgroup","isAuto","every","getPropsData","propsData","useScrollbar","scrollTo","yCoord","scrollbar","setScrollPosition","position","setScrollTop","setScrollLeft","tableIdSeed","Mousewheel","emits","provide","isEmpty","tableId","computedSumText","computedEmptyText","cancel","_sfc_render","$setup","$data","$options","_component_hColgroup","_component_table_header","_component_table_body","_component_table_footer","_directive_mousewheel","normalizeStyle","renderSlot","cellpadding","cellspacing","onSetDragVisible","createCommentVNode","always","native","onScroll","$emit","append","Table","_export_sfc","defaultClassNames","expand","cellStarts","getDefaultClassName","cellForced","isDisabled","indeterminate","ariaLabel","onChange","renderExpand","callback","ArrowRight","defaultRenderCell","formatter","toString","treeCellPrefix","createPlaceholder","ele","expandClasses","icon","Loading","getAllAliases","aliases","owner","props_","registerComplexWatchers","realMinWidth","allAliases","columnConfig","registerNormalWatchers","parentProps","realAlign","realHeaderAlign","columnOrTableParent","vParent","hasTreeColumn","treeDataValue","setColumnWidth","setColumnForcedProps","source","forceClass","checkSubColumn","check","child","setColumnRenders","scope","originRenderCell","vnodes","v","Comment","firstUserColumnIndex","shouldCreatePlaceholder","props2","getColumnElIndex","prototype","columnIdSeed","ElTableColumn","basicProps","sortProps","selectProps","filterProps","chains","hiddenColumns","renderDefault","childNode","shapeFlag","vnode2","patchFlag","ElTable","TableColumn","ElTableColumn$1","withNoopInstall","MINIMUM_INPUT_WIDTH","BORDER_HORIZONTAL_WIDTH","useDelayedToggleProps","popperContentProps","teleportProps","to","rawContent","tabsRootContextKey","tabBarProps","tabs","mutable","tabRefs","rootTabs","barRef","barStyle","getBarStyle","tabSize","sizeName","tabPosition","sizeDir","paneName","active","capitalize","tabStyles","transform","tabObservers","observerTabs","stop","barObserver","tabNavProps","panes","currentName","editable","stretch","tabNavEmits","tabClick","tabName","ev","Event","tabRemove","TabNav","visibility","useDocumentVisibility","focused","useWindowFocus","navScroll$","nav$","el$","tabRefsMap","tabBarRef","scrollable","navOffset","isFocus","focusable","tracker","shallowRef","isHorizontal","navStyle","dir","containerSize","currentOffset","newOffset","scrollNext","navSize","scrollToActiveTab","nav","activeTab","navScroll","activeTabBounding","navScrollBounding","maxOffset","next","changeTab","step","code","tabList","currentIndex","nextIndex","preventScroll","setFocus","removeFocus","setRefs","focusActiveTab","visibility2","focused2","tabListRef","scheduleRender","triggerRef","scrollBtn","scrollPrev","ArrowLeft","pane","uid","isClosable","btnClose","Close","tabLabelContent","onFocus","onBlur","TabBar","tabsProps","addable","beforeLeave","isPaneName","tabsEmits","tabChange","edit","action","tabAdd","Tabs","isVertical","addChild","registerPane","removeChild","unregisterPane","useOrderedChildren","setCurrentName","canLeave","Promise","isFocusInsidePane","handleTabClick","swapChildren","actualFirstChild","firstChild","before","tabNavRef","omit","newButton","handleTabAdd","addSlot","tabNav","handleTabRemove","header","PanesSorter","$stable","tabPaneProps","useSlots","tabsRoot","paneRef","eagerComputed","shouldBeRender","activeElement","getVnode","ElTabs","TabPane","ElTabPane","ElTeleport","Teleport","TOOLTIP_INJECTION_KEY","useTooltipTriggerProps","popperTriggerProps","triggerKeys","focusOnTarget","useModelToggleProps","useTooltipModelToggleProps","useModelToggleEmits","useTooltipModelToggleEmits","useModelToggle","useTooltipModelToggle","createModelToggleComposable","useTooltipProps","popperProps","popperArrowProps","showArrow","tooltipEmits","isTriggerType","whenTrigger","handler","controlled","open","onToggle","stopWhenControlledOrDisabled","toRef","composeEventHandlers","focusElement","button","onContextMenu","preventDefault","onKeydown","ElPopperTrigger","ElTooltipTrigger","inheritAttrs","selector","usePopperContainerId","popperContentRef","computedEager","stopHandle","onShow","onHide","onBeforeShow","onBeforeHide","transitionClass","persistentRef","shouldRender","shouldShow","contentStyle","ariaHidden","onTransitionLeave","isFocusInsideContent","stopWhenControlled","onContentEnter","enterable","onContentLeave","onBeforeEnter","updatePopper","onBeforeLeave","onAfterShow","relatedTarget","onClickOutside","needClose","flush","usePopperContainer","useId","popperComponent","popperInstanceRef","toggleReason","show","hide","hasUpdateHandler","indicator","useDelayedToggle","showAfter","autoClose","kls","popperClass","readonly","onDeactivated","ElPopper","role","ElTooltipContent","Tooltip"],"sourceRoot":""}