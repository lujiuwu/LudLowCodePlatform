{"version":3,"file":"js/chunk-element-plus-f45efc65.d2e90435.js","mappings":"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","sources":["webpack://lud/../../../packages/components/scrollbar/src/util.ts","webpack://lud/../../../packages/components/scrollbar/src/constants.ts","webpack://lud/../../../packages/components/scrollbar/src/thumb.ts","webpack://lud/../../../packages/components/scrollbar/src/thumb.vue","webpack://lud/../../../packages/components/scrollbar/src/bar.ts","webpack://lud/../../../packages/components/scrollbar/src/bar.vue","webpack://lud/../../../packages/components/scrollbar/src/scrollbar.vue","webpack://lud/../../../packages/components/scrollbar/index.ts","webpack://lud/../../../packages/components/scrollbar/src/scrollbar.ts","webpack://lud/../../../packages/components/row/src/constants.ts","webpack://lud/../../../packages/components/slot/src/only-child.tsx","webpack://lud/../../../packages/components/row/src/row.ts","webpack://lud/../../../packages/components/row/src/row.vue","webpack://lud/../../../packages/components/row/index.ts","webpack://lud/../../../packages/components/rate/src/rate.ts","webpack://lud/../../../packages/components/rate/src/rate.vue","webpack://lud/../../../packages/components/rate/index.ts","webpack://lud/../../../packages/components/select-v2/src/useProps.ts","webpack://lud/../../../packages/components/select/src/token.ts","webpack://lud/../../../packages/components/select/src/option.ts","webpack://lud/../../../packages/components/select/src/useOption.ts","webpack://lud/../../../packages/components/select/src/option.vue","webpack://lud/../../../packages/components/select/src/select-dropdown.vue","webpack://lud/../../../packages/components/select/src/useSelect.ts","webpack://lud/../../../packages/components/select/src/options.ts","webpack://lud/../../../packages/components/select/src/select.ts","webpack://lud/../../../packages/components/select/src/option-group.vue","webpack://lud/../../../packages/components/select/src/select.vue","webpack://lud/../../../packages/components/select/index.ts"],"sourcesContent":["import type { CSSProperties } from 'vue'\nimport type { ThumbProps } from './thumb'\n\nexport const GAP = 4 // top 2 + bottom 2 of bar instance\n\nexport const BAR_MAP = {\n  vertical: {\n    offset: 'offsetHeight',\n    scroll: 'scrollTop',\n    scrollSize: 'scrollHeight',\n    size: 'height',\n    key: 'vertical',\n    axis: 'Y',\n    client: 'clientY',\n    direction: 'top',\n  },\n  horizontal: {\n    offset: 'offsetWidth',\n    scroll: 'scrollLeft',\n    scrollSize: 'scrollWidth',\n    size: 'width',\n    key: 'horizontal',\n    axis: 'X',\n    client: 'clientX',\n    direction: 'left',\n  },\n} as const\n\nexport const renderThumbStyle = ({\n  move,\n  size,\n  bar,\n}: Pick<ThumbProps, 'move' | 'size'> & {\n  bar: typeof BAR_MAP[keyof typeof BAR_MAP]\n}): CSSProperties => ({\n  [bar.size]: size,\n  transform: `translate${bar.axis}(${move}%)`,\n})\n","import type { InjectionKey } from 'vue'\n\nexport interface ScrollbarContext {\n  scrollbarElement: HTMLDivElement\n  wrapElement: HTMLDivElement\n}\n\nexport const scrollbarContextKey: InjectionKey<ScrollbarContext> = Symbol(\n  'scrollbarContextKey'\n)\n","import { buildProps } from '@element-plus/utils'\n\nimport type { ExtractPropTypes, __ExtractPublicPropTypes } from 'vue'\nimport type Thumb from './thumb.vue'\n\nexport const thumbProps = buildProps({\n  vertical: Boolean,\n  size: String,\n  move: Number,\n  ratio: {\n    type: Number,\n    required: true,\n  },\n  always: Boolean,\n} as const)\nexport type ThumbProps = ExtractPropTypes<typeof thumbProps>\nexport type ThumbPropsPublic = __ExtractPublicPropTypes<typeof thumbProps>\n\nexport type ThumbInstance = InstanceType<typeof Thumb> & unknown\n","<template>\n  <transition :name=\"ns.b('fade')\">\n    <div\n      v-show=\"always || visible\"\n      ref=\"instance\"\n      :class=\"[ns.e('bar'), ns.is(bar.key)]\"\n      @mousedown=\"clickTrackHandler\"\n      @click.stop\n    >\n      <div\n        ref=\"thumb\"\n        :class=\"ns.e('thumb')\"\n        :style=\"thumbStyle\"\n        @mousedown=\"clickThumbHandler\"\n      />\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, inject, onBeforeUnmount, ref, toRef } from 'vue'\nimport { useEventListener } from '@vueuse/core'\nimport { isClient, throwError } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { scrollbarContextKey } from './constants'\nimport { BAR_MAP, renderThumbStyle } from './util'\nimport { thumbProps } from './thumb'\n\nconst COMPONENT_NAME = 'Thumb'\nconst props = defineProps(thumbProps)\n\nconst scrollbar = inject(scrollbarContextKey)\nconst ns = useNamespace('scrollbar')\n\nif (!scrollbar) throwError(COMPONENT_NAME, 'can not inject scrollbar context')\n\nconst instance = ref<HTMLDivElement>()\nconst thumb = ref<HTMLDivElement>()\n\nconst thumbState = ref<Partial<Record<'X' | 'Y', number>>>({})\nconst visible = ref(false)\n\nlet cursorDown = false\nlet cursorLeave = false\nlet baseScrollHeight = 0\nlet baseScrollWidth = 0\nlet originalOnSelectStart:\n  | ((this: GlobalEventHandlers, ev: Event) => any)\n  | null = isClient ? document.onselectstart : null\n\nconst bar = computed(() => BAR_MAP[props.vertical ? 'vertical' : 'horizontal'])\n\nconst thumbStyle = computed(() =>\n  renderThumbStyle({\n    size: props.size,\n    move: props.move,\n    bar: bar.value,\n  })\n)\n\nconst offsetRatio = computed(\n  () =>\n    // offsetRatioX = original width of thumb / current width of thumb / ratioX\n    // offsetRatioY = original height of thumb / current height of thumb / ratioY\n    // instance height = wrap height - GAP\n    instance.value![bar.value.offset] ** 2 /\n    scrollbar.wrapElement![bar.value.scrollSize] /\n    props.ratio /\n    thumb.value![bar.value.offset]\n)\n\nconst clickThumbHandler = (e: MouseEvent) => {\n  // prevent click event of middle and right button\n  e.stopPropagation()\n  if (e.ctrlKey || [1, 2].includes(e.button)) return\n\n  window.getSelection()?.removeAllRanges()\n  startDrag(e)\n\n  const el = e.currentTarget as HTMLDivElement\n  if (!el) return\n  thumbState.value[bar.value.axis] =\n    el[bar.value.offset] -\n    (e[bar.value.client] - el.getBoundingClientRect()[bar.value.direction])\n}\n\nconst clickTrackHandler = (e: MouseEvent) => {\n  if (!thumb.value || !instance.value || !scrollbar.wrapElement) return\n\n  const offset = Math.abs(\n    (e.target as HTMLElement).getBoundingClientRect()[bar.value.direction] -\n      e[bar.value.client]\n  )\n  const thumbHalf = thumb.value[bar.value.offset] / 2\n  const thumbPositionPercentage =\n    ((offset - thumbHalf) * 100 * offsetRatio.value) /\n    instance.value[bar.value.offset]\n\n  scrollbar.wrapElement[bar.value.scroll] =\n    (thumbPositionPercentage * scrollbar.wrapElement[bar.value.scrollSize]) /\n    100\n}\n\nconst startDrag = (e: MouseEvent) => {\n  e.stopImmediatePropagation()\n  cursorDown = true\n  baseScrollHeight = scrollbar.wrapElement.scrollHeight\n  baseScrollWidth = scrollbar.wrapElement.scrollWidth\n  document.addEventListener('mousemove', mouseMoveDocumentHandler)\n  document.addEventListener('mouseup', mouseUpDocumentHandler)\n  originalOnSelectStart = document.onselectstart\n  document.onselectstart = () => false\n}\n\nconst mouseMoveDocumentHandler = (e: MouseEvent) => {\n  if (!instance.value || !thumb.value) return\n  if (cursorDown === false) return\n\n  const prevPage = thumbState.value[bar.value.axis]\n  if (!prevPage) return\n\n  const offset =\n    (instance.value.getBoundingClientRect()[bar.value.direction] -\n      e[bar.value.client]) *\n    -1\n  const thumbClickPosition = thumb.value[bar.value.offset] - prevPage\n  const thumbPositionPercentage =\n    ((offset - thumbClickPosition) * 100 * offsetRatio.value) /\n    instance.value[bar.value.offset]\n\n  if (bar.value.scroll === 'scrollLeft') {\n    scrollbar.wrapElement[bar.value.scroll] =\n      (thumbPositionPercentage * baseScrollWidth) / 100\n  } else {\n    scrollbar.wrapElement[bar.value.scroll] =\n      (thumbPositionPercentage * baseScrollHeight) / 100\n  }\n}\n\nconst mouseUpDocumentHandler = () => {\n  cursorDown = false\n  thumbState.value[bar.value.axis] = 0\n  document.removeEventListener('mousemove', mouseMoveDocumentHandler)\n  document.removeEventListener('mouseup', mouseUpDocumentHandler)\n  restoreOnselectstart()\n  if (cursorLeave) visible.value = false\n}\n\nconst mouseMoveScrollbarHandler = () => {\n  cursorLeave = false\n  visible.value = !!props.size\n}\n\nconst mouseLeaveScrollbarHandler = () => {\n  cursorLeave = true\n  visible.value = cursorDown\n}\n\nonBeforeUnmount(() => {\n  restoreOnselectstart()\n  document.removeEventListener('mouseup', mouseUpDocumentHandler)\n})\n\nconst restoreOnselectstart = () => {\n  if (document.onselectstart !== originalOnSelectStart)\n    document.onselectstart = originalOnSelectStart\n}\n\nuseEventListener(\n  toRef(scrollbar, 'scrollbarElement'),\n  'mousemove',\n  mouseMoveScrollbarHandler\n)\nuseEventListener(\n  toRef(scrollbar, 'scrollbarElement'),\n  'mouseleave',\n  mouseLeaveScrollbarHandler\n)\n</script>\n","import { buildProps } from '@element-plus/utils'\n\nimport type { ExtractPropTypes, __ExtractPublicPropTypes } from 'vue'\nimport type Bar from './bar.vue'\n\nexport const barProps = buildProps({\n  always: {\n    type: Boolean,\n    default: true,\n  },\n  minSize: {\n    type: Number,\n    required: true,\n  },\n} as const)\nexport type BarProps = ExtractPropTypes<typeof barProps>\nexport type BarPropsPublic = __ExtractPublicPropTypes<typeof barProps>\n\nexport type BarInstance = InstanceType<typeof Bar> & unknown\n","<template>\n  <thumb :move=\"moveX\" :ratio=\"ratioX\" :size=\"sizeWidth\" :always=\"always\" />\n  <thumb\n    :move=\"moveY\"\n    :ratio=\"ratioY\"\n    :size=\"sizeHeight\"\n    vertical\n    :always=\"always\"\n  />\n</template>\n\n<script lang=\"ts\" setup>\nimport { inject, ref } from 'vue'\nimport { GAP } from './util'\nimport Thumb from './thumb.vue'\nimport { barProps } from './bar'\nimport { scrollbarContextKey } from './constants'\n\nconst props = defineProps(barProps)\n\nconst scrollbar = inject(scrollbarContextKey)\n\nconst moveX = ref(0)\nconst moveY = ref(0)\nconst sizeWidth = ref('')\nconst sizeHeight = ref('')\nconst ratioY = ref(1)\nconst ratioX = ref(1)\n\nconst handleScroll = (wrap: HTMLDivElement) => {\n  if (wrap) {\n    const offsetHeight = wrap.offsetHeight - GAP\n    const offsetWidth = wrap.offsetWidth - GAP\n\n    moveY.value = ((wrap.scrollTop * 100) / offsetHeight) * ratioY.value\n    moveX.value = ((wrap.scrollLeft * 100) / offsetWidth) * ratioX.value\n  }\n}\n\nconst update = () => {\n  const wrap = scrollbar?.wrapElement\n  if (!wrap) return\n  const offsetHeight = wrap.offsetHeight - GAP\n  const offsetWidth = wrap.offsetWidth - GAP\n\n  const originalHeight = offsetHeight ** 2 / wrap.scrollHeight\n  const originalWidth = offsetWidth ** 2 / wrap.scrollWidth\n  const height = Math.max(originalHeight, props.minSize)\n  const width = Math.max(originalWidth, props.minSize)\n\n  ratioY.value =\n    originalHeight /\n    (offsetHeight - originalHeight) /\n    (height / (offsetHeight - height))\n  ratioX.value =\n    originalWidth /\n    (offsetWidth - originalWidth) /\n    (width / (offsetWidth - width))\n\n  sizeHeight.value = height + GAP < offsetHeight ? `${height}px` : ''\n  sizeWidth.value = width + GAP < offsetWidth ? `${width}px` : ''\n}\n\ndefineExpose({\n  handleScroll,\n  update,\n})\n</script>\n","<template>\n  <div ref=\"scrollbarRef\" :class=\"ns.b()\">\n    <div\n      ref=\"wrapRef\"\n      :class=\"wrapKls\"\n      :style=\"wrapStyle\"\n      :tabindex=\"tabindex\"\n      @scroll=\"handleScroll\"\n    >\n      <component\n        :is=\"tag\"\n        :id=\"id\"\n        ref=\"resizeRef\"\n        :class=\"resizeKls\"\n        :style=\"viewStyle\"\n        :role=\"role\"\n        :aria-label=\"ariaLabel\"\n        :aria-orientation=\"ariaOrientation\"\n      >\n        <slot />\n      </component>\n    </div>\n    <template v-if=\"!native\">\n      <bar ref=\"barRef\" :always=\"always\" :min-size=\"minSize\" />\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  nextTick,\n  onActivated,\n  onMounted,\n  onUpdated,\n  provide,\n  reactive,\n  ref,\n  watch,\n} from 'vue'\nimport { useEventListener, useResizeObserver } from '@vueuse/core'\nimport { addUnit, debugWarn, isNumber, isObject } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport Bar from './bar.vue'\nimport { scrollbarContextKey } from './constants'\nimport { scrollbarEmits, scrollbarProps } from './scrollbar'\n\nimport type { ScrollbarDirection } from './scrollbar'\nimport type { BarInstance } from './bar'\nimport type { CSSProperties, StyleValue } from 'vue'\n\nconst COMPONENT_NAME = 'ElScrollbar'\n\ndefineOptions({\n  name: COMPONENT_NAME,\n})\n\nconst props = defineProps(scrollbarProps)\nconst emit = defineEmits(scrollbarEmits)\n\nconst ns = useNamespace('scrollbar')\n\nlet stopResizeObserver: (() => void) | undefined = undefined\nlet stopWrapResizeObserver: (() => void) | undefined = undefined\nlet stopResizeListener: (() => void) | undefined = undefined\nlet wrapScrollTop = 0\nlet wrapScrollLeft = 0\nlet direction = '' as ScrollbarDirection\nconst distanceScrollState = {\n  bottom: false,\n  top: false,\n  right: false,\n  left: false,\n}\n\nconst scrollbarRef = ref<HTMLDivElement>()\nconst wrapRef = ref<HTMLDivElement>()\nconst resizeRef = ref<HTMLElement>()\nconst barRef = ref<BarInstance>()\n\nconst wrapStyle = computed<StyleValue>(() => {\n  const style: CSSProperties = {}\n  if (props.height) style.height = addUnit(props.height)\n  if (props.maxHeight) style.maxHeight = addUnit(props.maxHeight)\n  return [props.wrapStyle, style]\n})\n\nconst wrapKls = computed(() => {\n  return [\n    props.wrapClass,\n    ns.e('wrap'),\n    { [ns.em('wrap', 'hidden-default')]: !props.native },\n  ]\n})\n\nconst resizeKls = computed(() => {\n  return [ns.e('view'), props.viewClass]\n})\n\nconst shouldSkipDirection = (direction: ScrollbarDirection) => {\n  return distanceScrollState[direction] ?? false\n}\n\nconst DIRECTION_PAIRS: Record<ScrollbarDirection, ScrollbarDirection> = {\n  top: 'bottom',\n  bottom: 'top',\n  left: 'right',\n  right: 'left',\n}\nconst updateTriggerStatus = (arrivedStates: Record<string, boolean>) => {\n  const oppositeDirection = DIRECTION_PAIRS[direction]\n  if (!oppositeDirection) return\n\n  const arrived = arrivedStates[direction]\n  const oppositeArrived = arrivedStates[oppositeDirection]\n\n  if (arrived && !distanceScrollState[direction]) {\n    distanceScrollState[direction] = true\n  }\n\n  if (!oppositeArrived && distanceScrollState[oppositeDirection]) {\n    distanceScrollState[oppositeDirection] = false\n  }\n}\n\nconst handleScroll = () => {\n  if (wrapRef.value) {\n    barRef.value?.handleScroll(wrapRef.value)\n    const prevTop = wrapScrollTop\n    const prevLeft = wrapScrollLeft\n    wrapScrollTop = wrapRef.value.scrollTop\n    wrapScrollLeft = wrapRef.value.scrollLeft\n\n    const arrivedStates = {\n      bottom:\n        wrapScrollTop + wrapRef.value.clientHeight >=\n        wrapRef.value.scrollHeight - props.distance,\n      top: wrapScrollTop <= props.distance && prevTop !== 0,\n      right:\n        wrapScrollLeft + wrapRef.value.clientWidth >=\n          wrapRef.value.scrollWidth - props.distance &&\n        prevLeft !== wrapScrollLeft,\n      left: wrapScrollLeft <= props.distance && prevLeft !== 0,\n    }\n\n    emit('scroll', {\n      scrollTop: wrapScrollTop,\n      scrollLeft: wrapScrollLeft,\n    })\n\n    if (prevTop !== wrapScrollTop) {\n      direction = wrapScrollTop > prevTop ? 'bottom' : 'top'\n    }\n    if (prevLeft !== wrapScrollLeft) {\n      direction = wrapScrollLeft > prevLeft ? 'right' : 'left'\n    }\n    if (props.distance > 0) {\n      if (shouldSkipDirection(direction)) {\n        return\n      }\n      updateTriggerStatus(arrivedStates)\n    }\n    if (arrivedStates[direction]) emit('end-reached', direction)\n  }\n}\n\nfunction scrollTo(xCord: number, yCord?: number): void\nfunction scrollTo(options: ScrollToOptions): void\nfunction scrollTo(arg1: unknown, arg2?: number) {\n  if (isObject(arg1)) {\n    wrapRef.value!.scrollTo(arg1)\n  } else if (isNumber(arg1) && isNumber(arg2)) {\n    wrapRef.value!.scrollTo(arg1, arg2)\n  }\n}\n\nconst setScrollTop = (value: number) => {\n  if (!isNumber(value)) {\n    debugWarn(COMPONENT_NAME, 'value must be a number')\n    return\n  }\n  wrapRef.value!.scrollTop = value\n}\n\nconst setScrollLeft = (value: number) => {\n  if (!isNumber(value)) {\n    debugWarn(COMPONENT_NAME, 'value must be a number')\n    return\n  }\n  wrapRef.value!.scrollLeft = value\n}\n\nconst update = () => {\n  barRef.value?.update()\n  distanceScrollState[direction] = false\n}\n\nwatch(\n  () => props.noresize,\n  (noresize) => {\n    if (noresize) {\n      stopResizeObserver?.()\n      stopWrapResizeObserver?.()\n      stopResizeListener?.()\n    } else {\n      ;({ stop: stopResizeObserver } = useResizeObserver(resizeRef, update))\n      ;({ stop: stopWrapResizeObserver } = useResizeObserver(wrapRef, update))\n      stopResizeListener = useEventListener('resize', update)\n    }\n  },\n  { immediate: true }\n)\n\nwatch(\n  () => [props.maxHeight, props.height],\n  () => {\n    if (!props.native)\n      nextTick(() => {\n        update()\n        if (wrapRef.value) {\n          barRef.value?.handleScroll(wrapRef.value)\n        }\n      })\n  }\n)\n\nprovide(\n  scrollbarContextKey,\n  reactive({\n    scrollbarElement: scrollbarRef,\n    wrapElement: wrapRef,\n  })\n)\n\nonActivated(() => {\n  if (wrapRef.value) {\n    wrapRef.value.scrollTop = wrapScrollTop\n    wrapRef.value.scrollLeft = wrapScrollLeft\n  }\n})\n\nonMounted(() => {\n  if (!props.native)\n    nextTick(() => {\n      update()\n    })\n})\nonUpdated(() => update())\n\ndefineExpose({\n  /** @description scrollbar wrap ref */\n  wrapRef,\n  /** @description update scrollbar state manually */\n  update,\n  /** @description scrolls to a particular set of coordinates */\n  scrollTo,\n  /** @description set distance to scroll top */\n  setScrollTop,\n  /** @description set distance to scroll left */\n  setScrollLeft,\n  /** @description handle scroll event */\n  handleScroll,\n})\n</script>\n","import { withInstall } from '@element-plus/utils'\nimport Scrollbar from './src/scrollbar.vue'\n\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nexport const ElScrollbar: SFCWithInstall<typeof Scrollbar> =\n  withInstall(Scrollbar)\nexport default ElScrollbar\n\nexport * from './src/util'\nexport * from './src/scrollbar'\nexport * from './src/thumb'\nexport * from './src/constants'\n","import { buildProps, definePropType, isNumber } from '@element-plus/utils'\nimport { useAriaProps } from '@element-plus/hooks'\n\nimport type {\n  ExtractPropTypes,\n  StyleValue,\n  __ExtractPublicPropTypes,\n} from 'vue'\nimport type Scrollbar from './scrollbar.vue'\n\nexport const scrollbarProps = buildProps({\n  /**\n   * @description trigger distance(px)\n   */\n  distance: {\n    type: Number,\n    default: 0,\n  },\n  /**\n   * @description height of scrollbar\n   */\n  height: {\n    type: [String, Number],\n    default: '',\n  },\n  /**\n   * @description max height of scrollbar\n   */\n  maxHeight: {\n    type: [String, Number],\n    default: '',\n  },\n  /**\n   * @description whether to use the native scrollbar\n   */\n  native: Boolean,\n  /**\n   * @description style of wrap\n   */\n  wrapStyle: {\n    type: definePropType<StyleValue>([String, Object, Array]),\n    default: '',\n  },\n  /**\n   * @description class of wrap\n   */\n  wrapClass: {\n    type: [String, Array],\n    default: '',\n  },\n  /**\n   * @description class of view\n   */\n  viewClass: {\n    type: [String, Array],\n    default: '',\n  },\n  /**\n   * @description style of view\n   */\n  viewStyle: {\n    type: [String, Array, Object],\n    default: '',\n  },\n  /**\n   * @description do not respond to container size changes, if the container size does not change, it is better to set it to optimize performance\n   */\n  noresize: Boolean, // 如果 container 尺寸不会发生变化，最好设置它可以优化性能\n  /**\n   * @description element tag of the view\n   */\n  tag: {\n    type: String,\n    default: 'div',\n  },\n  /**\n   * @description always show\n   */\n  always: Boolean,\n  /**\n   * @description minimum size of scrollbar\n   */\n  minSize: {\n    type: Number,\n    default: 20,\n  },\n  /**\n   * @description Wrap tabindex\n   */\n  tabindex: {\n    type: [String, Number],\n    default: undefined,\n  },\n  /**\n   * @description id of view\n   */\n  id: String,\n  /**\n   * @description role of view\n   */\n  role: String,\n  ...useAriaProps(['ariaLabel', 'ariaOrientation']),\n} as const)\nexport type ScrollbarProps = ExtractPropTypes<typeof scrollbarProps>\nexport type ScrollbarPropsPublic = __ExtractPublicPropTypes<\n  typeof scrollbarProps\n>\n\nexport const scrollbarEmits = {\n  'end-reached': (direction: ScrollbarDirection) =>\n    ['left', 'right', 'top', 'bottom'].includes(direction),\n  scroll: ({\n    scrollTop,\n    scrollLeft,\n  }: {\n    scrollTop: number\n    scrollLeft: number\n  }) => [scrollTop, scrollLeft].every(isNumber),\n}\nexport type ScrollbarEmits = typeof scrollbarEmits\nexport type ScrollbarDirection = 'top' | 'bottom' | 'left' | 'right'\n\nexport type ScrollbarInstance = InstanceType<typeof Scrollbar> & unknown\n","import type { ComputedRef, InjectionKey } from 'vue'\n\ninterface RowContext {\n  gutter: ComputedRef<number>\n}\n\nexport const rowContextKey: InjectionKey<RowContext> = Symbol('rowContextKey')\n","import {\n  Comment,\n  Fragment,\n  Text,\n  cloneVNode,\n  defineComponent,\n  inject,\n  withDirectives,\n} from 'vue'\nimport { NOOP, debugWarn, isObject } from '@element-plus/utils'\nimport {\n  FORWARD_REF_INJECTION_KEY,\n  useForwardRefDirective,\n  useNamespace,\n} from '@element-plus/hooks'\n\nimport type { Ref, VNode } from 'vue'\n\nconst NAME = 'ElOnlyChild'\n\nexport const OnlyChild = defineComponent({\n  name: NAME,\n  setup(_, { slots, attrs }) {\n    const forwardRefInjection = inject(FORWARD_REF_INJECTION_KEY)\n    const forwardRefDirective = useForwardRefDirective(\n      forwardRefInjection?.setForwardRef ?? NOOP\n    )\n    return () => {\n      const defaultSlot = slots.default?.(attrs)\n      if (!defaultSlot) return null\n      const [firstLegitNode, length] = findFirstLegitChild(defaultSlot)\n\n      if (!firstLegitNode) {\n        debugWarn(NAME, 'no valid child node found')\n        return null\n      }\n      if (length > 1) {\n        debugWarn(NAME, 'requires exact only one valid child.')\n      }\n\n      return withDirectives(cloneVNode(firstLegitNode!, attrs), [\n        [forwardRefDirective],\n      ])\n    }\n  },\n})\n\nfunction findFirstLegitChild(\n  node: VNode[] | undefined\n): [VNode | null, number] {\n  if (!node) return [null, 0]\n  const children = node as VNode[]\n  const len = children.filter((c) => c.type !== Comment).length\n\n  for (const child of children) {\n    /**\n     * when user uses h(Fragment, [text]) to render plain string,\n     * this switch case just cannot handle, when the value is primitives\n     * we should just return the wrapped string\n     */\n    if (isObject(child)) {\n      switch (child.type) {\n        case Comment:\n          continue\n        case Text:\n        case 'svg':\n          return [wrapTextContent(child), len]\n        case Fragment:\n          return findFirstLegitChild(child.children as VNode[])\n        default:\n          return [child, len]\n      }\n    }\n    return [wrapTextContent(child), len]\n  }\n  return [null, 0]\n}\n\nfunction wrapTextContent(s: string | VNode) {\n  const ns = useNamespace('only-child')\n  return <span class={ns.e('content')}>{s}</span>\n}\n\nexport type OnlyChildExpose = {\n  forwardRef: Ref<HTMLElement>\n}\n","import { buildProps } from '@element-plus/utils'\n\nimport type { ExtractPropTypes, __ExtractPublicPropTypes } from 'vue'\nimport type Row from './row.vue'\n\nexport const RowJustify = [\n  'start',\n  'center',\n  'end',\n  'space-around',\n  'space-between',\n  'space-evenly',\n] as const\n\nexport const RowAlign = ['top', 'middle', 'bottom'] as const\n\nexport const rowProps = buildProps({\n  /**\n   * @description custom element tag\n   */\n  tag: {\n    type: String,\n    default: 'div',\n  },\n  /**\n   * @description grid spacing\n   */\n  gutter: {\n    type: Number,\n    default: 0,\n  },\n  /**\n   * @description horizontal alignment of flex layout\n   */\n  justify: {\n    type: String,\n    values: RowJustify,\n    default: 'start',\n  },\n  /**\n   * @description vertical alignment of flex layout\n   */\n  align: {\n    type: String,\n    values: RowAlign,\n  },\n} as const)\n\nexport type RowProps = ExtractPropTypes<typeof rowProps>\nexport type RowPropsPublic = __ExtractPublicPropTypes<typeof rowProps>\nexport type RowInstance = InstanceType<typeof Row> & unknown\n","<template>\n  <component :is=\"tag\" :class=\"rowKls\" :style=\"style\">\n    <slot />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, provide } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { rowContextKey } from './constants'\nimport { rowProps } from './row'\n\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElRow',\n})\n\nconst props = defineProps(rowProps)\n\nconst ns = useNamespace('row')\nconst gutter = computed(() => props.gutter)\n\nprovide(rowContextKey, {\n  gutter,\n})\n\nconst style = computed(() => {\n  const styles: CSSProperties = {}\n  if (!props.gutter) {\n    return styles\n  }\n\n  styles.marginRight = styles.marginLeft = `-${props.gutter / 2}px`\n  return styles\n})\n\nconst rowKls = computed(() => [\n  ns.b(),\n  ns.is(`justify-${props.justify}`, props.justify !== 'start'),\n  ns.is(`align-${props.align}`, !!props.align),\n])\n</script>\n","import { withInstall } from '@element-plus/utils'\nimport Row from './src/row.vue'\n\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nexport const ElRow: SFCWithInstall<typeof Row> = withInstall(Row)\nexport default ElRow\n\nexport * from './src/row'\nexport * from './src/constants'\n","import { Star, StarFilled } from '@element-plus/icons-vue'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport {\n  buildProps,\n  definePropType,\n  iconPropType,\n  isNumber,\n  mutable,\n} from '@element-plus/utils'\nimport { useAriaProps, useSizeProp } from '@element-plus/hooks'\n\nimport type { Component, ExtractPropTypes, __ExtractPublicPropTypes } from 'vue'\nimport type Rate from './rate.vue'\n\nexport const rateProps = buildProps({\n  /**\n   * @description binding value\n   */\n  modelValue: {\n    type: Number,\n    default: 0,\n  },\n  /**\n   * @description native `id` attribute\n   */\n  id: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description threshold value between low and medium level. The value itself will be included in low level\n   */\n  lowThreshold: {\n    type: Number,\n    default: 2,\n  },\n  /**\n   * @description threshold value between medium and high level. The value itself will be included in high level\n   */\n  highThreshold: {\n    type: Number,\n    default: 4,\n  },\n  /**\n   * @description max rating score\n   */\n  max: {\n    type: Number,\n    default: 5,\n  },\n  /**\n   * @description colors for icons. If array, it should have 3 elements, each of which corresponds with a score level, else if object, the key should be threshold value between two levels, and the value should be corresponding color\n   */\n  colors: {\n    type: definePropType<string[] | Record<number, string>>([Array, Object]),\n    default: () => mutable(['', '', ''] as const),\n  },\n  /**\n   * @description color of unselected icons\n   */\n  voidColor: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description color of unselected read-only icons\n   */\n  disabledVoidColor: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description icon components. If array, it should have 3 elements, each of which corresponds with a score level, else if object, the key should be threshold value between two levels, and the value should be corresponding icon component\n   */\n  icons: {\n    type: definePropType<\n      Array<string | Component> | Record<number, string | Component>\n    >([Array, Object]),\n    default: () =>\n      [StarFilled, StarFilled, StarFilled] as [Component, Component, Component],\n  },\n  /**\n   * @description component of unselected icons\n   */\n  voidIcon: {\n    type: iconPropType,\n    default: () => Star as Component,\n  },\n  /**\n   * @description component of unselected read-only icons\n   */\n  disabledVoidIcon: {\n    type: iconPropType,\n    default: () => StarFilled as Component,\n  },\n  /**\n   * @description whether Rate is read-only\n   */\n  disabled: Boolean,\n  /**\n   * @description whether picking half start is allowed\n   */\n  allowHalf: Boolean,\n  /**\n   * @description whether to display texts\n   */\n  showText: Boolean,\n  /**\n   * @description whether to display current score. show-score and show-text cannot be true at the same time\n   */\n  showScore: Boolean,\n  /**\n   * @description color of texts\n   */\n  textColor: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description text array\n   */\n  texts: {\n    type: definePropType<string[]>(Array),\n    default: () =>\n      mutable([\n        'Extremely bad',\n        'Disappointed',\n        'Fair',\n        'Satisfied',\n        'Surprise',\n      ] as const),\n  },\n  /**\n   * @description score template\n   */\n  scoreTemplate: {\n    type: String,\n    default: '{value}',\n  },\n  /**\n   * @description size of Rate\n   */\n  size: useSizeProp,\n  /**\n   * @description whether value can be reset to `0`\n   */\n  clearable: Boolean,\n  ...useAriaProps(['ariaLabel']),\n} as const)\n\nexport type RateProps = ExtractPropTypes<typeof rateProps>\nexport type RatePropsPublic = __ExtractPublicPropTypes<typeof rateProps>\n\nexport const rateEmits = {\n  [CHANGE_EVENT]: (value: number) => isNumber(value),\n  [UPDATE_MODEL_EVENT]: (value: number) => isNumber(value),\n}\nexport type RateEmits = typeof rateEmits\n\nexport type RateInstance = InstanceType<typeof Rate> & unknown\n","<template>\n  <div\n    :id=\"inputId\"\n    :class=\"[rateClasses, ns.is('disabled', rateDisabled)]\"\n    role=\"slider\"\n    :aria-label=\"!isLabeledByFormItem ? ariaLabel || 'rating' : undefined\"\n    :aria-labelledby=\"\n      isLabeledByFormItem ? formItemContext?.labelId : undefined\n    \"\n    :aria-valuenow=\"currentValue\"\n    :aria-valuetext=\"text || undefined\"\n    aria-valuemin=\"0\"\n    :aria-valuemax=\"max\"\n    tabindex=\"0\"\n    :style=\"rateStyles\"\n    @keydown=\"handleKey\"\n  >\n    <span\n      v-for=\"(item, key) in max\"\n      :key=\"key\"\n      :class=\"ns.e('item')\"\n      @mousemove=\"setCurrentValue(item, $event)\"\n      @mouseleave=\"resetCurrentValue\"\n      @click=\"selectValue(item)\"\n    >\n      <el-icon\n        ref=\"iconRefs\"\n        :class=\"[\n          ns.e('icon'),\n          { hover: hoverIndex === item },\n          ns.is('active', item <= currentValue),\n          ns.is('focus-visible', item === Math.ceil(currentValue || 1)),\n        ]\"\n      >\n        <template v-if=\"!showDecimalIcon(item)\">\n          <component :is=\"activeComponent\" v-show=\"item <= currentValue\" />\n          <component :is=\"voidComponent\" v-show=\"item > currentValue\" />\n        </template>\n        <template v-else>\n          <component :is=\"voidComponent\" :class=\"[ns.em('decimal', 'box')]\" />\n          <el-icon\n            :style=\"decimalStyle\"\n            :class=\"[ns.e('icon'), ns.e('decimal')]\"\n          >\n            <component :is=\"decimalIconComponent\" />\n          </el-icon>\n        </template>\n      </el-icon>\n    </span>\n    <span\n      v-if=\"showText || showScore\"\n      :class=\"ns.e('text')\"\n      :style=\"{ color: textColor }\"\n    >\n      {{ text }}\n    </span>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, inject, markRaw, ref, watch } from 'vue'\nimport { clamp } from 'lodash-unified'\nimport {\n  CHANGE_EVENT,\n  EVENT_CODE,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport { isArray, isObject, isString } from '@element-plus/utils'\nimport {\n  formContextKey,\n  formItemContextKey,\n  useFormItemInputId,\n  useFormSize,\n} from '@element-plus/components/form'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { useNamespace } from '@element-plus/hooks'\nimport { rateEmits, rateProps } from './rate'\n\nimport type { CSSProperties, Component } from 'vue'\nimport type { IconInstance } from '@element-plus/components/icon'\n\nfunction getValueFromMap<T>(\n  value: number,\n  map: Record<string, T | { excluded?: boolean; value: T }>\n) {\n  const isExcludedObject = (\n    val: unknown\n  ): val is { excluded?: boolean } & Record<any, unknown> => isObject(val)\n\n  const matchedKeys = Object.keys(map)\n    .map((key) => +key)\n    .filter((key) => {\n      const val = map[key]\n      const excluded = isExcludedObject(val) ? val.excluded : false\n      return excluded ? value < key : value <= key\n    })\n    .sort((a, b) => a - b)\n  const matchedValue = map[matchedKeys[0]]\n  return (isExcludedObject(matchedValue) && matchedValue.value) || matchedValue\n}\n\ndefineOptions({\n  name: 'ElRate',\n})\n\nconst props = defineProps(rateProps)\nconst emit = defineEmits(rateEmits)\n\nconst formContext = inject(formContextKey, undefined)\nconst formItemContext = inject(formItemContextKey, undefined)\nconst rateSize = useFormSize()\nconst ns = useNamespace('rate')\nconst { inputId, isLabeledByFormItem } = useFormItemInputId(props, {\n  formItemContext,\n})\n\nconst currentValue = ref(props.modelValue)\nconst hoverIndex = ref(-1)\nconst pointerAtLeftHalf = ref(true)\n\nconst iconRefs = ref<IconInstance[]>([])\nconst iconClientWidths = computed<number[]>(() =>\n  iconRefs.value.map((icon) => icon.$el.clientWidth)\n)\nconst rateClasses = computed(() => [ns.b(), ns.m(rateSize.value)])\nconst rateDisabled = computed(() => props.disabled || formContext?.disabled)\nconst rateStyles = computed(() => {\n  return ns.cssVarBlock({\n    'void-color': props.voidColor,\n    'disabled-void-color': props.disabledVoidColor,\n    'fill-color': activeColor.value,\n  }) as CSSProperties\n})\n\nconst text = computed(() => {\n  let result = ''\n  if (props.showScore) {\n    result = props.scoreTemplate.replace(\n      /\\{\\s*value\\s*\\}/,\n      rateDisabled.value ? `${props.modelValue}` : `${currentValue.value}`\n    )\n  } else if (props.showText) {\n    result = props.texts[Math.ceil(currentValue.value) - 1]\n  }\n  return result\n})\nconst valueDecimal = computed(\n  () => props.modelValue * 100 - Math.floor(props.modelValue) * 100\n)\nconst colorMap = computed(() =>\n  isArray(props.colors)\n    ? {\n        [props.lowThreshold]: props.colors[0],\n        [props.highThreshold]: { value: props.colors[1], excluded: true },\n        [props.max]: props.colors[2],\n      }\n    : props.colors\n)\nconst activeColor = computed(() => {\n  const color = getValueFromMap(currentValue.value, colorMap.value)\n  // {value: '', excluded: true} returned\n  return isObject(color) ? '' : color\n})\nconst decimalStyle = computed(() => {\n  let width = ''\n  if (rateDisabled.value) {\n    width = `${valueDecimal.value}%`\n  } else if (props.allowHalf) {\n    width = '50%'\n  }\n  return {\n    color: activeColor.value,\n    width,\n  }\n})\nconst componentMap = computed(() => {\n  let icons = isArray(props.icons) ? [...props.icons] : { ...props.icons }\n  icons = markRaw(icons) as\n    | Array<string | Component>\n    | Record<number, string | Component>\n  return isArray(icons)\n    ? {\n        [props.lowThreshold]: icons[0],\n        [props.highThreshold]: {\n          value: icons[1],\n          excluded: true,\n        },\n        [props.max]: icons[2],\n      }\n    : icons\n})\nconst decimalIconComponent = computed(() =>\n  getValueFromMap(props.modelValue, componentMap.value)\n)\nconst voidComponent = computed(() =>\n  rateDisabled.value\n    ? isString(props.disabledVoidIcon)\n      ? props.disabledVoidIcon\n      : (markRaw(props.disabledVoidIcon) as Component)\n    : isString(props.voidIcon)\n    ? props.voidIcon\n    : (markRaw(props.voidIcon) as Component)\n)\nconst activeComponent = computed(() =>\n  getValueFromMap(currentValue.value, componentMap.value)\n)\n\nfunction showDecimalIcon(item: number) {\n  const showWhenDisabled =\n    rateDisabled.value &&\n    valueDecimal.value > 0 &&\n    item - 1 < props.modelValue &&\n    item > props.modelValue\n  const showWhenAllowHalf =\n    props.allowHalf &&\n    pointerAtLeftHalf.value &&\n    item - 0.5 <= currentValue.value &&\n    item > currentValue.value\n  return showWhenDisabled || showWhenAllowHalf\n}\n\nfunction emitValue(value: number) {\n  // if allow clear, and selected value is same as modelValue, reset value to 0\n  if (props.clearable && value === props.modelValue) {\n    value = 0\n  }\n\n  emit(UPDATE_MODEL_EVENT, value)\n  if (props.modelValue !== value) {\n    emit(CHANGE_EVENT, value)\n  }\n}\n\nfunction selectValue(value: number) {\n  if (rateDisabled.value) {\n    return\n  }\n  if (props.allowHalf && pointerAtLeftHalf.value) {\n    emitValue(currentValue.value)\n  } else {\n    emitValue(value)\n  }\n}\n\nfunction handleKey(e: KeyboardEvent) {\n  if (rateDisabled.value) {\n    return\n  }\n  const code = e.code\n  const step = props.allowHalf ? 0.5 : 1\n  let _currentValue = currentValue.value\n\n  if (code === EVENT_CODE.up || code === EVENT_CODE.right) {\n    _currentValue += step\n  } else if (code === EVENT_CODE.left || code === EVENT_CODE.down) {\n    _currentValue -= step\n  }\n  _currentValue = clamp(_currentValue, 0, props.max)\n\n  if (_currentValue === currentValue.value) {\n    return\n  }\n\n  e.stopPropagation()\n  e.preventDefault()\n  emit(UPDATE_MODEL_EVENT, _currentValue)\n  emit(CHANGE_EVENT, _currentValue)\n  return _currentValue\n}\n\nfunction setCurrentValue(value: number, event?: MouseEvent) {\n  if (rateDisabled.value) {\n    return\n  }\n  if (props.allowHalf && event) {\n    pointerAtLeftHalf.value =\n      event.offsetX * 2 <= iconClientWidths.value[value - 1]\n    currentValue.value = pointerAtLeftHalf.value ? value - 0.5 : value\n  } else {\n    currentValue.value = value\n  }\n  hoverIndex.value = value\n}\n\nfunction resetCurrentValue() {\n  if (rateDisabled.value) {\n    return\n  }\n  if (props.allowHalf) {\n    pointerAtLeftHalf.value = props.modelValue !== Math.floor(props.modelValue)\n  }\n  currentValue.value = props.modelValue\n  hoverIndex.value = -1\n}\n\nwatch(\n  () => props.modelValue,\n  (val) => {\n    currentValue.value = val\n    pointerAtLeftHalf.value = props.modelValue !== Math.floor(props.modelValue)\n  }\n)\n\nif (!props.modelValue) {\n  emit(UPDATE_MODEL_EVENT, 0)\n}\n\ndefineExpose({\n  /** @description set current value */\n  setCurrentValue,\n  /** @description reset current value */\n  resetCurrentValue,\n})\n</script>\n","import { withInstall } from '@element-plus/utils'\nimport Rate from './src/rate.vue'\n\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nexport const ElRate: SFCWithInstall<typeof Rate> = withInstall(Rate)\nexport default ElRate\n\nexport * from './src/rate'\n","import { computed } from 'vue'\nimport { get } from 'lodash-unified'\n\nimport type { SelectV2Props } from './token'\nimport type { Option } from './select.types'\n\nexport interface Props {\n  label?: string\n  value?: string\n  disabled?: string\n  options?: string\n}\n\nexport const defaultProps: Required<Props> = {\n  label: 'label',\n  value: 'value',\n  disabled: 'disabled',\n  options: 'options',\n}\n\nexport function useProps(props: Pick<SelectV2Props, 'props'>) {\n  const aliasProps = computed(() => ({ ...defaultProps, ...props.props }))\n\n  const getLabel = (option: Option) => get(option, aliasProps.value.label)\n  const getValue = (option: Option) => get(option, aliasProps.value.value)\n  const getDisabled = (option: Option) => get(option, aliasProps.value.disabled)\n  const getOptions = (option: Option) => get(option, aliasProps.value.options)\n\n  return {\n    aliasProps,\n    getLabel,\n    getValue,\n    getDisabled,\n    getOptions,\n  }\n}\n","import type { InjectionKey } from 'vue'\nimport type { SelectContext, SelectGroupContext } from './type'\n\n// For individual build sharing injection key, we had to make `Symbol` to string\nexport const selectGroupKey: InjectionKey<SelectGroupContext> =\n  Symbol('ElSelectGroup')\n\nexport const selectKey: InjectionKey<SelectContext> = Symbol('ElSelect')\n","import { buildProps } from '@element-plus/utils'\n\nexport const COMPONENT_NAME = 'ElOption'\nexport const optionProps = buildProps({\n  /**\n   * @description value of option\n   */\n  value: {\n    type: [String, Number, Boolean, Object],\n    required: true as const,\n  },\n  /**\n   * @description label of option, same as `value` if omitted\n   */\n  label: {\n    type: [String, Number],\n  },\n  created: Boolean,\n  /**\n   * @description whether option is disabled\n   */\n  disabled: Boolean,\n})\n","import { computed, getCurrentInstance, inject, toRaw, watch } from 'vue'\nimport { get, isEqual } from 'lodash-unified'\nimport {\n  ensureArray,\n  escapeStringRegexp,\n  isObject,\n  throwError,\n} from '@element-plus/utils'\nimport { selectGroupKey, selectKey } from './token'\nimport { COMPONENT_NAME } from './option'\n\nimport type { OptionInternalInstance, OptionProps, OptionStates } from './type'\n\nexport function useOption(props: OptionProps, states: OptionStates) {\n  // inject\n  const select = inject(selectKey)\n  if (!select) {\n    throwError(COMPONENT_NAME, 'usage: <el-select><el-option /></el-select/>')\n  }\n  const selectGroup = inject(selectGroupKey, { disabled: false })\n\n  // computed\n  const itemSelected = computed(() => {\n    return contains(ensureArray(select.props.modelValue), props.value)\n  })\n\n  const limitReached = computed(() => {\n    if (select.props.multiple) {\n      const modelValue = ensureArray(select.props.modelValue ?? [])\n      return (\n        !itemSelected.value &&\n        modelValue.length >= select.props.multipleLimit &&\n        select.props.multipleLimit > 0\n      )\n    } else {\n      return false\n    }\n  })\n\n  const currentLabel = computed(() => {\n    return props.label ?? (isObject(props.value) ? '' : props.value)\n  })\n\n  const currentValue = computed(() => {\n    return props.value || props.label || ''\n  })\n\n  const isDisabled = computed(() => {\n    return props.disabled || states.groupDisabled || limitReached.value\n  })\n\n  const instance = getCurrentInstance()! as OptionInternalInstance\n  const contains = <T>(arr: T[] = [], target: T) => {\n    if (!isObject(props.value)) {\n      return arr && arr.includes(target)\n    } else {\n      const valueKey = select.props.valueKey\n      return (\n        arr &&\n        arr.some((item) => {\n          return toRaw(get(item, valueKey)) === get(target, valueKey)\n        })\n      )\n    }\n  }\n\n  const hoverItem = () => {\n    if (!props.disabled && !selectGroup.disabled) {\n      select.states.hoveringIndex = select.optionsArray.indexOf(instance.proxy)\n    }\n  }\n\n  const updateOption = (query: string) => {\n    const regexp = new RegExp(escapeStringRegexp(query), 'i')\n    states.visible = regexp.test(String(currentLabel.value)) || props.created\n  }\n\n  watch(\n    () => currentLabel.value,\n    () => {\n      if (!props.created && !select.props.remote) select.setSelected()\n    }\n  )\n\n  watch(\n    () => props.value,\n    (val, oldVal) => {\n      const { remote, valueKey } = select.props\n      const shouldUpdate = remote ? val !== oldVal : !isEqual(val, oldVal)\n      if (shouldUpdate) {\n        select.onOptionDestroy(oldVal, instance.proxy)\n        select.onOptionCreate(instance.proxy)\n      }\n\n      if (!props.created && !remote) {\n        if (\n          valueKey &&\n          isObject(val) &&\n          isObject(oldVal) &&\n          val[valueKey] === oldVal[valueKey]\n        ) {\n          return\n        }\n        select.setSelected()\n      }\n    }\n  )\n\n  watch(\n    () => selectGroup.disabled,\n    () => {\n      states.groupDisabled = selectGroup.disabled\n    },\n    { immediate: true }\n  )\n\n  return {\n    select,\n    currentLabel,\n    currentValue,\n    itemSelected,\n    isDisabled,\n    hoverItem,\n    updateOption,\n  }\n}\n","<template>\n  <li\n    v-show=\"visible\"\n    :id=\"id\"\n    :class=\"containerKls\"\n    role=\"option\"\n    :aria-disabled=\"isDisabled || undefined\"\n    :aria-selected=\"itemSelected\"\n    @mousemove=\"hoverItem\"\n    @click.stop=\"selectOptionClick\"\n  >\n    <slot>\n      <span>{{ currentLabel }}</span>\n    </slot>\n  </li>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  nextTick,\n  onBeforeUnmount,\n  reactive,\n  toRefs,\n  unref,\n} from 'vue'\nimport { useId, useNamespace } from '@element-plus/hooks'\nimport { useOption } from './useOption'\nimport { COMPONENT_NAME, optionProps } from './option'\n\nimport type {\n  OptionExposed,\n  OptionInternalInstance,\n  OptionStates,\n} from './type'\n\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  componentName: COMPONENT_NAME,\n\n  props: optionProps,\n\n  setup(props) {\n    const ns = useNamespace('select')\n    const id = useId()\n\n    const containerKls = computed(() => [\n      ns.be('dropdown', 'item'),\n      ns.is('disabled', unref(isDisabled)),\n      ns.is('selected', unref(itemSelected)),\n      ns.is('hovering', unref(hover)),\n    ])\n\n    const states = reactive<OptionStates>({\n      index: -1,\n      groupDisabled: false,\n      visible: true,\n      hover: false,\n    })\n\n    const {\n      currentLabel,\n      itemSelected,\n      isDisabled,\n      select,\n      hoverItem,\n      updateOption,\n    } = useOption(props, states)\n\n    const { visible, hover } = toRefs(states)\n\n    const vm = (getCurrentInstance()! as OptionInternalInstance).proxy\n\n    select.onOptionCreate(vm)\n\n    onBeforeUnmount(() => {\n      const key = vm.value\n\n      // if option is not selected, remove it from cache\n      nextTick(() => {\n        const { selected: selectedOptions } = select.states\n        const doesSelected = selectedOptions.some((item) => {\n          return item.value === vm.value\n        })\n        if (select.states.cachedOptions.get(key) === vm && !doesSelected) {\n          select.states.cachedOptions.delete(key)\n        }\n      })\n      select.onOptionDestroy(key, vm)\n    })\n\n    function selectOptionClick() {\n      if (!isDisabled.value) {\n        select.handleOptionSelect(vm)\n      }\n    }\n\n    return {\n      ns,\n      id,\n      containerKls,\n      currentLabel,\n      itemSelected,\n      isDisabled,\n      select,\n      visible,\n      hover,\n      states,\n\n      hoverItem,\n      updateOption,\n      selectOptionClick,\n    } satisfies OptionExposed\n  },\n})\n</script>\n","<template>\n  <div\n    :class=\"[ns.b('dropdown'), ns.is('multiple', isMultiple), popperClass]\"\n    :style=\"{ [isFitInputWidth ? 'width' : 'minWidth']: minWidth }\"\n  >\n    <div v-if=\"$slots.header\" :class=\"ns.be('dropdown', 'header')\">\n      <slot name=\"header\" />\n    </div>\n    <slot />\n    <div v-if=\"$slots.footer\" :class=\"ns.be('dropdown', 'footer')\">\n      <slot name=\"footer\" />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, inject, onMounted, ref } from 'vue'\nimport { useResizeObserver } from '@vueuse/core'\nimport { useNamespace } from '@element-plus/hooks'\nimport { selectKey } from './token'\nimport { BORDER_HORIZONTAL_WIDTH } from '@element-plus/constants'\n\nexport default defineComponent({\n  name: 'ElSelectDropdown',\n\n  componentName: 'ElSelectDropdown',\n\n  setup() {\n    const select = inject(selectKey)!\n    const ns = useNamespace('select')\n\n    // computed\n    const popperClass = computed(() => select.props.popperClass)\n    const isMultiple = computed(() => select.props.multiple)\n    const isFitInputWidth = computed(() => select.props.fitInputWidth)\n    const minWidth = ref('')\n\n    function updateMinWidth() {\n      const offsetWidth = select.selectRef?.offsetWidth\n      if (offsetWidth) {\n        minWidth.value = `${offsetWidth - BORDER_HORIZONTAL_WIDTH}px`\n      } else {\n        minWidth.value = ''\n      }\n    }\n\n    onMounted(() => {\n      // TODO: updatePopper\n      // popper.value.update()\n      updateMinWidth()\n      useResizeObserver(select.selectRef, updateMinWidth)\n    })\n\n    return {\n      ns,\n      minWidth,\n      popperClass,\n      isMultiple,\n      isFitInputWidth,\n    }\n  },\n})\n</script>\n","import {\n  Component,\n  computed,\n  nextTick,\n  onMounted,\n  reactive,\n  ref,\n  watch,\n  watchEffect,\n} from 'vue'\nimport {\n  findLastIndex,\n  get,\n  isEqual,\n  debounce as lodashDebounce,\n} from 'lodash-unified'\nimport { useResizeObserver } from '@vueuse/core'\nimport {\n  ValidateComponentsMap,\n  debugWarn,\n  ensureArray,\n  isArray,\n  isClient,\n  isFunction,\n  isIOS,\n  isNumber,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  scrollIntoView,\n} from '@element-plus/utils'\nimport {\n  CHANGE_EVENT,\n  EVENT_CODE,\n  MINIMUM_INPUT_WIDTH,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport {\n  useComposition,\n  useEmptyValues,\n  useFocusController,\n  useId,\n  useLocale,\n  useNamespace,\n} from '@element-plus/hooks'\nimport {\n  useFormItem,\n  useFormItemInputId,\n  useFormSize,\n} from '@element-plus/components/form'\n\nimport type { TooltipInstance } from '@element-plus/components/tooltip'\nimport type { ScrollbarInstance } from '@element-plus/components/scrollbar'\nimport type { SelectEmits, SelectProps } from './select'\nimport type {\n  OptionBasic,\n  OptionPublicInstance,\n  OptionValue,\n  SelectStates,\n} from './type'\n\nexport const useSelect = (props: SelectProps, emit: SelectEmits) => {\n  const { t } = useLocale()\n  const contentId = useId()\n  const nsSelect = useNamespace('select')\n  const nsInput = useNamespace('input')\n\n  const states = reactive<SelectStates>({\n    inputValue: '',\n    options: new Map(),\n    cachedOptions: new Map(),\n    optionValues: [], // sorted value of options\n    selected: [],\n    selectionWidth: 0,\n    collapseItemWidth: 0,\n    selectedLabel: '',\n    hoveringIndex: -1,\n    previousQuery: null,\n    inputHovering: false,\n    menuVisibleOnFocus: false,\n    isBeforeHide: false,\n  })\n\n  // template refs\n  const selectRef = ref<HTMLElement>()\n  const selectionRef = ref<HTMLElement>()\n  const tooltipRef = ref<TooltipInstance>()\n  const tagTooltipRef = ref<TooltipInstance>()\n  const inputRef = ref<HTMLInputElement>()\n  const prefixRef = ref<HTMLElement>()\n  const suffixRef = ref<HTMLElement>()\n  const menuRef = ref<HTMLElement>()\n  const tagMenuRef = ref<HTMLElement>()\n  const collapseItemRef = ref<HTMLElement>()\n  const scrollbarRef = ref<ScrollbarInstance>()\n  // the controller of the expanded popup\n  const expanded = ref(false)\n  const hoverOption = ref()\n\n  const { form, formItem } = useFormItem()\n  const { inputId } = useFormItemInputId(props, {\n    formItemContext: formItem,\n  })\n  const { valueOnClear, isEmptyValue } = useEmptyValues(props)\n\n  const {\n    isComposing,\n    handleCompositionStart,\n    handleCompositionUpdate,\n    handleCompositionEnd,\n  } = useComposition({\n    afterComposition: (e) => onInput(e),\n  })\n\n  const selectDisabled = computed(() => props.disabled || !!form?.disabled)\n\n  const { wrapperRef, isFocused, handleBlur } = useFocusController(inputRef, {\n    disabled: selectDisabled,\n    afterFocus() {\n      if (props.automaticDropdown && !expanded.value) {\n        expanded.value = true\n        states.menuVisibleOnFocus = true\n      }\n    },\n    beforeBlur(event) {\n      return (\n        tooltipRef.value?.isFocusInsideContent(event) ||\n        tagTooltipRef.value?.isFocusInsideContent(event)\n      )\n    },\n    afterBlur() {\n      expanded.value = false\n      states.menuVisibleOnFocus = false\n      if (props.validateEvent) {\n        formItem?.validate?.('blur').catch((err) => debugWarn(err))\n      }\n    },\n  })\n\n  const hasModelValue = computed(() => {\n    return isArray(props.modelValue)\n      ? props.modelValue.length > 0\n      : !isEmptyValue(props.modelValue)\n  })\n\n  const needStatusIcon = computed(() => form?.statusIcon ?? false)\n\n  const showClearBtn = computed(() => {\n    return (\n      props.clearable &&\n      !selectDisabled.value &&\n      hasModelValue.value &&\n      (isFocused.value || states.inputHovering)\n    )\n  })\n  const iconComponent = computed(() =>\n    props.remote && props.filterable && !props.remoteShowSuffix\n      ? ''\n      : props.suffixIcon\n  )\n  const iconReverse = computed(() =>\n    nsSelect.is('reverse', !!(iconComponent.value && expanded.value))\n  )\n\n  const validateState = computed(() => formItem?.validateState || '')\n  const validateIcon = computed(\n    () =>\n      validateState.value &&\n      (ValidateComponentsMap[validateState.value] as Component)\n  )\n\n  const debounce = computed(() => (props.remote ? 300 : 0))\n\n  const isRemoteSearchEmpty = computed(\n    () => props.remote && !states.inputValue && states.options.size === 0\n  )\n\n  const emptyText = computed(() => {\n    if (props.loading) {\n      return props.loadingText || t('el.select.loading')\n    } else {\n      if (\n        props.filterable &&\n        states.inputValue &&\n        states.options.size > 0 &&\n        filteredOptionsCount.value === 0\n      ) {\n        return props.noMatchText || t('el.select.noMatch')\n      }\n      if (states.options.size === 0) {\n        return props.noDataText || t('el.select.noData')\n      }\n    }\n    return null\n  })\n\n  const filteredOptionsCount = computed(\n    () => optionsArray.value.filter((option) => option.visible).length\n  )\n\n  const optionsArray = computed(() => {\n    const list = Array.from(states.options.values())\n    const newList: OptionPublicInstance[] = []\n    states.optionValues.forEach((item) => {\n      const index = list.findIndex((i) => i.value === item)\n      if (index > -1) {\n        newList.push(list[index])\n      }\n    })\n    return newList.length >= list.length ? newList : list\n  })\n\n  const cachedOptionsArray = computed(() =>\n    Array.from(states.cachedOptions.values())\n  )\n\n  const showNewOption = computed(() => {\n    const hasExistingOption = optionsArray.value\n      .filter((option) => {\n        return !option.created\n      })\n      .some((option) => {\n        return option.currentLabel === states.inputValue\n      })\n    return (\n      props.filterable &&\n      props.allowCreate &&\n      states.inputValue !== '' &&\n      !hasExistingOption\n    )\n  })\n\n  const updateOptions = () => {\n    if (props.filterable && isFunction(props.filterMethod)) return\n    if (props.filterable && props.remote && isFunction(props.remoteMethod))\n      return\n    optionsArray.value.forEach((option) => {\n      option.updateOption?.(states.inputValue)\n    })\n  }\n\n  const selectSize = useFormSize()\n\n  const collapseTagSize = computed(() =>\n    ['small'].includes(selectSize.value) ? 'small' : 'default'\n  )\n\n  const dropdownMenuVisible = computed({\n    get() {\n      return expanded.value && !isRemoteSearchEmpty.value\n    },\n    set(val: boolean) {\n      expanded.value = val\n    },\n  })\n\n  const shouldShowPlaceholder = computed(() => {\n    if (props.multiple && !isUndefined(props.modelValue)) {\n      return ensureArray(props.modelValue).length === 0 && !states.inputValue\n    }\n    const value = isArray(props.modelValue)\n      ? props.modelValue[0]\n      : props.modelValue\n    return props.filterable || isUndefined(value) ? !states.inputValue : true\n  })\n\n  const currentPlaceholder = computed(() => {\n    const _placeholder = props.placeholder ?? t('el.select.placeholder')\n    return props.multiple || !hasModelValue.value\n      ? _placeholder\n      : states.selectedLabel\n  })\n\n  // iOS Safari does not handle click events when a mouseenter event is registered and a DOM-change happens in a child\n  // We use a Vue custom event binding to only register the event on non-iOS devices\n  // ref.: https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\n  // Github Issue: https://github.com/vuejs/vue/issues/9859\n  const mouseEnterEventName = computed(() => (isIOS ? null : 'mouseenter'))\n\n  watch(\n    () => props.modelValue,\n    (val, oldVal) => {\n      if (props.multiple) {\n        if (props.filterable && !props.reserveKeyword) {\n          states.inputValue = ''\n          handleQueryChange('')\n        }\n      }\n      setSelected()\n      if (!isEqual(val, oldVal) && props.validateEvent) {\n        formItem?.validate('change').catch((err) => debugWarn(err))\n      }\n    },\n    {\n      flush: 'post',\n      deep: true,\n    }\n  )\n\n  watch(\n    () => expanded.value,\n    (val) => {\n      if (val) {\n        handleQueryChange(states.inputValue)\n      } else {\n        states.inputValue = ''\n        states.previousQuery = null\n        states.isBeforeHide = true\n      }\n      emit('visible-change', val)\n    }\n  )\n\n  watch(\n    // fix `Array.prototype.push/splice/..` cannot trigger non-deep watcher\n    // https://github.com/vuejs/vue-next/issues/2116\n    () => states.options.entries(),\n    () => {\n      if (!isClient) return\n      // tooltipRef.value?.updatePopper?.()\n      setSelected()\n      if (\n        props.defaultFirstOption &&\n        (props.filterable || props.remote) &&\n        filteredOptionsCount.value\n      ) {\n        checkDefaultFirstOption()\n      }\n    },\n    {\n      flush: 'post',\n    }\n  )\n\n  watch([() => states.hoveringIndex, optionsArray], ([val]) => {\n    if (isNumber(val) && val > -1) {\n      hoverOption.value = optionsArray.value[val] || {}\n    } else {\n      hoverOption.value = {}\n    }\n    optionsArray.value.forEach((option) => {\n      option.hover = hoverOption.value === option\n    })\n  })\n\n  watchEffect(() => {\n    // Anything could cause options changed, then update options\n    // If you want to control it by condition, write here\n    if (states.isBeforeHide) return\n    updateOptions()\n  })\n\n  const handleQueryChange = (val: string) => {\n    if (states.previousQuery === val || isComposing.value) {\n      return\n    }\n    states.previousQuery = val\n    if (props.filterable && isFunction(props.filterMethod)) {\n      props.filterMethod(val)\n    } else if (\n      props.filterable &&\n      props.remote &&\n      isFunction(props.remoteMethod)\n    ) {\n      props.remoteMethod(val)\n    }\n    if (\n      props.defaultFirstOption &&\n      (props.filterable || props.remote) &&\n      filteredOptionsCount.value\n    ) {\n      nextTick(checkDefaultFirstOption)\n    } else {\n      nextTick(updateHoveringIndex)\n    }\n  }\n\n  /**\n   * find and highlight first option as default selected\n   * @remark\n   * - if the first option in dropdown list is user-created,\n   *   it would be at the end of the optionsArray\n   *   so find it and set hover.\n   *   (NOTE: there must be only one user-created option in dropdown list with query)\n   * - if there's no user-created option in list, just find the first one as usual\n   *   (NOTE: exclude options that are disabled or in disabled-group)\n   */\n  const checkDefaultFirstOption = () => {\n    const optionsInDropdown = optionsArray.value.filter(\n      (n) => n.visible && !n.disabled && !n.states.groupDisabled\n    )\n    const userCreatedOption = optionsInDropdown.find((n) => n.created)\n    const firstOriginOption = optionsInDropdown[0]\n    const valueList = optionsArray.value.map((item) => item.value)\n    states.hoveringIndex = getValueIndex(\n      valueList,\n      userCreatedOption || firstOriginOption\n    )\n  }\n\n  const setSelected = () => {\n    if (!props.multiple) {\n      const value = isArray(props.modelValue)\n        ? props.modelValue[0]\n        : props.modelValue\n      const option = getOption(value)\n      states.selectedLabel = option.currentLabel\n      states.selected = [option]\n      return\n    } else {\n      states.selectedLabel = ''\n    }\n    const result: SelectStates['selected'] = []\n    if (!isUndefined(props.modelValue)) {\n      ensureArray(props.modelValue).forEach((value) => {\n        result.push(getOption(value))\n      })\n    }\n    states.selected = result\n  }\n\n  const getOption = (value: OptionValue) => {\n    let option\n    const isObjectValue = isPlainObject(value)\n\n    for (let i = states.cachedOptions.size - 1; i >= 0; i--) {\n      const cachedOption = cachedOptionsArray.value[i]\n      const isEqualValue = isObjectValue\n        ? get(cachedOption.value, props.valueKey) === get(value, props.valueKey)\n        : cachedOption.value === value\n      if (isEqualValue) {\n        option = {\n          index: optionsArray.value\n            .filter((opt) => !opt.created)\n            .indexOf(cachedOption),\n          value,\n          currentLabel: cachedOption.currentLabel,\n          get isDisabled() {\n            return cachedOption.isDisabled\n          },\n        }\n        break\n      }\n    }\n    if (option) return option\n    const label = isObjectValue ? value.label : value ?? ''\n    const newOption = {\n      index: -1,\n      value,\n      currentLabel: label,\n    }\n    return newOption\n  }\n\n  const updateHoveringIndex = () => {\n    states.hoveringIndex = optionsArray.value.findIndex((item) =>\n      states.selected.some(\n        (selected) => getValueKey(selected) === getValueKey(item)\n      )\n    )\n  }\n\n  const resetSelectionWidth = () => {\n    states.selectionWidth = Number.parseFloat(\n      window.getComputedStyle(selectionRef.value!).width\n    )\n  }\n\n  const resetCollapseItemWidth = () => {\n    states.collapseItemWidth =\n      collapseItemRef.value!.getBoundingClientRect().width\n  }\n\n  const updateTooltip = () => {\n    tooltipRef.value?.updatePopper?.()\n  }\n\n  const updateTagTooltip = () => {\n    tagTooltipRef.value?.updatePopper?.()\n  }\n\n  const onInputChange = () => {\n    if (states.inputValue.length > 0 && !expanded.value) {\n      expanded.value = true\n    }\n    handleQueryChange(states.inputValue)\n  }\n\n  const onInput = (event: Event) => {\n    states.inputValue = (event.target as HTMLInputElement).value\n    if (props.remote) {\n      debouncedOnInputChange()\n    } else {\n      return onInputChange()\n    }\n  }\n\n  const debouncedOnInputChange = lodashDebounce(() => {\n    onInputChange()\n  }, debounce.value)\n\n  const emitChange = (val: OptionValue | OptionValue[]) => {\n    if (!isEqual(props.modelValue, val)) {\n      emit(CHANGE_EVENT, val)\n    }\n  }\n\n  const getLastNotDisabledIndex = (value: OptionValue[]) =>\n    findLastIndex(value, (it) => {\n      const option = states.cachedOptions.get(it)\n      return option && !option.disabled && !option.states.groupDisabled\n    })\n\n  const deletePrevTag = (e: KeyboardEvent) => {\n    if (!props.multiple) return\n    if (e.code === EVENT_CODE.delete) return\n    if ((e.target as HTMLInputElement).value.length <= 0) {\n      const value = ensureArray(props.modelValue).slice()\n      const lastNotDisabledIndex = getLastNotDisabledIndex(value)\n      if (lastNotDisabledIndex < 0) return\n      const removeTagValue = value[lastNotDisabledIndex]\n      value.splice(lastNotDisabledIndex, 1)\n      emit(UPDATE_MODEL_EVENT, value)\n      emitChange(value)\n      emit('remove-tag', removeTagValue)\n    }\n  }\n\n  const deleteTag = (event: MouseEvent, tag: OptionBasic) => {\n    const index = states.selected.indexOf(tag)\n    if (index > -1 && !selectDisabled.value) {\n      const value = ensureArray(props.modelValue).slice()\n      value.splice(index, 1)\n      emit(UPDATE_MODEL_EVENT, value)\n      emitChange(value)\n      emit('remove-tag', tag.value)\n    }\n    event.stopPropagation()\n    focus()\n  }\n\n  const deleteSelected = (event: Event) => {\n    event.stopPropagation()\n    const value = props.multiple ? [] : valueOnClear.value\n    if (props.multiple) {\n      for (const item of states.selected) {\n        if (item.isDisabled) value.push(item.value)\n      }\n    }\n    emit(UPDATE_MODEL_EVENT, value)\n    emitChange(value)\n    states.hoveringIndex = -1\n    expanded.value = false\n    emit('clear')\n    focus()\n  }\n\n  const handleOptionSelect = (option: OptionPublicInstance) => {\n    if (props.multiple) {\n      const value = ensureArray(props.modelValue ?? []).slice()\n      const optionIndex = getValueIndex(value, option)\n      if (optionIndex > -1) {\n        value.splice(optionIndex, 1)\n      } else if (\n        props.multipleLimit <= 0 ||\n        value.length < props.multipleLimit\n      ) {\n        value.push(option.value)\n      }\n      emit(UPDATE_MODEL_EVENT, value)\n      emitChange(value)\n      if (option.created) {\n        handleQueryChange('')\n      }\n      if (props.filterable && !props.reserveKeyword) {\n        states.inputValue = ''\n      }\n    } else {\n      emit(UPDATE_MODEL_EVENT, option.value)\n      emitChange(option.value)\n      expanded.value = false\n    }\n    focus()\n    if (expanded.value) return\n    nextTick(() => {\n      scrollToOption(option)\n    })\n  }\n\n  const getValueIndex = (arr: OptionValue[], option: OptionPublicInstance) => {\n    if (isUndefined(option)) return -1\n    if (!isObject(option.value)) return arr.indexOf(option.value)\n\n    return arr.findIndex((item) => {\n      return isEqual(get(item, props.valueKey), getValueKey(option))\n    })\n  }\n\n  const scrollToOption = (\n    option:\n      | OptionPublicInstance\n      | OptionPublicInstance[]\n      | SelectStates['selected']\n  ) => {\n    const targetOption = isArray(option) ? option[0] : option\n    let target = null\n\n    if (targetOption?.value) {\n      const options = optionsArray.value.filter(\n        (item) => item.value === targetOption.value\n      )\n      if (options.length > 0) {\n        target = options[0].$el\n      }\n    }\n\n    if (tooltipRef.value && target) {\n      const menu = tooltipRef.value?.popperRef?.contentRef?.querySelector?.(\n        `.${nsSelect.be('dropdown', 'wrap')}`\n      )\n      if (menu) {\n        scrollIntoView(menu as HTMLElement, target)\n      }\n    }\n    scrollbarRef.value?.handleScroll()\n  }\n\n  const onOptionCreate = (vm: OptionPublicInstance) => {\n    states.options.set(vm.value, vm)\n    states.cachedOptions.set(vm.value, vm)\n  }\n\n  const onOptionDestroy = (key: OptionValue, vm: OptionPublicInstance) => {\n    if (states.options.get(key) === vm) {\n      states.options.delete(key)\n    }\n  }\n\n  const popperRef = computed(() => {\n    return tooltipRef.value?.popperRef?.contentRef\n  })\n\n  const handleMenuEnter = () => {\n    states.isBeforeHide = false\n    nextTick(() => {\n      scrollbarRef.value?.update()\n      scrollToOption(states.selected)\n    })\n  }\n\n  const focus = () => {\n    inputRef.value?.focus()\n  }\n\n  const blur = () => {\n    if (expanded.value) {\n      expanded.value = false\n      nextTick(() => inputRef.value?.blur())\n      return\n    }\n    inputRef.value?.blur()\n  }\n\n  const handleClearClick = (event: Event) => {\n    deleteSelected(event)\n  }\n\n  const handleClickOutside = (event: Event) => {\n    expanded.value = false\n\n    if (isFocused.value) {\n      const _event = new FocusEvent('blur', event)\n      nextTick(() => handleBlur(_event))\n    }\n  }\n\n  const handleEsc = () => {\n    if (states.inputValue.length > 0) {\n      states.inputValue = ''\n    } else {\n      expanded.value = false\n    }\n  }\n\n  const toggleMenu = () => {\n    if (selectDisabled.value) return\n\n    // We only set the inputHovering state to true on mouseenter event on iOS devices\n    // To keep the state updated we set it here to true\n    if (isIOS) states.inputHovering = true\n\n    if (states.menuVisibleOnFocus) {\n      // controlled by automaticDropdown\n      states.menuVisibleOnFocus = false\n    } else {\n      expanded.value = !expanded.value\n    }\n  }\n\n  const selectOption = () => {\n    if (!expanded.value) {\n      toggleMenu()\n    } else {\n      const option = optionsArray.value[states.hoveringIndex]\n      if (option && !option.isDisabled) {\n        handleOptionSelect(option)\n      }\n    }\n  }\n\n  const getValueKey = (\n    item: OptionPublicInstance | SelectStates['selected'][0]\n  ) => {\n    return isObject(item.value) ? get(item.value, props.valueKey) : item.value\n  }\n\n  const optionsAllDisabled = computed(() =>\n    optionsArray.value\n      .filter((option) => option.visible)\n      .every((option) => option.isDisabled)\n  )\n\n  const showTagList = computed(() => {\n    if (!props.multiple) {\n      return []\n    }\n    return props.collapseTags\n      ? states.selected.slice(0, props.maxCollapseTags)\n      : states.selected\n  })\n\n  const collapseTagList = computed(() => {\n    if (!props.multiple) {\n      return []\n    }\n    return props.collapseTags\n      ? states.selected.slice(props.maxCollapseTags)\n      : []\n  })\n\n  const navigateOptions = (direction: 'prev' | 'next') => {\n    if (!expanded.value) {\n      expanded.value = true\n      return\n    }\n    if (\n      states.options.size === 0 ||\n      filteredOptionsCount.value === 0 ||\n      isComposing.value\n    )\n      return\n\n    if (!optionsAllDisabled.value) {\n      if (direction === 'next') {\n        states.hoveringIndex++\n        if (states.hoveringIndex === states.options.size) {\n          states.hoveringIndex = 0\n        }\n      } else if (direction === 'prev') {\n        states.hoveringIndex--\n        if (states.hoveringIndex < 0) {\n          states.hoveringIndex = states.options.size - 1\n        }\n      }\n      const option = optionsArray.value[states.hoveringIndex]\n      if (option.isDisabled || !option.visible) {\n        navigateOptions(direction)\n      }\n      nextTick(() => scrollToOption(hoverOption.value))\n    }\n  }\n\n  const getGapWidth = () => {\n    if (!selectionRef.value) return 0\n    const style = window.getComputedStyle(selectionRef.value)\n    return Number.parseFloat(style.gap || '6px')\n  }\n\n  // computed style\n  const tagStyle = computed(() => {\n    const gapWidth = getGapWidth()\n    const inputSlotWidth = props.filterable ? gapWidth + MINIMUM_INPUT_WIDTH : 0\n    const maxWidth =\n      collapseItemRef.value && props.maxCollapseTags === 1\n        ? states.selectionWidth -\n          states.collapseItemWidth -\n          gapWidth -\n          inputSlotWidth\n        : states.selectionWidth - inputSlotWidth\n    return { maxWidth: `${maxWidth}px` }\n  })\n\n  const collapseTagStyle = computed(() => {\n    return { maxWidth: `${states.selectionWidth}px` }\n  })\n\n  const popupScroll = (data: { scrollTop: number; scrollLeft: number }) => {\n    emit('popup-scroll', data)\n  }\n\n  useResizeObserver(selectionRef, resetSelectionWidth)\n  useResizeObserver(wrapperRef, updateTooltip)\n  useResizeObserver(tagMenuRef, updateTagTooltip)\n  useResizeObserver(collapseItemRef, resetCollapseItemWidth)\n\n  // #21498\n  let stop: (() => void) | undefined\n  watch(\n    () => dropdownMenuVisible.value,\n    (newVal) => {\n      if (newVal) {\n        stop = useResizeObserver(menuRef, updateTooltip).stop\n      } else {\n        stop?.()\n        stop = undefined\n      }\n    }\n  )\n\n  onMounted(() => {\n    setSelected()\n  })\n\n  return {\n    inputId,\n    contentId,\n    nsSelect,\n    nsInput,\n    states,\n    isFocused,\n    expanded,\n    optionsArray,\n    hoverOption,\n    selectSize,\n    filteredOptionsCount,\n    updateTooltip,\n    updateTagTooltip,\n    debouncedOnInputChange,\n    onInput,\n    deletePrevTag,\n    deleteTag,\n    deleteSelected,\n    handleOptionSelect,\n    scrollToOption,\n    hasModelValue,\n    shouldShowPlaceholder,\n    currentPlaceholder,\n    mouseEnterEventName,\n    needStatusIcon,\n    showClearBtn,\n    iconComponent,\n    iconReverse,\n    validateState,\n    validateIcon,\n    showNewOption,\n    updateOptions,\n    collapseTagSize,\n    setSelected,\n    selectDisabled,\n    emptyText,\n    handleCompositionStart,\n    handleCompositionUpdate,\n    handleCompositionEnd,\n    onOptionCreate,\n    onOptionDestroy,\n    handleMenuEnter,\n    focus,\n    blur,\n    handleClearClick,\n    handleClickOutside,\n    handleEsc,\n    toggleMenu,\n    selectOption,\n    getValueKey,\n    navigateOptions,\n    dropdownMenuVisible,\n    showTagList,\n    collapseTagList,\n    popupScroll,\n    getOption,\n\n    // computed style\n    tagStyle,\n    collapseTagStyle,\n\n    // DOM ref\n    popperRef,\n    inputRef,\n    tooltipRef,\n    tagTooltipRef,\n    prefixRef,\n    suffixRef,\n    selectRef,\n    wrapperRef,\n    selectionRef,\n    scrollbarRef,\n    menuRef,\n    tagMenuRef,\n    collapseItemRef,\n  }\n}\n","import { defineComponent, inject } from 'vue'\nimport { isEqual } from 'lodash-unified'\nimport { isArray, isFunction, isString } from '@element-plus/utils'\nimport { selectKey } from './token'\n\nimport type { Component, VNode, VNodeNormalizedChildren } from 'vue'\nimport type { OptionValue } from './type'\n\nexport default defineComponent({\n  name: 'ElOptions',\n  setup(_, { slots }) {\n    const select = inject(selectKey)\n    let cachedValueList: OptionValue[] = []\n\n    return () => {\n      const children = slots.default?.()!\n      const valueList: OptionValue[] = []\n\n      function filterOptions(children?: VNodeNormalizedChildren) {\n        if (!isArray(children)) return\n        ;(children as VNode[]).forEach((item) => {\n          const name = ((item?.type || {}) as Component)?.name\n\n          if (name === 'ElOptionGroup') {\n            filterOptions(\n              !isString(item.children) &&\n                !isArray(item.children) &&\n                isFunction(item.children?.default)\n                ? item.children?.default()\n                : item.children\n            )\n          } else if (name === 'ElOption') {\n            valueList.push(item.props?.value)\n          } else if (isArray(item.children)) {\n            filterOptions(item.children)\n          }\n        })\n      }\n\n      if (children.length) {\n        filterOptions(children[0]?.children)\n      }\n\n      if (!isEqual(valueList, cachedValueList)) {\n        cachedValueList = valueList\n        if (select) {\n          select.states.optionValues = valueList\n        }\n      }\n\n      return children\n    }\n  },\n})\n","import { placements } from '@popperjs/core'\nimport { scrollbarEmits } from '@element-plus/components/scrollbar'\nimport {\n  useAriaProps,\n  useEmptyValuesProps,\n  useSizeProp,\n} from '@element-plus/hooks'\nimport {\n  EmitFn,\n  buildProps,\n  definePropType,\n  iconPropType,\n} from '@element-plus/utils'\nimport { useTooltipContentProps } from '@element-plus/components/tooltip'\nimport { ArrowDown, CircleClose } from '@element-plus/icons-vue'\nimport { tagProps } from '@element-plus/components/tag'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { defaultProps } from '@element-plus/components/select-v2/src/useProps'\n\nimport type {\n  CSSProperties,\n  ExtractPropTypes,\n  __ExtractPublicPropTypes,\n} from 'vue'\nimport type Select from './select.vue'\nimport type {\n  Options,\n  Placement,\n  PopperEffect,\n} from '@element-plus/components/popper'\nimport type { OptionValue } from './type'\nimport type { Props } from '@element-plus/components/select-v2/src/useProps'\n\nexport const selectProps = buildProps({\n  /**\n   * @description the name attribute of select input\n   */\n  name: String,\n  /**\n   * @description native input id\n   */\n  id: String,\n  /**\n   * @description binding value\n   */\n  modelValue: {\n    type: definePropType<OptionValue | OptionValue[] | null>([\n      Array,\n      String,\n      Number,\n      Boolean,\n      Object,\n    ]),\n    default: undefined,\n  },\n  /**\n   * @description the autocomplete attribute of select input\n   */\n  autocomplete: {\n    type: String,\n    default: 'off',\n  },\n  /**\n   * @description for non-filterable Select, this prop decides if the option menu pops up when the input is focused\n   */\n  automaticDropdown: Boolean,\n  /**\n   * @description size of Input\n   */\n  size: useSizeProp,\n  /**\n   * @description tooltip theme, built-in theme: `dark` / `light`\n   */\n  effect: {\n    type: definePropType<PopperEffect>(String),\n    default: 'light',\n  },\n  /**\n   * @description whether Select is disabled\n   */\n  disabled: Boolean,\n  /**\n   * @description whether select can be cleared\n   */\n  clearable: Boolean,\n  /**\n   * @description whether Select is filterable\n   */\n  filterable: Boolean,\n  /**\n   * @description whether creating new items is allowed. To use this, `filterable` must be true\n   */\n  allowCreate: Boolean,\n  /**\n   * @description whether Select is loading data from server\n   */\n  loading: Boolean,\n  /**\n   * @description custom class name for Select's dropdown\n   */\n  popperClass: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description custom style for Select's dropdown\n   */\n  popperStyle: {\n    type: definePropType<string | CSSProperties>([String, Object]),\n  },\n  /**\n   * @description [popper.js](https://popper.js.org/docs/v2/) parameters\n   */\n  popperOptions: {\n    type: definePropType<Partial<Options>>(Object),\n    default: () => ({} as Partial<Options>),\n  },\n  /**\n   * @description whether options are loaded from server\n   */\n  remote: Boolean,\n  /**\n   * @description displayed text while loading data from server, default is 'Loading'\n   */\n  loadingText: String,\n  /**\n   * @description displayed text when no data matches the filtering query, you can also use slot `empty`, default is 'No matching data'\n   */\n  noMatchText: String,\n  /**\n   * @description displayed text when there is no options, you can also use slot `empty`, default is 'No data'\n   */\n  noDataText: String,\n  /**\n   * @description function that gets called when the input value changes. Its parameter is the current input value. To use this, `filterable` must be true\n   */\n  remoteMethod: {\n    type: definePropType<(query: string) => void>(Function),\n  },\n  /**\n   * @description custom filter method, the first parameter is the current input value. To use this, `filterable` must be true\n   */\n  filterMethod: {\n    type: definePropType<(query: string) => void>(Function),\n  },\n  /**\n   * @description whether multiple-select is activated\n   */\n  multiple: Boolean,\n  /**\n   * @description maximum number of options user can select when `multiple` is `true`. No limit when set to 0\n   */\n  multipleLimit: {\n    type: Number,\n    default: 0,\n  },\n  /**\n   * @description placeholder, default is 'Select'\n   */\n  placeholder: {\n    type: String,\n  },\n  /**\n   * @description select first matching option on enter key. Use with `filterable` or `remote`\n   */\n  defaultFirstOption: Boolean,\n  /**\n   * @description when `multiple` and `filter` is true, whether to reserve current keyword after selecting an option\n   */\n  reserveKeyword: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description unique identity key name for value, required when value is an object\n   */\n  valueKey: {\n    type: String,\n    default: 'value',\n  },\n  /**\n   * @description whether to collapse tags to a text when multiple selecting\n   */\n  collapseTags: Boolean,\n  /**\n   * @description whether show all selected tags when mouse hover text of collapse-tags. To use this, `collapse-tags` must be true\n   */\n  collapseTagsTooltip: Boolean,\n  /**\n   * @description the max tags number to be shown. To use this, `collapse-tags` must be true\n   */\n  maxCollapseTags: {\n    type: Number,\n    default: 1,\n  },\n  /**\n   * @description whether select dropdown is teleported, if `true` it will be teleported to where `append-to` sets\n   */\n  teleported: useTooltipContentProps.teleported,\n  /**\n   * @description when select dropdown is inactive and `persistent` is `false`, select dropdown will be destroyed\n   */\n  persistent: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description custom clear icon component\n   */\n  clearIcon: {\n    type: iconPropType,\n    default: CircleClose,\n  },\n  /**\n   * @description whether the width of the dropdown is the same as the input\n   */\n  fitInputWidth: Boolean,\n  /**\n   * @description custom suffix icon component\n   */\n  suffixIcon: {\n    type: iconPropType,\n    default: ArrowDown,\n  },\n  /**\n   * @description tag type\n   */\n  // eslint-disable-next-line vue/require-prop-types\n  tagType: { ...tagProps.type, default: 'info' },\n  /**\n   * @description tag effect\n   */\n  tagEffect: { ...tagProps.effect, default: 'light' },\n  /**\n   * @description whether to trigger form validation\n   */\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description in remote search method show suffix icon\n   */\n  remoteShowSuffix: Boolean,\n  /**\n   * @description determines whether the arrow is displayed\n   */\n  showArrow: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description offset of the dropdown\n   */\n  offset: {\n    type: Number,\n    default: 12,\n  },\n  /**\n   * @description position of dropdown\n   */\n  placement: {\n    type: definePropType<Placement>(String),\n    values: placements,\n    default: 'bottom-start',\n  },\n  /**\n   * @description list of possible positions for dropdown\n   */\n  fallbackPlacements: {\n    type: definePropType<Placement[]>(Array),\n    default: ['bottom-start', 'top-start', 'right', 'left'],\n  },\n  /**\n   * @description tabindex for input\n   */\n  tabindex: {\n    type: [String, Number],\n    default: 0,\n  },\n  /**\n   * @description which element the selection dropdown appends to\n   */\n  appendTo: useTooltipContentProps.appendTo,\n  options: {\n    type: definePropType<Record<string, any>[]>(Array),\n  },\n  props: {\n    type: definePropType<SelectOptionProps>(Object),\n    default: () => defaultProps,\n  },\n  ...useEmptyValuesProps,\n  ...useAriaProps(['ariaLabel']),\n})\n/* eslint-disable @typescript-eslint/no-unused-vars */\nexport const selectEmits = {\n  [UPDATE_MODEL_EVENT]: (val: SelectProps['modelValue']) => true,\n  [CHANGE_EVENT]: (val: SelectProps['modelValue']) => true,\n  'popup-scroll': scrollbarEmits.scroll,\n  'remove-tag': (val: unknown) => true,\n  'visible-change': (visible: boolean) => true,\n  focus: (evt: FocusEvent) => evt instanceof FocusEvent,\n  blur: (evt: FocusEvent) => evt instanceof FocusEvent,\n  clear: () => true,\n}\n/* eslint-enable @typescript-eslint/no-unused-vars */\n\nexport type SelectProps = ExtractPropTypes<typeof selectProps>\nexport type SelectPropsPublic = __ExtractPublicPropTypes<typeof selectProps>\nexport type SelectEmits = EmitFn<typeof selectEmits>\nexport type SelectInstance = InstanceType<typeof Select> & unknown\nexport type SelectOptionProps = Props\n","<template>\n  <ul v-show=\"visible\" ref=\"groupRef\" :class=\"ns.be('group', 'wrap')\">\n    <li :class=\"ns.be('group', 'title')\">{{ label }}</li>\n    <li>\n      <ul :class=\"ns.b('group')\">\n        <slot />\n      </ul>\n    </li>\n  </ul>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  isVNode,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  toRefs,\n} from 'vue'\nimport { useMutationObserver } from '@vueuse/core'\nimport { ensureArray, isArray } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { selectGroupKey } from './token'\n\nimport type { Component, VNode, VNodeArrayChildren } from 'vue'\nimport type { OptionInternalInstance, OptionPublicInstance } from './type'\n\nexport default defineComponent({\n  name: 'ElOptionGroup',\n  componentName: 'ElOptionGroup',\n\n  props: {\n    /**\n     * @description name of the group\n     */\n    label: String,\n    /**\n     * @description whether to disable all options in this group\n     */\n    disabled: Boolean,\n  },\n  setup(props) {\n    const ns = useNamespace('select')\n    const groupRef = ref<HTMLElement>()\n    const instance = getCurrentInstance()!\n    const children = ref<OptionPublicInstance[]>([])\n\n    provide(\n      selectGroupKey,\n      reactive({\n        ...toRefs(props),\n      })\n    )\n\n    const visible = computed(() =>\n      children.value.some((option) => option.visible === true)\n    )\n\n    const isOption = (\n      node: VNode\n    ): node is VNode & { component: OptionInternalInstance } =>\n      (node.type as Component).name === 'ElOption' && !!node.component?.proxy\n\n    // get all instances of options\n    const flattedChildren = (node: VNode | VNodeArrayChildren) => {\n      const nodes = ensureArray(node) as VNode[] | VNodeArrayChildren\n      const children: OptionPublicInstance[] = []\n\n      nodes.forEach((child) => {\n        if (!isVNode(child)) return\n\n        if (isOption(child)) {\n          children.push(child.component.proxy)\n        } else if (isArray(child.children) && child.children.length) {\n          children.push(...flattedChildren(child.children))\n        } else if (child.component?.subTree) {\n          children.push(...flattedChildren(child.component.subTree))\n        }\n      })\n\n      return children\n    }\n\n    const updateChildren = () => {\n      children.value = flattedChildren(instance.subTree)\n    }\n\n    onMounted(() => {\n      updateChildren()\n    })\n\n    useMutationObserver(groupRef, updateChildren, {\n      attributes: true,\n      subtree: true,\n      childList: true,\n    })\n\n    return {\n      groupRef,\n      visible,\n      ns,\n    }\n  },\n})\n</script>\n","<template>\n  <div\n    ref=\"selectRef\"\n    v-click-outside:[popperRef]=\"handleClickOutside\"\n    :class=\"[nsSelect.b(), nsSelect.m(selectSize)]\"\n    @[mouseEnterEventName]=\"states.inputHovering = true\"\n    @mouseleave=\"states.inputHovering = false\"\n  >\n    <el-tooltip\n      ref=\"tooltipRef\"\n      :visible=\"dropdownMenuVisible\"\n      :placement=\"placement\"\n      :teleported=\"teleported\"\n      :popper-class=\"[nsSelect.e('popper'), popperClass]\"\n      :popper-style=\"popperStyle\"\n      :popper-options=\"popperOptions\"\n      :fallback-placements=\"fallbackPlacements\"\n      :effect=\"effect\"\n      pure\n      trigger=\"click\"\n      :transition=\"`${nsSelect.namespace.value}-zoom-in-top`\"\n      :stop-popper-mouse-event=\"false\"\n      :gpu-acceleration=\"false\"\n      :persistent=\"persistent\"\n      :append-to=\"appendTo\"\n      :show-arrow=\"showArrow\"\n      :offset=\"offset\"\n      @before-show=\"handleMenuEnter\"\n      @hide=\"states.isBeforeHide = false\"\n    >\n      <template #default>\n        <div\n          ref=\"wrapperRef\"\n          :class=\"[\n            nsSelect.e('wrapper'),\n            nsSelect.is('focused', isFocused),\n            nsSelect.is('hovering', states.inputHovering),\n            nsSelect.is('filterable', filterable),\n            nsSelect.is('disabled', selectDisabled),\n          ]\"\n          @click.prevent=\"toggleMenu\"\n        >\n          <div\n            v-if=\"$slots.prefix\"\n            ref=\"prefixRef\"\n            :class=\"nsSelect.e('prefix')\"\n          >\n            <slot name=\"prefix\" />\n          </div>\n          <div\n            ref=\"selectionRef\"\n            :class=\"[\n              nsSelect.e('selection'),\n              nsSelect.is(\n                'near',\n                multiple && !$slots.prefix && !!states.selected.length\n              ),\n            ]\"\n          >\n            <slot\n              v-if=\"multiple\"\n              name=\"tag\"\n              :data=\"states.selected\"\n              :delete-tag=\"deleteTag\"\n              :select-disabled=\"selectDisabled\"\n            >\n              <div\n                v-for=\"item in showTagList\"\n                :key=\"getValueKey(item)\"\n                :class=\"nsSelect.e('selected-item')\"\n              >\n                <el-tag\n                  :closable=\"!selectDisabled && !item.isDisabled\"\n                  :size=\"collapseTagSize\"\n                  :type=\"tagType\"\n                  :effect=\"tagEffect\"\n                  disable-transitions\n                  :style=\"tagStyle\"\n                  @close=\"deleteTag($event, item)\"\n                >\n                  <span :class=\"nsSelect.e('tags-text')\">\n                    <slot\n                      name=\"label\"\n                      :index=\"item.index\"\n                      :label=\"item.currentLabel\"\n                      :value=\"item.value\"\n                    >\n                      {{ item.currentLabel }}\n                    </slot>\n                  </span>\n                </el-tag>\n              </div>\n\n              <el-tooltip\n                v-if=\"collapseTags && states.selected.length > maxCollapseTags\"\n                ref=\"tagTooltipRef\"\n                :disabled=\"dropdownMenuVisible || !collapseTagsTooltip\"\n                :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n                :effect=\"effect\"\n                placement=\"bottom\"\n                :popper-class=\"popperClass\"\n                :popper-style=\"popperStyle\"\n                :teleported=\"teleported\"\n              >\n                <template #default>\n                  <div\n                    ref=\"collapseItemRef\"\n                    :class=\"nsSelect.e('selected-item')\"\n                  >\n                    <el-tag\n                      :closable=\"false\"\n                      :size=\"collapseTagSize\"\n                      :type=\"tagType\"\n                      :effect=\"tagEffect\"\n                      disable-transitions\n                      :style=\"collapseTagStyle\"\n                    >\n                      <span :class=\"nsSelect.e('tags-text')\">\n                        + {{ states.selected.length - maxCollapseTags }}\n                      </span>\n                    </el-tag>\n                  </div>\n                </template>\n                <template #content>\n                  <div ref=\"tagMenuRef\" :class=\"nsSelect.e('selection')\">\n                    <div\n                      v-for=\"item in collapseTagList\"\n                      :key=\"getValueKey(item)\"\n                      :class=\"nsSelect.e('selected-item')\"\n                    >\n                      <el-tag\n                        class=\"in-tooltip\"\n                        :closable=\"!selectDisabled && !item.isDisabled\"\n                        :size=\"collapseTagSize\"\n                        :type=\"tagType\"\n                        :effect=\"tagEffect\"\n                        disable-transitions\n                        @close=\"deleteTag($event, item)\"\n                      >\n                        <span :class=\"nsSelect.e('tags-text')\">\n                          <slot\n                            name=\"label\"\n                            :index=\"item.index\"\n                            :label=\"item.currentLabel\"\n                            :value=\"item.value\"\n                          >\n                            {{ item.currentLabel }}\n                          </slot>\n                        </span>\n                      </el-tag>\n                    </div>\n                  </div>\n                </template>\n              </el-tooltip>\n            </slot>\n            <div\n              :class=\"[\n                nsSelect.e('selected-item'),\n                nsSelect.e('input-wrapper'),\n                nsSelect.is('hidden', !filterable),\n              ]\"\n            >\n              <input\n                :id=\"inputId\"\n                ref=\"inputRef\"\n                v-model=\"states.inputValue\"\n                type=\"text\"\n                :name=\"name\"\n                :class=\"[nsSelect.e('input'), nsSelect.is(selectSize)]\"\n                :disabled=\"selectDisabled\"\n                :autocomplete=\"autocomplete\"\n                :style=\"inputStyle\"\n                :tabindex=\"tabindex\"\n                role=\"combobox\"\n                :readonly=\"!filterable\"\n                spellcheck=\"false\"\n                :aria-activedescendant=\"hoverOption?.id || ''\"\n                :aria-controls=\"contentId\"\n                :aria-expanded=\"dropdownMenuVisible\"\n                :aria-label=\"ariaLabel\"\n                aria-autocomplete=\"none\"\n                aria-haspopup=\"listbox\"\n                @keydown.down.stop.prevent=\"navigateOptions('next')\"\n                @keydown.up.stop.prevent=\"navigateOptions('prev')\"\n                @keydown.esc.stop.prevent=\"handleEsc\"\n                @keydown.enter.stop.prevent=\"selectOption\"\n                @keydown.delete.stop=\"deletePrevTag\"\n                @compositionstart=\"handleCompositionStart\"\n                @compositionupdate=\"handleCompositionUpdate\"\n                @compositionend=\"handleCompositionEnd\"\n                @input=\"onInput\"\n                @click.stop=\"toggleMenu\"\n              />\n              <span\n                v-if=\"filterable\"\n                ref=\"calculatorRef\"\n                aria-hidden=\"true\"\n                :class=\"nsSelect.e('input-calculator')\"\n                v-text=\"states.inputValue\"\n              />\n            </div>\n            <div\n              v-if=\"shouldShowPlaceholder\"\n              :class=\"[\n                nsSelect.e('selected-item'),\n                nsSelect.e('placeholder'),\n                nsSelect.is(\n                  'transparent',\n                  !hasModelValue || (expanded && !states.inputValue)\n                ),\n              ]\"\n            >\n              <slot\n                v-if=\"hasModelValue\"\n                name=\"label\"\n                :index=\"getOption(modelValue!).index\"\n                :label=\"currentPlaceholder\"\n                :value=\"modelValue\"\n              >\n                <span>{{ currentPlaceholder }}</span>\n              </slot>\n              <span v-else>{{ currentPlaceholder }}</span>\n            </div>\n          </div>\n          <div ref=\"suffixRef\" :class=\"nsSelect.e('suffix')\">\n            <el-icon\n              v-if=\"iconComponent && !showClearBtn\"\n              :class=\"[nsSelect.e('caret'), nsSelect.e('icon'), iconReverse]\"\n            >\n              <component :is=\"iconComponent\" />\n            </el-icon>\n            <el-icon\n              v-if=\"showClearBtn && clearIcon\"\n              :class=\"[\n                nsSelect.e('caret'),\n                nsSelect.e('icon'),\n                nsSelect.e('clear'),\n              ]\"\n              @click=\"handleClearClick\"\n            >\n              <component :is=\"clearIcon\" />\n            </el-icon>\n            <el-icon\n              v-if=\"validateState && validateIcon && needStatusIcon\"\n              :class=\"[\n                nsInput.e('icon'),\n                nsInput.e('validateIcon'),\n                nsInput.is('loading', validateState === 'validating'),\n              ]\"\n            >\n              <component :is=\"validateIcon\" />\n            </el-icon>\n          </div>\n        </div>\n      </template>\n      <template #content>\n        <el-select-menu ref=\"menuRef\">\n          <div\n            v-if=\"$slots.header\"\n            :class=\"nsSelect.be('dropdown', 'header')\"\n            @click.stop\n          >\n            <slot name=\"header\" />\n          </div>\n          <el-scrollbar\n            v-show=\"states.options.size > 0 && !loading\"\n            :id=\"contentId\"\n            ref=\"scrollbarRef\"\n            tag=\"ul\"\n            :wrap-class=\"nsSelect.be('dropdown', 'wrap')\"\n            :view-class=\"nsSelect.be('dropdown', 'list')\"\n            :class=\"[nsSelect.is('empty', filteredOptionsCount === 0)]\"\n            role=\"listbox\"\n            :aria-label=\"ariaLabel\"\n            aria-orientation=\"vertical\"\n            @scroll=\"popupScroll\"\n          >\n            <el-option\n              v-if=\"showNewOption\"\n              :value=\"states.inputValue\"\n              :created=\"true\"\n            />\n            <el-options>\n              <slot>\n                <template v-for=\"(option, index) in options\" :key=\"index\">\n                  <el-option-group\n                    v-if=\"getOptions(option)?.length\"\n                    :label=\"getLabel(option)\"\n                    :disabled=\"getDisabled(option)\"\n                  >\n                    <el-option\n                      v-for=\"item in getOptions(option)\"\n                      :key=\"getValue(item)\"\n                      v-bind=\"getOptionProps(item)\"\n                    />\n                  </el-option-group>\n                  <el-option v-else v-bind=\"getOptionProps(option)\" />\n                </template>\n              </slot>\n            </el-options>\n          </el-scrollbar>\n          <div\n            v-if=\"$slots.loading && loading\"\n            :class=\"nsSelect.be('dropdown', 'loading')\"\n          >\n            <slot name=\"loading\" />\n          </div>\n          <div\n            v-else-if=\"loading || filteredOptionsCount === 0\"\n            :class=\"nsSelect.be('dropdown', 'empty')\"\n          >\n            <slot name=\"empty\">\n              <span>{{ emptyText }}</span>\n            </slot>\n          </div>\n          <div\n            v-if=\"$slots.footer\"\n            :class=\"nsSelect.be('dropdown', 'footer')\"\n            @click.stop\n          >\n            <slot name=\"footer\" />\n          </div>\n        </el-select-menu>\n      </template>\n    </el-tooltip>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, getCurrentInstance, onBeforeUnmount, provide, reactive, toRefs, watch } from 'vue'\nimport { ClickOutside } from '@element-plus/directives'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElTag from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { flattedChildren, isArray, isObject } from '@element-plus/utils'\nimport { useCalcInputWidth } from '@element-plus/hooks'\nimport { useProps } from '@element-plus/components/select-v2/src/useProps'\nimport ElOption from './option.vue'\nimport ElSelectMenu from './select-dropdown.vue'\nimport { useSelect } from './useSelect'\nimport { selectKey } from './token'\nimport ElOptions from './options'\nimport { selectProps } from './select'\nimport ElOptionGroup from './option-group.vue';\n\nimport type { VNode } from 'vue';\nimport type { SelectContext } from './type'\n\nconst COMPONENT_NAME = 'ElSelect'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  componentName: COMPONENT_NAME,\n  components: {\n    ElSelectMenu,\n    ElOption,\n    ElOptions,\n    ElOptionGroup,\n    ElTag,\n    ElScrollbar,\n    ElTooltip,\n    ElIcon,\n  },\n  directives: { ClickOutside },\n  props: selectProps,\n  emits: [\n    UPDATE_MODEL_EVENT,\n    CHANGE_EVENT,\n    'remove-tag',\n    'clear',\n    'visible-change',\n    'focus',\n    'blur',\n    'popup-scroll',\n  ],\n\n  setup(props, { emit, slots }) {\n    const instance = getCurrentInstance()!\n    instance.appContext.config.warnHandler = (...args) => {\n      // Overrides warnings about slots not being executable outside of a render function.\n      // We call slot below just to simulate data when persist is false, this warning message should be ignored\n      if (!args[0] || args[0].includes('Slot \"default\" invoked outside of the render function')) {\n        return\n      }\n      // eslint-disable-next-line no-console\n      console.warn(...args)\n    }\n    const modelValue = computed(() => {\n      const { modelValue: rawModelValue, multiple } = props\n      const fallback = multiple ? [] : undefined\n      // When it is array, we check if this is multi-select.\n      // Based on the result we get\n      if (isArray(rawModelValue)) {\n        return multiple ? rawModelValue : fallback\n      }\n\n      return multiple ? fallback : rawModelValue\n    })\n\n    const _props = reactive({\n      ...toRefs(props),\n      modelValue,\n    })\n\n    const API = useSelect(_props, emit)\n    const { calculatorRef, inputStyle } = useCalcInputWidth()\n    const { getLabel, getValue, getOptions, getDisabled } = useProps(props)\n\n    const getOptionProps = (option: Record<string, any>) => ({\n      label: getLabel(option),\n      value: getValue(option),\n      disabled: getDisabled(option)\n    })\n\n    const flatTreeSelectData = (data: any[]) => {\n      return data.reduce((acc, item) => {\n        acc.push(item)\n        if (item.children && item.children.length > 0) {\n          acc.push(...flatTreeSelectData(item.children))\n        }\n        return acc\n      }, [])\n    }\n\n    const manuallyRenderSlots = (vnodes: VNode[] | undefined) => {\n      // After option rendering is completed, the useSelect internal state can collect the value of each option.\n      // If the persistent value is false, option will not be rendered by default, so in this case,\n      // manually render and load option data here.\n      const children = flattedChildren(vnodes || []) as VNode[]\n      children.forEach((item) => {\n        // @ts-expect-error\n        if (isObject(item) && (item.type.name === 'ElOption' || item.type.name === 'ElTree')) {\n          // @ts-expect-error\n          const _name = item.type.name\n          if (_name === 'ElTree') {\n            // tree-select component is a special case.\n            // So we need to handle it separately.\n            const treeData = item.props?.data || []\n            const flatData = flatTreeSelectData(treeData)\n            flatData.forEach((treeItem: any) => {\n              treeItem.currentLabel = treeItem.label || (isObject(treeItem.value) ? '' : treeItem.value)\n              API.onOptionCreate(treeItem)\n            })\n          } else if (_name === 'ElOption') {\n            const obj = { ...item.props } as any\n            obj.currentLabel = obj.label || (isObject(obj.value) ? '' : obj.value)\n            API.onOptionCreate(obj)\n          }\n        }\n      })\n    }\n    watch(() => {\n      const slotsContent = slots.default?.()\n      return slotsContent\n    }, newSlot => {\n      if (props.persistent) {\n        // If persistent is true, we don't need to manually render slots.\n        return\n      }\n      manuallyRenderSlots(newSlot)\n    }, {\n      immediate: true,\n    })\n\n    provide(\n      selectKey,\n      reactive({\n        props: _props,\n        states: API.states,\n        selectRef: API.selectRef,\n        optionsArray: API.optionsArray,\n        setSelected: API.setSelected,\n        handleOptionSelect: API.handleOptionSelect,\n        onOptionCreate: API.onOptionCreate,\n        onOptionDestroy: API.onOptionDestroy,\n      }) satisfies SelectContext\n    )\n\n    const selectedLabel = computed(() => {\n      if (!props.multiple) {\n        return API.states.selectedLabel\n      }\n      return API.states.selected.map((i) => i.currentLabel as string)\n    })\n\n    onBeforeUnmount(() => {\n      // https://github.com/element-plus/element-plus/issues/21279\n      instance.appContext.config.warnHandler = undefined\n    })\n\n    return {\n      ...API,\n      modelValue,\n      selectedLabel,\n      calculatorRef,\n      inputStyle,\n      getLabel,\n      getValue,\n      getOptions,\n      getDisabled,\n      getOptionProps,\n    }\n  },\n})\n</script>\n","import { withInstall, withNoopInstall } from '@element-plus/utils'\nimport Select from './src/select.vue'\nimport Option from './src/option.vue'\nimport OptionGroup from './src/option-group.vue'\n\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nexport const ElSelect: SFCWithInstall<typeof Select> & {\n  Option: typeof Option\n  OptionGroup: typeof OptionGroup\n} = withInstall(Select, {\n  Option,\n  OptionGroup,\n})\nexport default ElSelect\nexport const ElOption: SFCWithInstall<typeof Option> = withNoopInstall(Option)\nexport const ElOptionGroup: SFCWithInstall<typeof OptionGroup> =\n  withNoopInstall(OptionGroup)\n\nexport * from './src/token'\nexport * from './src/select'\n\nexport type {\n  SelectContext,\n  OptionPublicInstance as SelectOptionProxy,\n  OptionBasic,\n} from './src/type'\n"],"names":["GAP","BAR_MAP","vertical","offset","scroll","scrollSize","size","key","axis","client","direction","horizontal","renderThumbStyle","move","bar","transform","scrollbarContextKey","Symbol","thumbProps","buildProps","Boolean","String","Number","ratio","type","required","always","scrollbar","inject","ns","useNamespace","throwError","COMPONENT_NAME","instance","ref","thumb","thumbState","visible","cursorDown","cursorLeave","baseScrollHeight","baseScrollWidth","originalOnSelectStart","isClient","document","onselectstart","computed","props","thumbStyle","value","offsetRatio","wrapElement","clickThumbHandler","e","_a","stopPropagation","ctrlKey","includes","button","window","getSelection","removeAllRanges","startDrag","el","currentTarget","getBoundingClientRect","clickTrackHandler","Math","abs","target","thumbHalf","thumbPositionPercentage","stopImmediatePropagation","scrollHeight","scrollWidth","addEventListener","mouseMoveDocumentHandler","mouseUpDocumentHandler","prevPage","thumbClickPosition","removeEventListener","restoreOnselectstart","mouseMoveScrollbarHandler","mouseLeaveScrollbarHandler","onBeforeUnmount","useEventListener","toRef","_ctx","_cache","openBlock","createBlock","Transition","name","unref","b","persisted","default","withCtx","withDirectives","createElementVNode","ref_key","class","normalizeClass","is","barProps","minSize","moveX","moveY","sizeWidth","sizeHeight","ratioY","ratioX","handleScroll","wrap","offsetHeight","offsetWidth","scrollTop","scrollLeft","update","originalHeight","originalWidth","height","max","width","expose","stopResizeObserver","stopWrapResizeObserver","stopResizeListener","wrapScrollTop","wrapScrollLeft","distanceScrollState","bottom","top","right","left","scrollbarRef","wrapRef","resizeRef","barRef","wrapStyle","style","addUnit","maxHeight","wrapKls","wrapClass","em","native","resizeKls","viewClass","shouldSkipDirection","direction2","DIRECTION_PAIRS","updateTriggerStatus","arrivedStates","oppositeDirection","arrived","oppositeArrived","prevTop","prevLeft","clientHeight","distance","clientWidth","emit","scrollTo","arg1","arg2","isObject","isNumber","setScrollTop","setScrollLeft","watch","noresize","stop","useResizeObserver","immediate","nextTick","provide","reactive","scrollbarElement","onActivated","onMounted","onUpdated","createElementBlock","ElScrollbar","withInstall","Scrollbar","scrollbarProps","definePropType","Object","Array","viewStyle","tag","tabindex","id","role","useAriaProps","scrollbarEmits","every","rowContextKey","NAME","OnlyChild","defineComponent","slots","attrs","forwardRefInjection","FORWARD_REF_INJECTION_KEY","forwardRefDirective","useForwardRefDirective","setForwardRef","NOOP","_a2","defaultSlot","call","firstLegitNode","length","findFirstLegitChild","node","children","len","filter","c","Comment","child","Text","wrapTextContent","Fragment","s","RowJustify","RowAlign","rowProps","gutter","justify","values","align","styles","marginRight","marginLeft","rowKls","ElRow","Row","rateProps","modelValue","lowThreshold","highThreshold","colors","mutable","voidColor","disabledVoidColor","icons","StarFilled","voidIcon","iconPropType","Star","disabledVoidIcon","disabled","allowHalf","showText","showScore","textColor","texts","scoreTemplate","useSizeProp","clearable","rateEmits","CHANGE_EVENT","UPDATE_MODEL_EVENT","getValueFromMap","map","isExcludedObject","val","matchedKeys","keys","excluded","sort","a","matchedValue","formContext","formContextKey","formItemContext","formItemContextKey","rateSize","useFormSize","inputId","isLabeledByFormItem","useFormItemInputId","currentValue","hoverIndex","pointerAtLeftHalf","iconRefs","iconClientWidths","icon","$el","rateClasses","m","rateDisabled","rateStyles","cssVarBlock","activeColor","text","result","replace","ceil","valueDecimal","floor","colorMap","isArray","color","decimalStyle","componentMap","markRaw","decimalIconComponent","voidComponent","isString","activeComponent","showDecimalIcon","item","showWhenDisabled","showWhenAllowHalf","emitValue","selectValue","handleKey","code","step","_currentValue","EVENT_CODE","up","down","clamp","preventDefault","setCurrentValue","event","offsetX","resetCurrentValue","ariaLabel","labelId","normalizeStyle","onKeydown","renderList","ElRate","Rate","defaultProps","label","options","useProps","aliasProps","getLabel","option","get","getValue","getDisabled","getOptions","selectGroupKey","selectKey","optionProps","created","useOption","states","select","selectGroup","itemSelected","contains","castArray","limitReached","multiple","multipleLimit","currentLabel","isDisabled","groupDisabled","getCurrentInstance","arr","valueKey","some","toRaw","hoverItem","hoveringIndex","optionsArray","indexOf","proxy","updateOption","query","regexp","RegExp","escapeStringRegexp","test","remote","setSelected","oldVal","shouldUpdate","isEqual","onOptionDestroy","onOptionCreate","_sfc_main","componentName","setup","useId","containerKls","be","hover","index","toRefs","vm","selectOptionClick","handleOptionSelect","selected","selectedOptions","doesSelected","cachedOptions","delete","onMousemove","onClick","withModifiers","renderSlot","$slots","toDisplayString","vShow","Option","_export_sfc","_sfc_render","popperClass","isMultiple","isFitInputWidth","fitInputWidth","minWidth","updateMinWidth","selectRef","BORDER_HORIZONTAL_WIDTH","$props","$setup","$data","$options","header","createCommentVNode","footer","ElSelectMenu","useSelect","t","useLocale","contentId","nsSelect","nsInput","inputValue","Map","optionValues","selectionWidth","collapseItemWidth","selectedLabel","previousQuery","inputHovering","menuVisibleOnFocus","isBeforeHide","selectionRef","tooltipRef","tagTooltipRef","inputRef","prefixRef","suffixRef","menuRef","tagMenuRef","collapseItemRef","expanded","hoverOption","form","formItem","useFormItem","valueOnClear","isEmptyValue","useEmptyValues","isComposing","handleCompositionStart","handleCompositionUpdate","handleCompositionEnd","useComposition","afterComposition","onInput","selectDisabled","wrapperRef","isFocused","handleBlur","useFocusController","afterFocus","automaticDropdown","beforeBlur","_b","isFocusInsideContent","afterBlur","validateEvent","validate","catch","err","debugWarn","hasModelValue","needStatusIcon","statusIcon","showClearBtn","iconComponent","filterable","remoteShowSuffix","suffixIcon","iconReverse","validateState","validateIcon","ValidateComponentsMap","debounce$1","isRemoteSearchEmpty","emptyText","loading","loadingText","filteredOptionsCount","noMatchText","noDataText","list","from","newList","forEach","findIndex","i","push","cachedOptionsArray","showNewOption","hasExistingOption","allowCreate","updateOptions","isFunction","filterMethod","remoteMethod","selectSize","collapseTagSize","dropdownMenuVisible","set","shouldShowPlaceholder","isUndefined","currentPlaceholder","_placeholder","placeholder","mouseEnterEventName","isIOS","reserveKeyword","handleQueryChange","flush","deep","entries","defaultFirstOption","checkDefaultFirstOption","watchEffect","updateHoveringIndex","optionsInDropdown","n","userCreatedOption","find","firstOriginOption","valueList","getValueIndex","getOption","isObjectValue","isPlainObject","cachedOption","isEqualValue","opt","newOption","getValueKey","resetSelectionWidth","parseFloat","getComputedStyle","resetCollapseItemWidth","updateTooltip","updatePopper","updateTagTooltip","onInputChange","debouncedOnInputChange","debounce","emitChange","getLastNotDisabledIndex","findLastIndex","it","deletePrevTag","slice","lastNotDisabledIndex","removeTagValue","splice","deleteTag","focus","deleteSelected","optionIndex","scrollToOption","_c","_d","_e","targetOption","menu","popperRef","contentRef","querySelector","scrollIntoView","handleMenuEnter","blur","handleClearClick","handleClickOutside","_event","FocusEvent","handleEsc","toggleMenu","selectOption","optionsAllDisabled","showTagList","collapseTags","maxCollapseTags","collapseTagList","navigateOptions","getGapWidth","gap","tagStyle","gapWidth","inputSlotWidth","MINIMUM_INPUT_WIDTH","maxWidth","collapseTagStyle","popupScroll","data","newVal","ElOptions","_","cachedValueList","filterOptions","children2","_b2","selectProps","autocomplete","effect","popperStyle","popperOptions","Function","collapseTagsTooltip","teleported","useTooltipContentProps","persistent","clearIcon","CircleClose","ArrowDown","tagType","tagProps","tagEffect","showArrow","placement","placements","fallbackPlacements","appendTo","useEmptyValuesProps","groupRef","isOption","component","flattedChildren","nodes","isVNode","subTree","updateChildren","useMutationObserver","attributes","subtree","childList","OptionGroup","components","ElOption","ElOptionGroup","ElTag","ElTooltip","ElIcon","directives","ClickOutside","emits","appContext","config","warnHandler","args","console","warn","rawModelValue","fallback","_props","API","calculatorRef","inputStyle","useCalcInputWidth","getOptionProps","flatTreeSelectData","reduce","acc","manuallyRenderSlots","vnodes","_name","treeData","flatData","treeItem","obj","slotsContent","newSlot","toHandlerKey","$event","onMouseleave","createVNode","_component_el_tooltip","pure","trigger","transition","namespace","onBeforeShow","onHide","prefix","_component_el_tag","closable","onClose","createTextVNode","readonly","spellcheck","withKeys","onCompositionupdate","onCompositionend","textContent","resolveDynamicComponent","_component_el_icon","content","_component_el_select_menu","_component_el_scrollbar","onScroll","_component_el_option","_component_el_options","_component_el_option_group","mergeProps","normalizeProps","_directive_click_outside","ElSelect","Select","withNoopInstall"],"sourceRoot":""}